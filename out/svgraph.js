class t{value;constructor(t){this.value=t}get text(){return this.value.toString()}getPos(t){return this.value/t}}const e="http://www.w3.org/2000/svg";function s(t,s,i=[]){const a=document.createElementNS(e,t);for(const t in s)void 0!==s[t]&&a.setAttribute(t,s[t]);for(const t of i??[])a.appendChild(t);return a}const i=(t={},...e)=>s("g",t,e),a=(t,...e)=>s("line",{...t,x1:t.from[0],y1:t.from[1],x2:t.to[0],y2:t.to[1],from:void 0,to:void 0},e),n=(t,...e)=>s("polyline",{...t,points:t.points.map((([t,e])=>`${t},${e}`)).join(" ")},e),r=(t,...e)=>s("text",t,e);class o{elem;data;maxX;maxY;xLabels;yLabels;resizeObserver;axisSize=40;constructor({data:t}){this.elem=((t,...i)=>s("svg",{...t,xmlns:e},i))({width:"100%",height:"100%",overflow:"visible"}),this.update(t,!1),this.resizeObserver=new ResizeObserver((t=>{this.draw(t[0].contentBoxSize[0].inlineSize,t[0].contentBoxSize[0].blockSize)})),this.resizeObserver.observe(this.elem,{box:"content-box"})}update(e,s=!0){this.data=Object.entries(e).sort(((t,e)=>e[1].max()-t[1].max())).map((([t,e])=>({name:t,values:e}))),this.maxX=this.data.map((({values:t})=>t.length-1)).max(),this.maxY=this.data[0].values.max(),this.xLabels=new Set(this.data.flatMap((({values:t})=>t.keys().toArray()))).values().toArray().sort().map((e=>new t(e))),this.yLabels=[0,10,30].map((e=>new t(e))),s&&this.draw(this.elem.clientWidth,this.elem.clientHeight)}draw(t,e){this.elem.innerHTML="",this.elem.appendChild(((t,...e)=>s("rect",t,e))({width:"100%",height:"100%",fill:"#EEE"})),this.elem.appendChild(this.lines(t-this.axisSize,e-this.axisSize)),this.elem.appendChild(this.axes(t,e))}axes(t,e){return i({class:"axes"},this.xAxis(this.axisSize,e-this.axisSize,t-this.axisSize,this.axisSize),this.yAxis(0,0,this.axisSize,e-this.axisSize))}xAxis=(t,e,s,n)=>i({class:"xaxis"},a({from:[t,e],to:[t+s,e],stroke:"black"}),...this.xLabels.map((i=>r({x:t+i.getPos(this.maxX)*s,y:e+20,"text-anchor":"middle"},new Text(i.text)))));yAxis=(t,e,s,n)=>i({class:"yaxis"},a({from:[t+s,e],to:[t+s,e+n],stroke:"black"}),...this.yLabels.map((i=>r({x:t+s-10,y:e+n-i.getPos(this.maxY)*n,"text-anchor":"end"},new Text(i.text)))));lines(t,e){const s=i({class:"lines",transform:`translate(${this.axisSize}, 0)`,"stroke-width":"2"});for(const{name:i,values:a}of this.data){const i=a.map(((s,i)=>[i*t/this.maxX,(1-s/this.maxY)*e]));s.appendChild(n({points:i,fill:"none",stroke:"black"}))}return s}}Array.prototype.max=function(){return this.reduce(((t,e)=>Math.max(t,e)),0)},Array.prototype.min=function(){return this.reduce(((t,e)=>Math.min(t,e)),0)};export{o as default};
//# sourceMappingURL=svgraph.js.map
