class e{value;constructor(e){this.value=e}get text(){return this.value.toString()}getPos(e){return this.value/e}}const t="http://www.w3.org/2000/svg";function s(e,s,i=[]){const a=document.createElementNS(t,e);for(const e in s)void 0!==s[e]&&a.setAttribute(e,s[e]);for(const e of i??[])a.appendChild(e);return a}const i=(e={},...t)=>s("g",e,t),a=(e,...t)=>s("line",{...e,x1:e.from[0],y1:e.from[1],x2:e.to[0],y2:e.to[1],from:void 0,to:void 0},t),l=(e,...t)=>s("polyline",{...e,points:e.points.map((([e,t])=>`${e},${t}`)).join(" ")},t),n=(e,...t)=>s("text",e,t);class r{elem;data;xLabels;yLabels;style;maxX;maxY;resizeObserver;constructor(e){this.elem=((e,...i)=>s("svg",{...e,xmlns:t},i))({width:"100%",height:"100%",overflow:"visible"}),this.update(e,!1),this.resizeObserver=new ResizeObserver((e=>{this.draw(e[0].contentBoxSize[0].inlineSize,e[0].contentBoxSize[0].blockSize)})),this.resizeObserver.observe(this.elem,{box:"content-box"})}update({data:t,xLabels:s,yLabels:i,style:a},l=!0){this.data=Object.entries(t).sort(((e,t)=>t[1].max()-e[1].max())).map((([e,t])=>({name:e,values:t}))),this.maxX=this.data.map((({values:e})=>e.length-1)).max(),this.maxY=this.data[0].values.max(),this.xLabels=s??new Set(this.data.flatMap((({values:e})=>e.keys().toArray()))).values().toArray().sort().map((t=>new e(t))),this.yLabels=i??[new e(0),new e(this.maxY)],this.style={xAxisSize:a?.xAxisSize??30,yAxisSize:a?.yAxisSize??30},l&&this.draw(this.elem.clientWidth,this.elem.clientHeight)}draw(e,t){this.elem.innerHTML="",this.elem.appendChild(((e,...t)=>s("rect",e,t))({width:"100%",height:"100%",fill:"#0001"})),this.elem.appendChild(this.lines(e-this.style.yAxisSize,t-this.style.xAxisSize)),this.elem.appendChild(this.axes(e,t))}axes(e,t){return i({class:"axes"},this.xAxis(this.style.yAxisSize,t-this.style.xAxisSize,e-this.style.yAxisSize,this.style.xAxisSize),this.yAxis(0,0,this.style.yAxisSize,t-this.style.xAxisSize))}xAxis=(e,t,s,l)=>i({class:"xaxis"},a({from:[e,t],to:[e+s,t],stroke:"black"}),...this.xLabels.map((i=>n({x:e+i.getPos(this.maxX)*s,y:t+20,"text-anchor":"middle"},new Text(i.text)))));yAxis=(e,t,s,l)=>i({class:"yaxis"},a({from:[e+s,t],to:[e+s,t+l],stroke:"black"}),...this.yLabels.map((i=>n({x:e+s-10,y:t+l-i.getPos(this.maxY)*l+5,"text-anchor":"end"},new Text(i.text)))));lines(e,t){const s=i({class:"lines",transform:`translate(${this.style.yAxisSize}, 0)`,"stroke-width":"2"});for(const{name:i,values:a}of this.data){const i=a.map(((s,i)=>[i*e/this.maxX,(1-s/this.maxY)*t]));s.appendChild(l({points:i,fill:"none",stroke:"black"}))}return s}}Array.prototype.max=function(){return this.reduce(((e,t)=>Math.max(e,t)),0)},Array.prototype.min=function(){return this.reduce(((e,t)=>Math.min(e,t)),0)};export{e as NumberLabel,r as default};
//# sourceMappingURL=svgraph.js.map
