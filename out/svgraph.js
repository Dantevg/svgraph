const t="http://www.w3.org/2000/svg";function e(e,s,i=[]){const n=document.createElementNS(t,e);for(const t in s)void 0!==s[t]&&n.setAttribute(t,s[t]);for(const t of i??[])n.appendChild(t);return n}const s=(t={},...s)=>e("g",t,s),i=(t,...s)=>e("line",{...t,x1:t.from[0],y1:t.from[1],x2:t.to[0],y2:t.to[1],from:void 0,to:void 0},s),n=(t,...s)=>e("text",t,s);function l(t,e,s=[]){const i=document.createElement(t);for(const t in e)void 0!==e[t]&&i.setAttribute(t,e[t]);for(const t of s??[])i.appendChild(t);return i}const a=(t={},...e)=>l("div",t,e),o=(t={},...e)=>l("p",t,e),r=(t={},...e)=>l("span",t,e),h=t=>"number"==typeof t?t:t.number;class c{min;max;constructor(t,e){this.min=t,this.max=e}static UNIT=new c(0,1);get span(){return h(this.max)-h(this.min)}contains=t=>h(this.min)<h(t)&&h(t)<h(this.max);clamp=t=>Math.max(h(this.min),Math.min(t,h(this.max)));normalize=t=>(t-h(this.min))/this.span;lerp=t=>h(this.min)+t*this.span}const d=(t,e)=>t.length>0?t.reduce(((t,s)=>e(t)<e(s)?t:s)):void 0,g=(t,e)=>t.length>0?t.reduce(((t,s)=>t[e]<s[e]?t:s)):void 0;function u(t,e,s){const i=s.map((({points:s})=>{return i=s.map((t=>t.label.getPos(e))),n=t,g(i.map(((t,e)=>[Math.abs(t-n),e])),0)[1];var i,n})),n=i.map(((t,e)=>s[e].points[t].label));return d(n,(s=>Math.abs(s.getPos(e)-t)))}const m=(t,e,s)=>g(t.map((t=>[t,Math.abs(t.label.getPos(s)-e.getPos(s))])),1)[0];class x extends HTMLElement{constructor(){super(),this.setAttribute("hidden","")}show(){this.removeAttribute("hidden")}hide(){this.setAttribute("hidden","")}move(t,e){this.style.left=`${t+20}px`,this.style.top=`${e}px`}update(t,e,s,i,n){this.move(t,e);const a=u(s,i,n);this.innerHTML="",this.appendChild(((t={},...e)=>l("h3",t,e))({},new Text(a.text)));const o=n.map((({name:t,colour:e,points:s})=>({name:t,colour:e,point:m(s,a,i)})));return this.setValues(o),this.show(),o.map((t=>t.point))}setValues(t){for(const{name:e,colour:s,point:{value:i}}of t)null!=i&&0!=i.number&&this.appendChild(o({},a({class:"swatch",style:`background-color: ${s}`}),r({class:"name"},new Text(e)),new Text(": "),r({class:"value"},new Text(i.text))))}}customElements.define("svg-popup",x);class p extends HTMLElement{callback;lines;disabled=new Set;constructor(t){super(),this.callback=t}update(t){this.lines=t,this.innerHTML="";for(const{name:e,colour:s}of t){const t=r({class:"legend-item"},a({class:"swatch",style:`background-color: ${s}`}),r({class:"name"},new Text(e)));this.appendChild(t),t.addEventListener("click",(()=>this.onLegendItemClick(e,t)))}}onLegendItemClick(t,e){this.disabled.has(t)?this.disabled.delete(t):this.disabled.add(t),e.classList.toggle("disabled",this.disabled.has(t)),this.callback()}}customElements.define("svg-legend",p);class y{value;constructor(t){this.value=t}get text(){return this.value.toString()}get number(){return this.value}get axisType(){return v}getPos=t=>t.normalize(this.number)}class v{range;constructor(t){this.range=t}getTicks(t){const e=Math.pow(10,Math.floor(Math.log10(this.range.span/t))-1),s=Math.floor(this.range.span/t/e)*e;return[...Array(Math.floor(this.range.span/s)+1).keys().map((t=>new y(Math.floor(t*s+this.range.min.number))))]}}class b{value;constructor(t){this.value=t}get text(){return this.value.toISOString().split("T")[0]}get number(){return this.value.valueOf()}get axisType(){return f}getPos=t=>t.normalize(this.number)}class f{range;constructor(t){this.range=t}getTicks(t){const e=this.range.span/24/60/60/1e3,s=e/30>t?30:e/7>t?7:1,i=Math.ceil(e/s/t)*s;return[...Array(Math.floor(e/i)+1).keys().map((t=>new b(new Date(t*i*24*60*60*1e3+this.range.min.number))))]}}class A{value;constructor(t){this.value=t}get text(){const t=new Date(1e3*this.value),e=Math.floor(this.value/24/60/60),s=t.getUTCHours(),i=t.getUTCMinutes(),n=t.getUTCSeconds()+t.getUTCMilliseconds()/1e3;return s>0||e>0?0==i?`${s+24*e} h`:`${s+24*e}:${String(i).padStart(2,"0")} h`:i>0?`${i}:${String(Math.floor(n)).padStart(2,"0")}`:`${n} s`}get number(){return this.value}get axisType(){return w}getPos=t=>t.normalize(this.number)}class w{range;constructor(t){this.range=t}getTicks(t){const e=this.range.span/24/60/60>t?86400:this.range.span/60/60>t?3600:this.range.span/60>t?60:1,s=Math.ceil(this.range.span/e/t)*e;return[...Array(Math.floor(this.range.span/s)+1).keys().map((t=>new A(t*s+this.range.min.number)))]}}class E{value;unit;constructor(t,e){this.value=t,this.unit=e}get text(){const t=E.largestOffset(this.value);return`${Math.floor(this.value/Math.pow(10,3*t))} ${E.units[t+E.unitsStartOffset]}${this.unit}`}get number(){return this.value}get axisType(){return k}getPos=t=>t.normalize(this.number);static units=["n","u","m","","k","M","G","T","P","E","Z","Y"];static unitsStartOffset=3;static largestOffset=t=>0==t?0:Math.floor(Math.log10(t)/3)}class k{range;constructor(t){this.range=t}getTicks=t=>[...Array(t).keys().map((e=>new E(Math.floor(this.range.lerp(e/(t-1))),this.range.min.unit)))]}class M extends HTMLElement{svgElem;popupElem;legendElem;guideElem;selectionElem;data;styles;xaxis;yaxis;resizeObserver;selection={};activeData;get canvasCoordRange(){return new c(this.styles.yAxis.width,this.svgElem.clientWidth)}constructor(s){super();const i=this.attachShadow({mode:"open"}),n=document.createElement("style");n.textContent=z,i.appendChild(n),null!=s.title&&i.appendChild(((t={},...e)=>l("h1",t,e))({class:"title"},new Text(s.title))),this.legendElem=new p((()=>this.updateActiveData())),i.appendChild(this.legendElem),this.svgElem=((s,...i)=>e("svg",{...s,xmlns:t},i))({width:"100%",height:"100%",overflow:"visible",fill:"white"}),this.svgElem.addEventListener("mousedown",(t=>this.onMouseDown(t))),this.svgElem.addEventListener("mouseup",(t=>this.onMouseUp(t))),this.svgElem.addEventListener("mousemove",(t=>this.onMouseMove(t))),this.svgElem.addEventListener("mouseleave",(t=>this.onMouseLeave(t))),i.appendChild(this.svgElem),this.popupElem=new x,i.appendChild(this.popupElem),this.update(s,!1)}connectedCallback(){this.resizeObserver=new ResizeObserver((t=>{const{inlineSize:e,blockSize:s}=t[0].contentBoxSize[0];e>0&&s>0&&this.draw(e,s)})),this.resizeObserver.observe(this.svgElem,{box:"content-box"})}update({data:t,title:e,styles:s},i=!0){this.styles={colourscheme:s?.colourscheme??["black"],xAxis:{height:s?.xAxis?.height??30,colour:s?.xAxis?.colour??"white",strokeWidth:s?.xAxis?.strokeWidth??1,labels:{spacing:s?.xAxis?.labels?.spacing??30,rotation:s?.xAxis?.labels?.rotation??0,colour:s?.xAxis?.labels?.colour??s?.xAxis?.colour??"#FFF8",fontSize:s?.xAxis?.labels?.fontSize??"0.8em"}},yAxis:{width:s?.yAxis?.width??30,colour:s?.yAxis?.colour??"white",strokeWidth:s?.yAxis?.strokeWidth??1,labels:{spacing:s?.yAxis?.labels?.spacing??50,rotation:s?.yAxis?.labels?.rotation??0,colour:s?.yAxis?.labels?.colour??s?.yAxis?.colour??"#FFF8",fontSize:s?.yAxis?.labels?.fontSize??"0.8em"}},grid:{stroke:s?.grid?.stroke??"#FFF2"},guideline:{stroke:s?.guideline?.stroke??"#FFF8",width:s?.guideline?.width??1,points:{r:s?.guideline?.points?.r??2,fill:s?.guideline?.points?.fill??"white"}},lines:{width:s?.lines?.width??2}},this.data=Object.entries(t).sort(((t,e)=>e[1].at(-1).value.number-t[1].at(-1).value.number)).map((([t,e],s,i)=>({name:t,points:e,colour:S(this.styles.colourscheme,(s+1)/(i.length+1))}))),this.xaxis=$(this.data,"label"),this.yaxis=$(this.data,"value"),this.legendElem.update(this.data),this.updateActiveData(i)}draw(t,e){this.svgElem.innerHTML="",this.svgElem.appendChild(this.grid(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height)),this.svgElem.appendChild(this.lines(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height)),this.svgElem.appendChild(this.axes(0,0,t,e)),this.guideElem=this.guide(e-this.styles.xAxis.height),this.svgElem.appendChild(this.guideElem),this.selectionElem=this.selectionOverlay(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height),this.svgElem.appendChild(this.selectionElem)}selectRange(t,e,s=!0){this.xaxis.range=new c(t,e),this.updateActiveData(!1)||(this.xaxis=$(this.data,"label"),this.updateActiveData(!1)),s&&this.draw(this.svgElem.clientWidth,this.svgElem.clientHeight)}updateActiveData(t=!0){const e=this.data.filter((({name:t})=>!this.legendElem.disabled.has(t))).map((({name:t,colour:e,points:s})=>({name:t,colour:e,points:s.filter((({label:t},e,s)=>this.xaxis.range.contains(t)||s[e-1]&&this.xaxis.range.contains(s[e-1].label)||s[e+1]&&this.xaxis.range.contains(s[e+1].label)))}))).filter((({points:t})=>t.length>0));return 0!=e.length&&(this.activeData=e,this.yaxis=$(this.activeData,"value"),t&&this.draw(this.svgElem.clientWidth,this.svgElem.clientHeight),!0)}axes(t,e,i,n){return s({class:"axes",transform:`translate(${t}, ${e})`},this.xAxis(this.styles.yAxis.width,n-this.styles.xAxis.height,i-this.styles.yAxis.width,this.styles.xAxis.height),this.yAxis(0,0,this.styles.yAxis.width,n-this.styles.xAxis.height))}xAxis=(t,e,l,a)=>s({class:"xaxis"},i({from:[t-this.styles.yAxis.strokeWidth,e+this.styles.xAxis.strokeWidth/2],to:[t+l,e+this.styles.xAxis.strokeWidth/2],stroke:this.styles.xAxis.colour,"stroke-width":this.styles.xAxis.strokeWidth}),...this.xaxis.getTicks(Math.floor(l/this.styles.xAxis.labels.spacing)).map((s=>n({class:"tick-label",x:t+s.getPos(this.xaxis.range)*l,y:e+20,transform:`rotate(${this.styles.xAxis.labels.rotation})`,"text-anchor":T(this.styles.xAxis.labels.rotation),style:`transform-origin: ${C(this.styles.xAxis.labels.rotation)}`,fill:this.styles.xAxis.labels.colour,"font-size":this.styles.xAxis.labels.fontSize},new Text(s.text)))));yAxis=(t,e,l,a)=>s({class:"yaxis"},i({from:[t+l-this.styles.yAxis.strokeWidth/2,e],to:[t+l-this.styles.yAxis.strokeWidth/2,e+a],stroke:this.styles.yAxis.colour,"stroke-width":this.styles.yAxis.strokeWidth}),...this.yaxis.getTicks(Math.floor(a/this.styles.yAxis.labels.spacing)).map((s=>n({class:"tick-label",x:t+l-10,y:e+(1-s.getPos(this.yaxis.range))*a+5,transform:`rotate(${this.styles.yAxis.labels.rotation})`,"text-anchor":"end",style:"transform-origin: right",fill:this.styles.yAxis.labels.colour,"font-size":this.styles.yAxis.labels.fontSize},new Text(s.text)))));grid=(t,e,n,l)=>s({class:"grid",transform:`translate(${t}, ${e})`},...this.xaxis.getTicks(Math.floor(n/this.styles.xAxis.labels.spacing)).map((t=>i({class:"gridline-v",from:[t.getPos(this.xaxis.range)*n,0],to:[t.getPos(this.xaxis.range)*n,l],stroke:this.styles.grid.stroke}))),...this.yaxis.getTicks(Math.floor(l/this.styles.yAxis.labels.spacing)).map((t=>i({class:"gridline-h",from:[0,(1-t.getPos(this.yaxis.range))*l],to:[n,(1-t.getPos(this.yaxis.range))*l],stroke:this.styles.grid.stroke}))));lines=(t,i,n,l)=>s({class:"lines",transform:`translate(${t}, ${i})`,"stroke-width":this.styles.lines.width},...this.activeData.map((({name:t,colour:s,points:i},a)=>((t,...s)=>e("polyline",{...t,points:t.points.map((([t,e])=>`${t},${e}`)).join(" ")},s))({"data-name":t,points:i.map((t=>[c.UNIT.clamp(t.label.getPos(this.xaxis.range))*n,c.UNIT.clamp(1-t.value.getPos(this.yaxis.range))*l])),fill:"none",stroke:s}))));selectionOverlay=(t,s,i,n)=>((t,...s)=>e("rect",t,s))({class:"selection-overlay",x:t,y:s,width:0,height:n,fill:"#46A4"});guide=t=>s({class:"guide",transform:`translate(${this.styles.yAxis.width}, 0)`,visibility:"hidden"},i({class:"guideline",from:[0,0],to:[0,t],stroke:this.styles.guideline.stroke,"stroke-width":this.styles.guideline.width}),...this.activeData.map((()=>((t,...s)=>e("circle",t,s))({class:"guide-point",cx:0,cy:0,r:this.styles.guideline.points.r,fill:this.styles.guideline.points.fill}))));onMouseDown(t){this.isWithinGraphArea(t.clientX,t.clientY)&&(this.selection={from:c.UNIT.clamp(this.canvasCoordRange.normalize(t.clientX-this.svgElem.getBoundingClientRect().left))})}onMouseUp(t){null!=this.selection.from&&this.selectRange(u(Math.min(this.selection.from,this.selection.to),this.xaxis.range,this.activeData),u(Math.max(this.selection.from,this.selection.to),this.xaxis.range,this.activeData)),this.selection={},this.selectionElem.setAttribute("width","0")}onMouseMove(t){const e=this.svgElem.getBoundingClientRect(),s=this.shadowRoot.host.getBoundingClientRect(),i=this.canvasCoordRange.normalize(t.clientX-e.left);this.isWithinGraphArea(t.clientX,t.clientY)?(this.handleSelection(i,t.buttons),this.handleHover(i,t.clientX-s.left,t.clientY-s.top,e)):(this.popupElem.hide(),this.guideElem.setAttribute("visibility","hidden"))}onMouseLeave(t){this.popupElem.hide(),this.guideElem.setAttribute("visibility","hidden")}handleSelection(t,e){1&~e?this.selection={}:this.selection.to=c.UNIT.clamp(t),null!=this.selection.from&&null!=this.selection.to?(this.selectionElem.setAttribute("x",this.canvasCoordRange.lerp(Math.min(this.selection.from,this.selection.to)).toString()),this.selectionElem.setAttribute("width",(this.canvasCoordRange.lerp(Math.abs(this.selection.to-this.selection.from))-this.styles.yAxis.width).toString())):this.selectionElem.setAttribute("width","0")}handleHover(t,e,s,i){const n=this.popupElem.update(e,s,t,this.xaxis.range,this.activeData);this.guideElem.querySelectorAll(".guide-point").forEach(((t,e)=>{t.setAttribute("cy",((1-n[e].value.getPos(this.yaxis.range))*(i.height-this.styles.xAxis.height)).toString())})),this.guideElem.setAttribute("transform",`translate(${e}, 0)`),this.guideElem.removeAttribute("visibility")}isWithinGraphArea(t,e){const s=this.svgElem.getBoundingClientRect();return new c(s.left+this.styles.yAxis.width,s.right).contains(t)&&new c(s.top,s.bottom-this.styles.xAxis.height).contains(e)}}customElements.define("svg-graph",M);const T=t=>t<0?"end":t>0?"start":"middle",C=t=>t<0?"right":t>0?"left":"center",S=(t,e)=>t[Math.floor(e*t.length)];function $(t,e){const s=new c(g(t.map((({points:t})=>d(t,(t=>t[e].number))[e])),"number"),((t,e)=>t.length>0?t.reduce(((t,s)=>t[e]>s[e]?t:s)):void 0)(t.map((({points:t})=>{return(s=t,i=t=>t[e].number,s.length>0?s.reduce(((t,e)=>i(t)>i(e)?t:e)):void 0)[e];var s,i})),"number"));return new s.min.axisType(s)}const z="\n:host {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n}\n:host([hidden]) {\n\tdisplay: none;\n}\n\nh1 {\n\tmargin: 0 0 0.5em 0;\n\tfont-size: 1.5em;\n\ttext-align: center;\n}\n\nsvg-popup {\n\tposition: absolute;\n\tpadding: 0.5em 0.6em;\n\twhite-space: nowrap;\n\tbackground: #2228;\n\tborder: 1px solid #FFF1;\n\tborder-radius: 10px;\n\tbox-shadow: 1px 2px 20px 0px #0008;\n\tbackdrop-filter: blur(20px);\n\tpointer-events: none; // prevent fast mouse movements from triggering mouseleave on svg\n}\nsvg-popup h3 {\n\tmargin: 0 0 0.6em 0;\n}\nsvg-popup p {\n\tmargin: 0.3em 0 0 0;\n}\nsvg-popup .name {\n\tfont-family: monospace;\n\tfont-size: 1.2em;\n\tfont-weight: bold;\n}\n\nsvg-legend {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tmargin: 5px 10px;\n}\nsvg-legend .legend-item {\n\tpadding: 0.25em 0.6em;\n\tborder: 1px solid transparent;\n\tborder-radius: 1em;\n}\nsvg-legend .legend-item:hover {\n\tbackground: #FFF1;\n\tborder: 1px solid #FFF1;\n\tbox-shadow: 1px 2px 5px 0px #0004;\n\tbackdrop-filter: blur(20px);\n\tcursor: pointer;\n}\nsvg-legend .legend-item.disabled {\n\topacity: 0.5;\n\ttext-decoration: line-through;\n}\n\n.swatch {\n\tdisplay: inline-block;\n\twidth: 0.75em;\n\theight: 0.75em;\n\tmargin-right: 0.5em;\n\tborder-radius: 50%;\n}\n\t\n.xaxis text, .yaxis text {\n\ttransform-box: fill-box;\n}";export{b as DateLabel,E as MetricLabel,y as NumberLabel,A as TimeLabel,M as default};
//# sourceMappingURL=svgraph.js.map
