function t(t,e,s=[]){const i=document.createElement(t);for(const t in e)void 0!==e[t]&&i.setAttribute(t,e[t]);for(const t of s??[])i.appendChild(t);return i}const e=(e={},...s)=>t("div",e,s),s=(e={},...s)=>t("p",e,s),i=(e={},...s)=>t("span",e,s),n=(t,e,s)=>t.map((t=>[t,Math.abs(t.label.getPos(s)-e.getPos(s))])).minBy((t=>t[1]))[0];class a extends HTMLElement{constructor(){super()}show(){this.classList.add("active")}hide(){this.classList.remove("active")}move(t,e){this.style.left=`${t+20}px`,this.style.top=`${e}px`}update(e,s,i,a,l){this.move(e,s);const o=S(i,a,l);this.innerHTML="",this.appendChild(((e={},...s)=>t("h3",e,s))({},new Text(o.text)));const r=l.map((({name:t,colour:e,points:s})=>({name:t,colour:e,point:n(s,o,a)})));return this.setValues(r),this.show(),r.map((t=>t.point))}setValues(t){for(const{name:n,colour:a,point:{value:l}}of t)null!=l&&0!=l.number&&this.appendChild(s({},e({class:"swatch",style:`background-color: ${a}`}),i({class:"name"},new Text(n)),new Text(": "),i({class:"value"},new Text(l.text))))}}customElements.define("svg-popup",a);const l="http://www.w3.org/2000/svg";function o(t,e,s=[]){const i=document.createElementNS(l,t);for(const t in e)void 0!==e[t]&&i.setAttribute(t,e[t]);for(const t of s??[])i.appendChild(t);return i}const r=(t={},...e)=>o("g",t,e),h=(t,...e)=>o("line",{...t,x1:t.from[0],y1:t.from[1],x2:t.to[0],y2:t.to[1],from:void 0,to:void 0},e),c=(t,...e)=>o("text",t,e),d=t=>"number"==typeof t?t:t.number;class u{min;max;constructor(t,e){this.min=t,this.max=e}static UNIT=new u(0,1);get span(){return d(this.max)-d(this.min)}contains=t=>d(this.min)<d(t)&&d(t)<d(this.max);clamp=t=>Math.max(d(this.min),Math.min(t,d(this.max)));normalize=t=>(t-d(this.min))/this.span;lerp=t=>d(this.min)+t*this.span}class g extends HTMLElement{callback;lines;disabled=new Set;constructor(t){super(),this.callback=t}update(t){this.lines=t,this.innerHTML="";for(const{name:s,colour:n}of t){const t=i({class:"legend-item"},e({class:"swatch",style:`background-color: ${n}`}),i({class:"name"},new Text(s)));this.appendChild(t),t.addEventListener("click",(()=>this.onLegendItemClick(s,t)))}}onLegendItemClick(t,e){this.disabled.has(t)?this.disabled.delete(t):this.disabled.add(t),e.classList.toggle("disabled",this.disabled.has(t)),this.callback()}}customElements.define("svg-legend",g);class m{range;constructor(t){this.range=t}getTicks(t){const e=Math.pow(10,Math.floor(Math.log10(this.range.span/t))-1),s=Math.floor(this.range.span/t/e)*e;return[...Array(Math.floor(this.range.span/s)+1).keys().map((t=>new v(Math.floor(t*s+this.range.min.number))))]}}class x{range;constructor(t){this.range=t}getTicks(t){const e=this.range.span/24/60/60/1e3,s=e/30>t?30:e/7>t?7:1,i=Math.ceil(e/s/t)*s;return[...Array(Math.floor(e/i)+1).keys().map((t=>new f(new Date(t*i*24*60*60*1e3+this.range.min.number))))]}}class p{range;constructor(t){this.range=t}getTicks(t){const e=this.range.span/24/60/60>t?86400:this.range.span/60/60>t?3600:this.range.span/60>t?60:1,s=Math.ceil(this.range.span/e/t)*e;return[...Array(Math.floor(this.range.span/s)+1).keys().map((t=>new b(t*s+this.range.min.number)))]}}class y{range;constructor(t){this.range=t}getTicks=t=>[...Array(t).keys().map((e=>new A(Math.floor(this.range.lerp(e/(t-1))),this.range.min.unit)))]}class v{value;constructor(t){this.value=t}get text(){return this.value.toString()}get number(){return this.value}get axisType(){return m}getPos=t=>t.normalize(this.number)}class f{value;constructor(t){this.value=t}get text(){return this.value.toISOString().split("T")[0]}get number(){return this.value.valueOf()}get axisType(){return x}getPos=t=>t.normalize(this.number)}class b{value;constructor(t){this.value=t}get text(){const t=new Date(1e3*this.value),e=Math.floor(this.value/24/60/60),s=t.getUTCHours(),i=t.getUTCMinutes(),n=t.getUTCSeconds()+t.getUTCMilliseconds()/1e3;return s>0||e>0?0==i?`${s+24*e} h`:`${s+24*e}:${String(i).padStart(2,"0")} h`:i>0?`${i}:${String(Math.floor(n)).padStart(2,"0")}`:`${n} s`}get number(){return this.value}get axisType(){return p}getPos=t=>t.normalize(this.number)}class A{value;unit;constructor(t,e){this.value=t,this.unit=e}get text(){const t=A.largestOffset(this.value);return`${Math.floor(this.value/Math.pow(10,3*t))} ${A.units[t+A.unitsStartOffset]}${this.unit}`}get number(){return this.value}get axisType(){return y}getPos=t=>t.normalize(this.number);static units=["n","u","m","","k","M","G","T","P","E","Z","Y"];static unitsStartOffset=3;static largestOffset=t=>0==t?0:Math.floor(Math.log10(t)/3)}class w extends HTMLElement{svgElem;popupElem;legendElem;guideElem;selectionElem;data;styles;xaxis;yaxis;resizeObserver;selection={};activeData;get canvasCoordRange(){return new u(this.styles.yAxis.width,this.svgElem.clientWidth)}constructor(e){super();const s=this.attachShadow({mode:"open"}),i=document.createElement("style");i.textContent=$,s.appendChild(i),null!=e.title&&s.appendChild(((e={},...s)=>t("h1",e,s))({class:"title"},new Text(e.title))),this.legendElem=new g((()=>this.updateActiveData())),s.appendChild(this.legendElem),this.svgElem=((t,...e)=>o("svg",{...t,xmlns:l},e))({width:"100%",height:"100%",overflow:"visible",fill:"white"}),this.svgElem.addEventListener("mousedown",(t=>this.onMouseDown(t))),this.svgElem.addEventListener("mouseup",(t=>this.onMouseUp(t))),this.svgElem.addEventListener("mousemove",(t=>this.onMouseMove(t))),this.svgElem.addEventListener("mouseleave",(t=>this.onMouseLeave(t))),s.appendChild(this.svgElem),this.popupElem=new a,s.appendChild(this.popupElem),this.resizeObserver=new ResizeObserver((t=>{const{inlineSize:e,blockSize:s}=t[0].contentBoxSize[0];e>0&&s>0&&this.draw(e,s)})),this.resizeObserver.observe(this.svgElem,{box:"content-box"}),this.update(e,!1)}update({data:t,title:e,styles:s},i=!0){this.styles={colourscheme:s?.colourscheme??["black"],xAxis:{height:s?.xAxis?.height??30,colour:s?.xAxis?.colour??"white",strokeWidth:s?.xAxis?.strokeWidth??1,labels:{spacing:s?.xAxis?.labels?.spacing??30,rotation:s?.xAxis?.labels?.rotation??0,colour:s?.xAxis?.labels?.colour??s?.xAxis?.colour??"#FFF8",fontSize:s?.xAxis?.labels?.fontSize??"0.8em"}},yAxis:{width:s?.yAxis?.width??30,colour:s?.yAxis?.colour??"white",strokeWidth:s?.yAxis?.strokeWidth??1,labels:{spacing:s?.yAxis?.labels?.spacing??50,rotation:s?.yAxis?.labels?.rotation??0,colour:s?.yAxis?.labels?.colour??s?.yAxis?.colour??"#FFF8",fontSize:s?.yAxis?.labels?.fontSize??"0.8em"}},grid:{stroke:s?.grid?.stroke??"#FFF2"},guideline:{stroke:s?.guideline?.stroke??"#FFF8",width:s?.guideline?.width??1,points:{r:s?.guideline?.points?.r??2,fill:s?.guideline?.points?.fill??"white"}},lines:{width:s?.lines?.width??2}},this.data=Object.entries(t).sort(((t,e)=>e[1].at(-1).value.number-t[1].at(-1).value.number)).map((([t,e],s,i)=>({name:t,points:e,colour:M(this.styles.colourscheme,(s+1)/(i.length+1))}))),this.xaxis=T(this.data,"label"),this.yaxis=T(this.data,"value"),this.legendElem.update(this.data),this.updateActiveData(i)}draw(t,e){this.svgElem.innerHTML="",this.svgElem.appendChild(this.grid(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height)),this.svgElem.appendChild(this.lines(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height)),this.svgElem.appendChild(this.axes(0,0,t,e)),this.guideElem=this.guide(e-this.styles.xAxis.height),this.svgElem.appendChild(this.guideElem),this.selectionElem=this.selectionOverlay(this.styles.yAxis.width,0,t-this.styles.yAxis.width,e-this.styles.xAxis.height),this.svgElem.appendChild(this.selectionElem)}selectRange(t,e,s=!0){this.xaxis.range=new u(t,e),this.updateActiveData(!1)||(this.xaxis=T(this.data,"label"),this.updateActiveData(!1)),s&&this.draw(this.svgElem.clientWidth,this.svgElem.clientHeight)}updateActiveData(t=!0){const e=this.data.filter((({name:t})=>!this.legendElem.disabled.has(t))).map((({name:t,colour:e,points:s})=>({name:t,colour:e,points:s.filter((({label:t},e,s)=>this.xaxis.range.contains(t)||s[e-1]&&this.xaxis.range.contains(s[e-1].label)||s[e+1]&&this.xaxis.range.contains(s[e+1].label)))}))).filter((({points:t})=>t.length>0));return 0!=e.length&&(this.activeData=e,this.yaxis=T(this.activeData,"value"),t&&this.draw(this.svgElem.clientWidth,this.svgElem.clientHeight),!0)}axes(t,e,s,i){return r({class:"axes",transform:`translate(${t}, ${e})`},this.xAxis(this.styles.yAxis.width,i-this.styles.xAxis.height,s-this.styles.yAxis.width,this.styles.xAxis.height),this.yAxis(0,0,this.styles.yAxis.width,i-this.styles.xAxis.height))}xAxis=(t,e,s,i)=>r({class:"xaxis"},h({from:[t-this.styles.yAxis.strokeWidth,e+this.styles.xAxis.strokeWidth/2],to:[t+s,e+this.styles.xAxis.strokeWidth/2],stroke:this.styles.xAxis.colour,"stroke-width":this.styles.xAxis.strokeWidth}),...this.xaxis.getTicks(Math.floor(s/this.styles.xAxis.labels.spacing)).map((i=>c({class:"tick-label",x:t+i.getPos(this.xaxis.range)*s,y:e+20,transform:`rotate(${this.styles.xAxis.labels.rotation})`,"text-anchor":E(this.styles.xAxis.labels.rotation),style:`transform-origin: ${k(this.styles.xAxis.labels.rotation)}`,fill:this.styles.xAxis.labels.colour,"font-size":this.styles.xAxis.labels.fontSize},new Text(i.text)))));yAxis=(t,e,s,i)=>r({class:"yaxis"},h({from:[t+s-this.styles.yAxis.strokeWidth/2,e],to:[t+s-this.styles.yAxis.strokeWidth/2,e+i],stroke:this.styles.yAxis.colour,"stroke-width":this.styles.yAxis.strokeWidth}),...this.yaxis.getTicks(Math.floor(i/this.styles.yAxis.labels.spacing)).map((n=>c({class:"tick-label",x:t+s-10,y:e+(1-n.getPos(this.yaxis.range))*i+5,transform:`rotate(${this.styles.yAxis.labels.rotation})`,"text-anchor":"end",style:"transform-origin: right",fill:this.styles.yAxis.labels.colour,"font-size":this.styles.yAxis.labels.fontSize},new Text(n.text)))));grid=(t,e,s,i)=>r({class:"grid",transform:`translate(${t}, ${e})`},...this.xaxis.getTicks(Math.floor(s/this.styles.xAxis.labels.spacing)).map((t=>h({class:"gridline-v",from:[t.getPos(this.xaxis.range)*s,0],to:[t.getPos(this.xaxis.range)*s,i],stroke:this.styles.grid.stroke}))),...this.yaxis.getTicks(Math.floor(i/this.styles.yAxis.labels.spacing)).map((t=>h({class:"gridline-h",from:[0,(1-t.getPos(this.yaxis.range))*i],to:[s,(1-t.getPos(this.yaxis.range))*i],stroke:this.styles.grid.stroke}))));lines=(t,e,s,i)=>r({class:"lines",transform:`translate(${t}, ${e})`,"stroke-width":this.styles.lines.width},...this.activeData.map((({name:t,colour:e,points:n},a)=>((t,...e)=>o("polyline",{...t,points:t.points.map((([t,e])=>`${t},${e}`)).join(" ")},e))({"data-name":t,points:n.map((t=>[u.UNIT.clamp(t.label.getPos(this.xaxis.range))*s,u.UNIT.clamp(1-t.value.getPos(this.yaxis.range))*i])),fill:"none",stroke:e}))));selectionOverlay=(t,e,s,i)=>((t,...e)=>o("rect",t,e))({class:"selection-overlay",x:t,y:e,width:0,height:i,fill:"#46A4"});guide=t=>r({class:"guide",transform:`translate(${this.styles.yAxis.width}, 0)`},h({class:"guideline",from:[0,0],to:[0,t],stroke:this.styles.guideline.stroke,"stroke-width":this.styles.guideline.width}),...this.activeData.map((()=>((t,...e)=>o("circle",t,e))({class:"guide-point",cx:0,cy:0,r:this.styles.guideline.points.r,fill:this.styles.guideline.points.fill}))));onMouseDown(t){this.isWithinGraphArea(t.clientX,t.clientY)&&(this.selection={from:u.UNIT.clamp(this.canvasCoordRange.normalize(t.clientX-this.svgElem.getBoundingClientRect().left))})}onMouseUp(t){null!=this.selection.from&&this.selectRange(S(Math.min(this.selection.from,this.selection.to),this.xaxis.range,this.activeData),S(Math.max(this.selection.from,this.selection.to),this.xaxis.range,this.activeData)),this.selection={},this.selectionElem.setAttribute("width","0")}onMouseMove(t){const e=this.svgElem.getBoundingClientRect(),s=this.canvasCoordRange.normalize(t.clientX-e.left);this.isWithinGraphArea(t.clientX,t.clientY)?(this.handleSelection(s,t.buttons),this.handleHover(s,t.clientX,t.clientY,e)):(this.popupElem.hide(),this.guideElem.classList.remove("active"))}onMouseLeave(t){this.popupElem.hide(),this.guideElem.classList.remove("active")}handleSelection(t,e){1&~e?this.selection={}:this.selection.to=u.UNIT.clamp(t),null!=this.selection.from&&null!=this.selection.to?(this.selectionElem.setAttribute("x",this.canvasCoordRange.lerp(Math.min(this.selection.from,this.selection.to)).toString()),this.selectionElem.setAttribute("width",(this.canvasCoordRange.lerp(Math.abs(this.selection.to-this.selection.from))-this.styles.yAxis.width).toString())):this.selectionElem.setAttribute("width","0")}handleHover(t,e,s,i){const n=this.popupElem.update(e,s,t,this.xaxis.range,this.activeData);this.guideElem.querySelectorAll(".guide-point").forEach(((t,e)=>{t.setAttribute("cy",((1-n[e].value.getPos(this.yaxis.range))*(i.height-this.styles.xAxis.height)).toString())})),this.guideElem.setAttribute("transform",`translate(${e-i.left}, 0)`),this.guideElem.classList.add("active")}isWithinGraphArea(t,e){const s=this.svgElem.getBoundingClientRect();return new u(s.left+this.styles.yAxis.width,s.right).contains(t)&&new u(s.top,s.bottom-this.styles.xAxis.height).contains(e)}}customElements.define("svg-graph",w);const E=t=>t<0?"end":t>0?"start":"middle",k=t=>t<0?"right":t>0?"left":"center",M=(t,e)=>t[Math.floor(e*t.length)];function T(t,e){const s=new u(t.map((({points:t})=>t.minBy((t=>t[e].number))[e])).minByKey("number"),t.map((({points:t})=>t.maxBy((t=>t[e].number))[e])).maxByKey("number"));return new s.min.axisType(s)}const C=(t,e)=>t.map(((t,s)=>[Math.abs(t-e),s])).minBy((t=>t[0]))[1];function S(t,e,s){const i=s.map((({points:s})=>C(s.map((t=>t.label.getPos(e))),t)));return i.map(((t,e)=>s[e].points[t].label)).minBy((s=>Math.abs(s.getPos(e)-t)))}const $="\nh1 {\n\tmargin: 0 0 0.5em 0;\n\tfont-size: 1.5em;\n\ttext-align: center;\n}\n\nsvg-popup {\n\tposition: absolute;\n\tpadding: 0.5em 0.6em;\n\tbackground: #2228;\n\tborder: 1px solid #FFF1;\n\tborder-radius: 10px;\n\tbox-shadow: 1px 2px 20px 0px #0008;\n\tbackdrop-filter: blur(20px);\n}\nsvg-popup h3 {\n\tmargin: 0 0 0.6em 0;\n}\nsvg-popup p {\n\tmargin: 0.3em 0 0 0;\n}\nsvg-popup .name {\n\tfont-family: monospace;\n\tfont-size: 1.2em;\n\tfont-weight: bold;\n}\n\nsvg-legend {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tpadding: 5px 10px;\n}\nsvg-legend .legend-item {\n\tpadding: 0.25em 0.6em;\n\tborder: 1px solid transparent;\n\tborder-radius: 1em;\n}\nsvg-legend .legend-item:hover {\n\tbackground: #FFF1;\n\tborder: 1px solid #FFF1;\n\tbox-shadow: 1px 2px 5px 0px #0004;\n\tbackdrop-filter: blur(20px);\n\tcursor: pointer;\n}\nsvg-legend .legend-item.disabled {\n\topacity: 0.5;\n\ttext-decoration: line-through;\n}\n\n.swatch {\n\tdisplay: inline-block;\n\twidth: 0.75em;\n\theight: 0.75em;\n\tmargin-right: 0.5em;\n\tborder-radius: 50%;\n}\n\nsvg-popup:not(.active), .guide:not(.active) {\n\tdisplay: none;\n}\n\t\n.xaxis text, .yaxis text {\n\ttransform-box: fill-box;\n}";Array.prototype.max=function(){return this.reduce(((t,e)=>Math.max(t,e)),0)},Array.prototype.maxBy=function(t){return this.reduce(((e,s)=>t(e)>t(s)?e:s))},Array.prototype.maxByKey=function(t){return this.reduce(((e,s)=>e[t]>s[t]?e:s))},Array.prototype.min=function(){return this.reduce(((t,e)=>Math.min(t,e)),0)},Array.prototype.minBy=function(t){return this.reduce(((e,s)=>t(e)<t(s)?e:s))},Array.prototype.minByKey=function(t){return this.reduce(((e,s)=>e[t]<s[t]?e:s))};export{f as DateLabel,A as MetricLabel,v as NumberLabel,b as TimeLabel,w as default,S as nearestLabel};
//# sourceMappingURL=svgraph.js.map
