const e=["#23171b","#271a28","#2b1c33","#2f1e3f","#32204a","#362354","#39255f","#3b2768","#3e2a72","#402c7b","#422f83","#44318b","#453493","#46369b","#4839a2","#493ca8","#493eaf","#4a41b5","#4a44bb","#4b46c0","#4b49c5","#4b4cca","#4b4ecf","#4b51d3","#4a54d7","#4a56db","#4959de","#495ce2","#485fe5","#4761e7","#4664ea","#4567ec","#446aee","#446df0","#426ff2","#4172f3","#4075f5","#3f78f6","#3e7af7","#3d7df7","#3c80f8","#3a83f9","#3985f9","#3888f9","#378bf9","#368df9","#3590f8","#3393f8","#3295f7","#3198f7","#309bf6","#2f9df5","#2ea0f4","#2da2f3","#2ca5f1","#2ba7f0","#2aaaef","#2aaced","#29afec","#28b1ea","#28b4e8","#27b6e6","#27b8e5","#26bbe3","#26bde1","#26bfdf","#25c1dc","#25c3da","#25c6d8","#25c8d6","#25cad3","#25ccd1","#25cecf","#26d0cc","#26d2ca","#26d4c8","#27d6c5","#27d8c3","#28d9c0","#29dbbe","#29ddbb","#2adfb8","#2be0b6","#2ce2b3","#2de3b1","#2ee5ae","#30e6ac","#31e8a9","#32e9a6","#34eba4","#35eca1","#37ed9f","#39ef9c","#3af09a","#3cf197","#3ef295","#40f392","#42f490","#44f58d","#46f68b","#48f788","#4af786","#4df884","#4ff981","#51fa7f","#54fa7d","#56fb7a","#59fb78","#5cfc76","#5efc74","#61fd71","#64fd6f","#66fd6d","#69fd6b","#6cfd69","#6ffe67","#72fe65","#75fe63","#78fe61","#7bfe5f","#7efd5d","#81fd5c","#84fd5a","#87fd58","#8afc56","#8dfc55","#90fb53","#93fb51","#96fa50","#99fa4e","#9cf94d","#9ff84b","#a2f84a","#a6f748","#a9f647","#acf546","#aff444","#b2f343","#b5f242","#b8f141","#bbf03f","#beef3e","#c1ed3d","#c3ec3c","#c6eb3b","#c9e93a","#cce839","#cfe738","#d1e537","#d4e336","#d7e235","#d9e034","#dcdf33","#dedd32","#e0db32","#e3d931","#e5d730","#e7d52f","#e9d42f","#ecd22e","#eed02d","#f0ce2c","#f1cb2c","#f3c92b","#f5c72b","#f7c52a","#f8c329","#fac029","#fbbe28","#fdbc28","#feb927","#ffb727","#ffb526","#ffb226","#ffb025","#ffad25","#ffab24","#ffa824","#ffa623","#ffa323","#ffa022","#ff9e22","#ff9b21","#ff9921","#ff9621","#ff9320","#ff9020","#ff8e1f","#ff8b1f","#ff881e","#ff851e","#ff831d","#ff801d","#ff7d1d","#ff7a1c","#ff781c","#ff751b","#ff721b","#ff6f1a","#fd6c1a","#fc6a19","#fa6719","#f96418","#f76118","#f65f18","#f45c17","#f25916","#f05716","#ee5415","#ec5115","#ea4f14","#e84c14","#e64913","#e44713","#e24412","#df4212","#dd3f11","#da3d10","#d83a10","#d5380f","#d3360f","#d0330e","#ce310d","#cb2f0d","#c92d0c","#c62a0b","#c3280b","#c1260a","#be2409","#bb2309","#b92108","#b61f07","#b41d07","#b11b06","#af1a05","#ac1805","#aa1704","#a81604","#a51403","#a31302","#a11202","#9f1101","#9d1000","#9b0f00","#9a0e00","#980e00","#960d00","#950c00","#940c00","#930c00","#920c00","#910b00","#910c00","#900c00","#900c00","#900c00"];class t{value;constructor(e){this.value=e}get text(){return this.value.toString()}getPos(e){return this.value/e}}function s(e,t,s=[]){const i=document.createElement(e);for(const e in t)void 0!==t[e]&&i.setAttribute(e,t[e]);for(const e of s??[])i.appendChild(e);return i}const i=(e={},...t)=>s("p",e,t);class a extends HTMLDivElement{constructor(){super()}show(){this.classList.add("active")}hide(){this.classList.remove("active")}move(e,t){this.style.left=`${e+10}px`,this.style.top=`${t}px`}setValues(e){for(const{name:t,value:s}of e)null!=s&&this.appendChild(i({},new Text(`${t}: ${s}`)))}update(e,t,i,a){this.move(e,t),this.innerHTML="",this.appendChild(((e={},...t)=>s("h3",e,t))({},new Text(i.toString()))),this.setValues(a.map((e=>({name:e.name,value:e.values[i]})))),this.show()}}customElements.define("svg-popup",a,{extends:"div"});const f="http://www.w3.org/2000/svg";function n(e,t,s=[]){const i=document.createElementNS(f,e);for(const e in t)void 0!==t[e]&&i.setAttribute(e,t[e]);for(const e of s??[])i.appendChild(e);return i}const d=(e={},...t)=>n("g",e,t),l=(e,...t)=>n("line",{...e,x1:e.from[0],y1:e.from[1],x2:e.to[0],y2:e.to[1],from:void 0,to:void 0},t),c=(e,...t)=>n("text",e,t);class o extends HTMLElement{svgElem;popupElem;guideLine;data;xLabels;yLabels;styles;maxX;maxY;resizeObserver;getXLabelInterval=e=>Math.ceil(this.xLabels.length/(e/this.styles.minSpacePerXLabel));getYLabelInterval=e=>Math.ceil(this.yLabels.length/(e/this.styles.minSpacePerYLabel));getXLabels=e=>this.xLabels.filter(((t,s)=>s%this.getXLabelInterval(e)==0));getYLabels=e=>this.yLabels.filter(((t,s)=>s%this.getYLabelInterval(e)==0));constructor(e){super();const t=this.attachShadow({mode:"open"}),s=document.createElement("style");s.textContent="\n\t\t\t.popup {\n\t\t\t\tposition: absolute;\n\t\t\t\tpadding: 10px;\n\t\t\t\tbackground: #2228;\n\t\t\t\tborder: 1px solid #FFF1;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbox-shadow: 1px 2px 20px 0px #0008;\n\t\t\t\tbackdrop-filter: blur(20px);\n\t\t\t}\n\t\t\t.popup h3 {\n\t\t\t\tmargin: 0 0 0.8em 0;\n\t\t\t}\n\t\t\t.popup p {\n\t\t\t\tmargin: 0.5em 0 0 0;\n\t\t\t}\n\t\t\t\n\t\t\t.popup:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.guideline:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t",t.appendChild(s),this.svgElem=((e,...t)=>n("svg",{...e,xmlns:f},t))({width:"100%",height:"100%",overflow:"visible",fill:"white"}),t.appendChild(this.svgElem),this.guideLine=l({class:"guideline",from:[0,0],to:[0,0],stroke:"#FFF8","stroke-width":1}),this.popupElem=new a,this.popupElem.classList.add("popup"),t.appendChild(this.popupElem),this.resizeObserver=new ResizeObserver((e=>{this.draw(e[0].contentBoxSize[0].inlineSize,e[0].contentBoxSize[0].blockSize)})),this.resizeObserver.observe(this.svgElem,{box:"content-box"}),this.update(e,!1)}update({data:e,xLabels:s,yLabels:i,styles:a},f=!0){this.data=Object.entries(e).sort(((e,t)=>t[1].max()-e[1].max())).map((([e,t])=>({name:e,values:t}))),this.maxX=this.data.map((({values:e})=>e.length-1)).max(),this.maxY=this.data[0].values.max(),this.xLabels=s??new Set(this.data.flatMap((({values:e})=>e.keys().toArray()))).values().toArray().sort(((e,t)=>e-t)).map((e=>new t(e))),this.yLabels=i??[new t(0),new t(this.maxY)],this.styles={xAxisSize:a?.xAxisSize??30,yAxisSize:a?.yAxisSize??30,minSpacePerXLabel:a?.minSpacePerXLabel??50,minSpacePerYLabel:a?.minSpacePerYLabel??50},f&&this.draw(this.svgElem.clientWidth,this.svgElem.clientHeight)}draw(e,t){this.svgElem.innerHTML="",this.svgElem.appendChild(this.grid(this.styles.yAxisSize,0,e-this.styles.yAxisSize,t-this.styles.xAxisSize)),this.svgElem.appendChild(this.guideLine),this.guideLine.setAttribute("y2",(t-this.styles.xAxisSize).toString()),this.svgElem.appendChild(this.axes(0,0,e,t)),this.svgElem.appendChild(this.lines(this.styles.yAxisSize,0,e-this.styles.yAxisSize,t-this.styles.xAxisSize));const s=((e,...t)=>n("rect",e,t))({x:this.styles.yAxisSize,y:0,width:e-this.styles.yAxisSize,height:t-this.styles.xAxisSize,fill:"transparent"});this.svgElem.appendChild(s),s.addEventListener("mousemove",(e=>this.onMouseMove(e))),s.addEventListener("mouseleave",(e=>this.onMouseLeave(e)))}axes(e,t,s,i){return d({class:"axes",transform:`translate(${e}, ${t})`},this.xAxis(this.styles.yAxisSize,i-this.styles.xAxisSize,s-this.styles.yAxisSize,this.styles.xAxisSize),this.yAxis(0,0,this.styles.yAxisSize,i-this.styles.xAxisSize))}xAxis=(e,t,s,i)=>d({class:"xaxis"},l({from:[e,t],to:[e+s,t],stroke:"white"}),...this.getXLabels(s).map((i=>c({x:e+i.getPos(this.maxX)*s,y:t+20,"text-anchor":"middle"},new Text(i.text)))));yAxis=(e,t,s,i)=>d({class:"yaxis"},l({from:[e+s,t],to:[e+s,t+i],stroke:"white"}),...this.getYLabels(i).map((a=>c({x:e+s-10,y:t+(1-a.getPos(this.maxY))*i+5,"text-anchor":"end"},new Text(a.text)))));grid=(e,t,s,i)=>d({class:"grid",transform:`translate(${e}, ${t})`},...this.getXLabels(s).map((e=>l({from:[e.getPos(this.maxX)*s,0],to:[e.getPos(this.maxX)*s,i],stroke:"#FFF4"}))),...this.getYLabels(i).map((e=>l({from:[0,(1-e.getPos(this.maxY))*i],to:[s,(1-e.getPos(this.maxY))*i],stroke:"#FFF4"}))));lines=(t,s,i,a)=>d({class:"lines",transform:`translate(${t}, ${s})`,"stroke-width":"2"},...this.data.map((({values:t},s)=>{const f=e[Math.floor((s+1)/(this.data.length+1)*e.length)],d=t.map(((e,t)=>[t*i/this.maxX,(1-e/this.maxY)*a]));return((e,...t)=>n("polyline",{...e,points:e.points.map((([e,t])=>`${e},${t}`)).join(" ")},t))({points:d,fill:"none",stroke:f})})));onMouseMove(e){const t=this.getBoundingClientRect(),s=e.clientX-t.left;this.popupElem.update(e.clientX,e.clientY,Math.round((s-this.styles.yAxisSize)/(t.width-this.styles.yAxisSize)*this.maxX),this.data),this.guideLine.classList.add("active"),this.guideLine.setAttribute("x1",s.toString()),this.guideLine.setAttribute("x2",s.toString())}onMouseLeave(e){this.popupElem.hide(),this.guideLine.classList.remove("active")}}customElements.define("svg-graph",o),Array.prototype.max=function(){return this.reduce(((e,t)=>Math.max(e,t)),0)},Array.prototype.min=function(){return this.reduce(((e,t)=>Math.min(e,t)),0)};export{t as NumberLabel,o as default};
//# sourceMappingURL=svgraph.js.map
