{"version":3,"file":"svgraph.js","sources":["../src/util/svg.ts","../src/util/html.ts","../src/util/range.ts","../src/util/util.ts","../src/labeltypes/number.ts","../src/labeltypes/integer.ts","../src/labeltypes/date.ts","../src/labeltypes/time.ts","../src/labeltypes/metric.ts","../src/labeltypes/empty.ts","../src/popup.ts","../src/legend.ts","../src/svgraph.ts"],"sourcesContent":["const ns = \"http://www.w3.org/2000/svg\"\r\n\r\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\r\n\tconst elem = document.createElementNS(ns, name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype stringable = string | number | boolean\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\ttransform?: string\r\n\tfill?: string\r\n\tstroke?: string\r\n\t\"stroke-width\"?: stringable\r\n\t\"font-size\"?: stringable\r\n\tvisibility?: \"visible\" | \"hidden\"\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"svg\", { ...attrs, xmlns: ns }, children) as SVGElement\r\n\r\nexport const circle = (attrs: { cx: stringable, cy: stringable, r: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"circle\", attrs, children) as SVGCircleElement\r\n\r\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children) as SVGGElement\r\n\r\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children) as SVGLineElement\r\n\r\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children) as SVGPolylineElement\r\n\r\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"rect\", attrs, children) as SVGRectElement\r\n\r\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"text\", attrs, children) as SVGTextElement\r\n","function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\r\n\tconst elem = document.createElement(name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\thidden?: string\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\r\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\r\nexport const span = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"span\", attrs, children)\r\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\r\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\r\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\r\n","const num = (n: number | { number: number }) => typeof n === \"number\" ? n : n.number\r\n\r\nexport default class Range<T extends number | { number: number }> {\r\n\tconstructor(public min: T, public max: T) { }\r\n\r\n\t/**\r\n\t * The unit range [0,1]\r\n\t */\r\n\tstatic UNIT = new Range(0, 1) as Range<number>\r\n\r\n\t/**\r\n\t * The span of this range, i.e. `max - min`\r\n\t */\r\n\tget span() { return num(this.max) - num(this.min) }\r\n\r\n\t/**\r\n\t * Returns whether a value is within this range\r\n\t */\r\n\tcontains = (value: T): boolean => num(this.min) < num(value) && num(value) < num(this.max)\r\n\r\n\t/**\r\n\t * Clamps a value to this range\r\n\t */\r\n\tclamp = (value: number): number => Math.max(num(this.min), Math.min(value, num(this.max)))\r\n\r\n\t/**\r\n\t * Normalizes a value in a given [min,max] range to [0,1]\r\n\t */\r\n\tnormalize = (value: number): number => (value - num(this.min)) / (this.span)\r\n\r\n\t/**\r\n\t * Interpolates a `t` in [0,1] to a given [min,max] range\r\n\t */\r\n\tlerp = (t: number): number => num(this.min) + t * this.span\r\n}\r\n","import Range from \"./range\"\nimport { Label } from \"../label\"\nimport { Point } from \"../svgraph\"\n\nexport type DeepPartial<T> = T extends object\n\t? { [P in keyof T]?: DeepPartial<T[P]> }\n\t: T\n\nexport const maxBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) > fn(b) ? a : b) : undefined\nexport const maxByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] > b[key] ? a : b) : undefined\n\nexport const minBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) < fn(b) ? a : b) : undefined\nexport const minByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] < b[key] ? a : b) : undefined\n\nexport const floorTo = (n: number, to: number) => Math.floor(n / to) * to\n\nconst nearestIdx = (arr: number[], to: number): number =>\n\tminByKey(arr.map((x, idx) => [Math.abs(x - to), idx]), 0)[1]\n\nexport function nearestLabel(t: number, range: Range<Label>, data: { name: string, points: Point[] }[]) {\n\tconst nearestLabelsIdx = data.map(({ points }) => nearestIdx(points.map(p => p.label.getPos(range)), t))\n\tconst nearestLabels = nearestLabelsIdx.map((closestIdx, i) => data[i].points[closestIdx].label)\n\treturn minBy(nearestLabels, l => Math.abs(l.getPos(range) - t))\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\nimport { floorTo } from \"../util/util\"\n\nexport class NumberLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() { return this.value.toString() }\n\tget number() { return this.value }\n\tget axisType() { return NumberAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class NumberAxis implements Axis<NumberLabel> {\n\tconstructor(public range: Range<NumberLabel>) { }\n\n\tgetTicks(n: number): NumberLabel[] {\n\t\tconst magnitude = Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1)\n\t\tconst interval = floorTo(this.range.span / n, magnitude)\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew NumberLabel(floorTo(x * interval + this.range.min.number, magnitude))\n\t\t)].filter((value, i, arr) => i == 0 || value.number != arr[i - 1].number)\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\nimport { floorTo } from \"../util/util\"\n\nexport class IntegerLabel implements Label {\n\tconstructor(public value: number) { this.value = Math.floor(value) }\n\n\tget text() { return this.value.toString() }\n\tget number() { return this.value }\n\tget axisType() { return IntegerAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class IntegerAxis implements Axis<IntegerLabel> {\n\tconstructor(public range: Range<IntegerLabel>) { }\n\n\tgetTicks(n: number): IntegerLabel[] {\n\t\tconst magnitude = Math.max(1, Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1))\n\t\tconst interval = floorTo(this.range.span / n, magnitude)\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew IntegerLabel(x * interval + this.range.min.number)\n\t\t)].filter((value, i, arr) => i == 0 || value.number != arr[i - 1].number)\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class DateLabel implements Label {\n\tconstructor(public value: Date) { }\n\n\tget text() { return this.value.toISOString().split(\"T\")[0] }\n\tget number() { return this.value.valueOf() }\n\tget axisType() { return DateAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class DateAxis implements Axis<DateLabel> {\n\tconstructor(public range: Range<DateLabel>) { }\n\n\tgetTicks(n: number): DateLabel[] {\n\t\t// total span in number of days\n\t\tconst span = this.range.span / 24 / 60 / 60 / 1000\n\n\t\tconst unitOffset = (span / 30 > n)\n\t\t\t? 30 // \"months\"\n\t\t\t: (span / 7 > n)\n\t\t\t\t? 7 // weeks\n\t\t\t\t: 1 // days\n\n\t\tconst interval = Math.ceil(span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(span / interval) + 1).keys().map(x =>\n\t\t\tnew DateLabel(new Date(x * interval * 24 * 60 * 60 * 1000 + this.range.min.number))\n\t\t)]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class TimeLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() {\n\t\tconst date = new Date(this.value * 1000)\n\t\tconst d = Math.floor(this.value / 24 / 60 / 60)\n\t\tconst h = date.getUTCHours()\n\t\tconst m = date.getUTCMinutes()\n\t\tconst s = date.getUTCSeconds() + date.getUTCMilliseconds() / 1000\n\t\tif (h > 0 || d > 0) {\n\t\t\tif (m == 0) return `${h + d * 24} h`\n\t\t\telse return `${h + d * 24}:${String(m).padStart(2, \"0\")} h`\n\t\t} else if (m > 0) {\n\t\t\treturn `${m}:${String(Math.floor(s)).padStart(2, \"0\")}`\n\t\t} else {\n\t\t\treturn `${s} s`\n\t\t}\n\t}\n\tget number() { return this.value }\n\tget axisType() { return TimeAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class TimeAxis implements Axis<TimeLabel> {\n\tconstructor(public range: Range<TimeLabel>) { }\n\n\tgetTicks(n: number): TimeLabel[] {\n\t\tconst unitOffset = (this.range.span / 24 / 60 / 60 > n)\n\t\t\t? 24 * 60 * 60 // days\n\t\t\t: (this.range.span / 60 / 60 > n)\n\t\t\t\t? 60 * 60 // hours\n\t\t\t\t: (this.range.span / 60 > n)\n\t\t\t\t\t? 60 // minutes\n\t\t\t\t\t: 1 // seconds\n\n\t\tconst interval = Math.ceil(this.range.span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew TimeLabel(x * interval + this.range.min.number)\n\t\t)]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class MetricLabel implements Label {\n\tconstructor(public value: number, public unit: string) { }\n\n\tget text() {\n\t\tconst offset = MetricLabel.largestOffset(this.value)\n\t\treturn `${Math.floor(this.value / Math.pow(10, offset * 3))} ${MetricLabel.units[offset + MetricLabel.unitsStartOffset]}${this.unit}`\n\t}\n\tget number() { return this.value }\n\tget axisType() { return MetricAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n\n\tstatic units = [\"n\", \"u\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"]\n\tstatic unitsStartOffset = 3\n\n\tstatic largestOffset = (value: number): number =>\n\t\t(value == 0) ? 0 : Math.floor(Math.log10(value) / 3)\n}\n\nexport class MetricAxis implements Axis<MetricLabel> {\n\tconstructor(public range: Range<MetricLabel>) { }\n\n\tgetTicks = (n: number): MetricLabel[] =>\n\t\t[...Array(n).keys().map(x => new MetricLabel(\n\t\t\tMath.floor(this.range.lerp(x / (n - 1))),\n\t\t\tthis.range.min.unit\n\t\t))]\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class EmptyLabel implements Label {\n\tconstructor() { }\n\n\tget text() { return \"\" }\n\tget number() { return 0 }\n\tget axisType() { return EmptyAxis }\n\n\tgetPos = (_range: Range<Label>) => 0\n}\n\nexport class EmptyAxis implements Axis<EmptyLabel> {\n\trange = new Range<EmptyLabel>(new EmptyLabel(), new EmptyLabel())\n\tconstructor() { }\n\n\tgetTicks(_n: number): EmptyLabel[] {\n\t\treturn [new EmptyLabel()]\n\t}\n}\n","import { div, h3, p, span } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { minByKey, nearestLabel } from \"./util/util\"\r\nimport { Point } from \"./svgraph\"\r\nimport { Label } from \"./label\"\r\n\r\nconst nearestPointForLabel = (arr: Point[], to: Label, range: Range<Label>): Point =>\r\n\tminByKey(arr.map(x => [x, Math.abs(x.label.getPos(range) - to.getPos(range))]) as [Point, number][], 1)[0]\r\n\r\nexport default class PopupElement extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.setAttribute(\"hidden\", \"\")\r\n\t}\r\n\r\n\tshow() { this.removeAttribute(\"hidden\") }\r\n\r\n\thide() { this.setAttribute(\"hidden\", \"\") }\r\n\r\n\tmove(x: number, y: number) {\r\n\t\tthis.style.left = `${x + 20}px`\r\n\t\tthis.style.top = `${y}px`\r\n\t}\r\n\r\n\tupdate(x: number, y: number, t: number, range: Range<Label>, data: { name: string, colour: string, points: Point[] }[]): Point[] {\r\n\t\tthis.move(x, y)\r\n\r\n\t\tconst label = nearestLabel(t, range, data)\r\n\r\n\t\tthis.innerHTML = \"\"\r\n\t\tthis.appendChild(h3({}, new Text(label?.text)))\r\n\r\n\t\tconst nearestPoints = data.map(({ name, colour, points }) => ({ name, colour, point: nearestPointForLabel(points, label, range) }))\r\n\t\tthis.setValues(nearestPoints)\r\n\r\n\t\tthis.show()\r\n\r\n\t\treturn nearestPoints.map(x => x.point)\r\n\t}\r\n\r\n\tprivate setValues(points: { name: string, colour: string, point: Point }[]) {\r\n\t\tfor (const { name, colour, point: { value } } of points) {\r\n\t\t\tif (value != undefined && value.number != 0) this.appendChild(p({},\r\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\r\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\r\n\t\t\t\tnew Text(\": \"),\r\n\t\t\t\tspan({ class: \"value\" }, new Text(value.text)),\r\n\t\t\t))\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-popup\", PopupElement)\r\n","import { div, span } from \"./util/html\"\n\nexport default class LegendElement extends HTMLElement {\n\tlines: { name: string, colour: string }[]\n\tdisabled: Set<string> = new Set()\n\n\tconstructor(private callback: () => void) {\n\t\tsuper()\n\t}\n\n\tupdate(data: { name: string, colour: string }[]) {\n\t\tthis.lines = data\n\t\tthis.innerHTML = \"\"\n\t\tfor (const { name, colour } of data) {\n\t\t\tconst legendItem = span({ class: \"legend-item\" },\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\n\t\t\t)\n\t\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\t\tthis.appendChild(legendItem)\n\t\t\tlegendItem.addEventListener(\"click\", () => this.onLegendItemClick(name, legendItem))\n\t\t}\n\t}\n\n\tprivate onLegendItemClick(name: string, legendItem: HTMLElement) {\n\t\tif (this.disabled.has(name)) this.disabled.delete(name)\n\t\telse this.disabled.add(name)\n\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\tthis.callback()\n\t}\n}\n\ncustomElements.define(\"svg-legend\", LegendElement)\n","import { circle, g, line, polyline, rect, svg, text } from \"./util/svg\"\r\nimport { h1 } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { DeepPartial, maxBy, maxByKey, minBy, minByKey, nearestLabel } from \"./util/util\"\r\nimport { Label, Axis, NumberAxis, NumberLabel, EmptyAxis } from \"./label\"\r\nimport PopupElement from \"./popup\"\r\nimport LegendElement from \"./legend\"\r\n\r\nexport { Label, NumberLabel, IntegerLabel, DateLabel, TimeLabel, MetricLabel } from \"./label\"\r\n\r\nexport type Point = { label: Label, value: Label }\r\n\r\nexport type Config = {\r\n\tdata: { [category: string]: Point[] }\r\n\tstyles?: DeepPartial<Styles>\r\n\ttitle?: string\r\n}\r\n\r\ntype AxisStyle = {\r\n\tcolour: string\r\n\tstrokeWidth: number\r\n\tlabels: {\r\n\t\tspacing: number\r\n\t\trotation: number\r\n\t\tcolour: string\r\n\t\tfontSize: string\r\n\t}\r\n}\r\n\r\nexport type Styles = {\r\n\tcolourscheme: string[]\r\n\txAxis: AxisStyle & { height: number }\r\n\tyAxis: AxisStyle & { width: number }\r\n\tgrid: {\r\n\t\tstroke: string\r\n\t}\r\n\tguideline: {\r\n\t\tstroke: string\r\n\t\twidth: number\r\n\t\tpoints: {\r\n\t\t\tr: number\r\n\t\t\tfill: string\r\n\t\t}\r\n\t}\r\n\tlines: {\r\n\t\twidth: number\r\n\t}\r\n}\r\n\r\nexport default class SVGraph extends HTMLElement {\r\n\tsvgElem: SVGElement\r\n\tpopupElem: PopupElement\r\n\tlegendElem: LegendElement\r\n\tguideElem: SVGElement\r\n\tselectionElem: SVGElement\r\n\r\n\tdata: { name: string, colour: string, points: Point[] }[]\r\n\tstyles: Styles\r\n\txaxis: Axis<Label>\r\n\tyaxis: Axis<Label>\r\n\r\n\tprivate resizeObserver: ResizeObserver\r\n\tprivate selection: { from?: number, to?: number } = {}\r\n\tprivate activeData: { name: string, colour: string, points: Point[] }[]\r\n\r\n\tget canvasCoordRange() { return new Range(this.styles.yAxis.width, this.svgElem.clientWidth) }\r\n\r\n\tconstructor(config: Config) {\r\n\t\tsuper()\r\n\r\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\r\n\r\n\t\tconst styleElem = document.createElement(\"style\")\r\n\t\tstyleElem.textContent = style\r\n\t\tshadow.appendChild(styleElem)\r\n\r\n\t\tshadow.appendChild(h1({ id: \"title\" }))\r\n\r\n\t\tthis.legendElem = new LegendElement(() => this.updateActiveData())\r\n\t\tshadow.appendChild(this.legendElem)\r\n\r\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\r\n\t\tthis.svgElem.addEventListener(\"mousedown\", (event: MouseEvent) => this.onMouseDown(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseup\", (event: MouseEvent) => this.onMouseUp(event))\r\n\t\tthis.svgElem.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\r\n\t\tshadow.appendChild(this.svgElem)\r\n\r\n\t\tthis.popupElem = new PopupElement()\r\n\t\tshadow.appendChild(this.popupElem)\r\n\r\n\t\tthis.update(config, false)\r\n\t}\r\n\r\n\t// Callback for when the element is added to the DOM\r\n\tprivate connectedCallback() {\r\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\r\n\t\t\tconst { inlineSize: width, blockSize: height } = entries[0].contentBoxSize[0]\r\n\t\t\tif (width > 0 && height > 0) this.draw(width, height)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\r\n\t}\r\n\r\n\tupdate({ data, title, styles }: Config, redraw = true) {\r\n\t\tthis.styles = {\r\n\t\t\tcolourscheme: styles?.colourscheme ?? [\"black\"],\r\n\t\t\txAxis: {\r\n\t\t\t\theight: styles?.xAxis?.height ?? 30,\r\n\t\t\t\tcolour: styles?.xAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.xAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.xAxis?.labels?.spacing ?? 30,\r\n\t\t\t\t\trotation: styles?.xAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.xAxis?.labels?.colour ?? styles?.xAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.xAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\twidth: styles?.yAxis?.width ?? 30,\r\n\t\t\t\tcolour: styles?.yAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.yAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.yAxis?.labels?.spacing ?? 50,\r\n\t\t\t\t\trotation: styles?.yAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.yAxis?.labels?.colour ?? styles?.yAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.yAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tstroke: styles?.grid?.stroke ?? \"#FFF2\",\r\n\t\t\t},\r\n\t\t\tguideline: {\r\n\t\t\t\tstroke: styles?.guideline?.stroke ?? \"#FFF8\",\r\n\t\t\t\twidth: styles?.guideline?.width ?? 1,\r\n\t\t\t\tpoints: {\r\n\t\t\t\t\tr: styles?.guideline?.points?.r ?? 2,\r\n\t\t\t\t\tfill: styles?.guideline?.points?.fill ?? \"white\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlines: {\r\n\t\t\t\twidth: styles?.lines?.width ?? 2,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.data = Object.entries(data)\r\n\t\t\t.sort((a, b) => (b[1].at(-1)?.value?.number ?? 0) - (a[1].at(-1)?.value?.number ?? 0))\r\n\t\t\t.map(([name, points], i, arr) => ({ name, points, colour: getColour(this.styles.colourscheme, (i + 1) / (arr.length + 1)) }))\r\n\r\n\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\tthis.yaxis = getAxis(this.data, \"value\")\r\n\t\tthis.legendElem.update(this.data)\r\n\r\n\t\tthis.shadowRoot.getElementById(\"title\").textContent = title\r\n\r\n\t\tthis.updateActiveData(redraw)\r\n\t}\r\n\r\n\tdraw(width: number, height: number) {\r\n\t\tthis.svgElem.innerHTML = \"\"\r\n\r\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\r\n\r\n\t\tthis.guideElem = this.guide(height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.guideElem)\r\n\r\n\t\tthis.selectionElem = this.selectionOverlay(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.selectionElem)\r\n\t}\r\n\r\n\tselectRange(from: Label, to: Label, redraw = true) {\r\n\t\tthis.xaxis.range = new Range(from, to)\r\n\t\tthis.updateActiveData(false)\r\n\r\n\t\tif (this.activeData.length == 0) {\r\n\t\t\t// selection has no data, reset zoom\r\n\t\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\t\tthis.updateActiveData(false)\r\n\t\t}\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate updateActiveData(redraw = true) {\r\n\t\tconst newActiveData = this.data\r\n\t\t\t.filter(({ name }) => !this.legendElem.disabled.has(name))\r\n\t\t\t.map(({ name, colour, points }) => ({\r\n\t\t\t\tname, colour, points: points.filter(({ label }, i, arr) =>\r\n\t\t\t\t\tthis.xaxis.range.contains(label)\r\n\t\t\t\t\t|| (arr[i - 1] && this.xaxis.range.contains(arr[i - 1].label))\r\n\t\t\t\t\t|| (arr[i + 1] && this.xaxis.range.contains(arr[i + 1].label))\r\n\t\t\t\t)\r\n\t\t\t})).filter(({ points }) => points.length > 0)\r\n\r\n\t\tthis.activeData = newActiveData\r\n\r\n\t\tthis.yaxis = getAxis(this.activeData, \"value\")\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\r\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\r\n\t\t\tthis.xAxis(this.styles.yAxis.width, height - this.styles.xAxis.height, width - this.styles.yAxis.width, this.styles.xAxis.height),\r\n\t\t\tthis.yAxis(0, 0, this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"xaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x - this.styles.yAxis.strokeWidth, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tto: [x + width, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tstroke: this.styles.xAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.xAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + step.getPos(this.xaxis.range) * width,\r\n\t\t\t\ty: y + 20,\r\n\t\t\t\ttransform: `rotate(${this.styles.xAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": textAnchorForLabelRotation(this.styles.xAxis.labels.rotation),\r\n\t\t\t\tstyle: `transform-origin: ${transformOriginForLabelRotation(this.styles.xAxis.labels.rotation)}`,\r\n\t\t\t\tfill: this.styles.xAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.xAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"yaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x + width - this.styles.yAxis.strokeWidth / 2, y],\r\n\t\t\t\tto: [x + width - this.styles.yAxis.strokeWidth / 2, y + height],\r\n\t\t\t\tstroke: this.styles.yAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.yAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + width - 10,\r\n\t\t\t\ty: y + (1 - step.getPos(this.yaxis.range)) * height + 5,\r\n\t\t\t\ttransform: `rotate(${this.styles.yAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": \"end\",\r\n\t\t\t\tstyle: \"transform-origin: right\",\r\n\t\t\t\tfill: this.styles.yAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.yAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-v\",\r\n\t\t\t\tfrom: [step.getPos(this.xaxis.range) * width, 0],\r\n\t\t\t\tto: [step.getPos(this.xaxis.range) * width, height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-h\",\r\n\t\t\t\tfrom: [0, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tto: [width, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t)\r\n\r\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": this.styles.lines.width },\r\n\t\t\t...this.activeData.map(({ name, colour, points: values }, i) => {\r\n\t\t\t\tconst points = values.map(point => [\r\n\t\t\t\t\tRange.UNIT.clamp(point.label.getPos(this.xaxis.range)) * width,\r\n\t\t\t\t\tRange.UNIT.clamp((1 - point.value.getPos(this.yaxis.range))) * height,\r\n\t\t\t\t] as [number, number])\r\n\t\t\t\treturn polyline({ \"data-name\": name, points, fill: \"none\", stroke: colour })\r\n\t\t\t})\r\n\t\t)\r\n\r\n\tprivate selectionOverlay = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\trect({ class: \"selection-overlay\", x: x, y: y, width: 0, height: height, fill: \"#46A4\" })\r\n\r\n\tprivate guide = (height: number): SVGElement =>\r\n\t\tg({ class: \"guide\", transform: `translate(${this.styles.yAxis.width}, 0)`, visibility: \"hidden\" },\r\n\t\t\tline({ class: \"guideline\", from: [0, 0], to: [0, height], stroke: this.styles.guideline.stroke, \"stroke-width\": this.styles.guideline.width }),\r\n\t\t\t...this.activeData.map(() => circle({ class: \"guide-point\", cx: 0, cy: 0, r: this.styles.guideline.points.r, fill: this.styles.guideline.points.fill })),\r\n\t\t)\r\n\r\n\tprivate onMouseDown(event: MouseEvent) {\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.selection = { from: Range.UNIT.clamp(this.canvasCoordRange.normalize(event.clientX - this.svgElem.getBoundingClientRect().left)) }\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseUp(event: MouseEvent) {\r\n\t\tif (this.selection.from != undefined) {\r\n\t\t\tthis.selectRange(\r\n\t\t\t\tnearestLabel(Math.min(this.selection.from, this.selection.to), this.xaxis.range, this.activeData),\r\n\t\t\t\tnearestLabel(Math.max(this.selection.from, this.selection.to), this.xaxis.range, this.activeData)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.selection = {}\r\n\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t}\r\n\r\n\tprivate onMouseMove(event: MouseEvent) {\r\n\t\tconst svgRect = this.svgElem.getBoundingClientRect()\r\n\t\tconst shadowRect = this.shadowRoot.host.getBoundingClientRect()\r\n\t\tconst t = this.canvasCoordRange.normalize(event.clientX - svgRect.left)\r\n\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.handleSelection(t, event.buttons)\r\n\t\t\tthis.handleHover(t, event.clientX - shadowRect.left, event.clientY - shadowRect.top, svgRect)\r\n\t\t} else {\r\n\t\t\tthis.popupElem.hide()\r\n\t\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseLeave(event: MouseEvent) {\r\n\t\tthis.popupElem.hide()\r\n\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t}\r\n\r\n\tprivate handleSelection(t: number, buttons: number) {\r\n\t\tif ((buttons & 1) == 1) {\r\n\t\t\t// primary (left) mouse button pressed\r\n\t\t\tthis.selection.to = Range.UNIT.clamp(t)\r\n\t\t} else {\r\n\t\t\tthis.selection = {}\r\n\t\t}\r\n\r\n\t\tif (this.selection.from != undefined && this.selection.to != undefined) {\r\n\t\t\tthis.selectionElem.setAttribute(\"x\", this.canvasCoordRange.lerp(Math.min(this.selection.from, this.selection.to)).toString())\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", (this.canvasCoordRange.lerp(Math.abs(this.selection.to - this.selection.from)) - this.styles.yAxis.width).toString())\r\n\t\t} else {\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleHover(t: number, x: number, y: number, rect: DOMRect) {\r\n\t\tconst points = this.popupElem.update(x, y, t, this.xaxis.range, this.activeData)\r\n\r\n\t\tthis.guideElem.querySelectorAll(\".guide-point\").forEach((point, i) => {\r\n\t\t\tpoint.setAttribute(\"cy\", ((1 - points[i].value.getPos(this.yaxis.range)) * (rect.height - this.styles.xAxis.height)).toString())\r\n\t\t})\r\n\r\n\t\tthis.guideElem.setAttribute(\"transform\", `translate(${x}, 0)`)\r\n\t\tthis.guideElem.removeAttribute(\"visibility\")\r\n\t}\r\n\r\n\tprivate isWithinGraphArea(x: number, y: number): boolean {\r\n\t\tconst rect = this.svgElem.getBoundingClientRect()\r\n\t\treturn new Range(rect.left + this.styles.yAxis.width, rect.right).contains(x)\r\n\t\t\t&& new Range(rect.top, rect.bottom - this.styles.xAxis.height).contains(y)\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-graph\", SVGraph)\r\n\r\nconst textAnchorForLabelRotation = (rotation: number): \"start\" | \"middle\" | \"end\" =>\r\n\trotation < 0 ? \"end\" : rotation > 0 ? \"start\" : \"middle\"\r\n\r\nconst transformOriginForLabelRotation = (rotation: number): \"left\" | \"center\" | \"right\" =>\r\n\trotation < 0 ? \"right\" : rotation > 0 ? \"left\" : \"center\"\r\n\r\nconst getColour = (colourscheme: string[], i: number) => colourscheme[Math.floor(i * colourscheme.length)]\r\n\r\nfunction getAxis<L extends Label>(data: { name: string, colour: string, points: Point[] }[], key: keyof Point): Axis<L> | EmptyAxis {\r\n\tconst dataFiltered = data.filter(({ points }) => points.length > 0)\r\n\tif (dataFiltered.length == 0) return new EmptyAxis()\r\n\r\n\tconst range = new Range(\r\n\t\tminByKey(dataFiltered.map(({ points }) => minBy(points, p => p[key].number)?.[key]), \"number\"),\r\n\t\tmaxByKey(dataFiltered.map(({ points }) => maxBy(points, p => p[key].number)?.[key]), \"number\"),\r\n\t)\r\n\r\n\treturn new range.min.axisType(range)\r\n}\r\n\r\nconst style = `\r\n:host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 100%;\r\n}\r\n:host([hidden]) {\r\n\tdisplay: none;\r\n}\r\n\r\nh1 {\r\n\tmargin: 0 0 0.5em 0;\r\n\tfont-size: 1.5em;\r\n\ttext-align: center;\r\n}\r\nh1:empty {\r\n\tdisplay: none;\r\n}\r\n\r\nsvg-popup {\r\n\tposition: absolute;\r\n\tpadding: 0.5em 0.6em;\r\n\twhite-space: nowrap;\r\n\tbackground: #2228;\r\n\tborder: 1px solid #FFF1;\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 1px 2px 20px 0px #0008;\r\n\tbackdrop-filter: blur(20px);\r\n\tpointer-events: none; // prevent fast mouse movements from triggering mouseleave on svg\r\n}\r\nsvg-popup h3 {\r\n\tmargin: 0 0 0.6em 0;\r\n}\r\nsvg-popup p {\r\n\tmargin: 0.3em 0 0 0;\r\n}\r\nsvg-popup .name {\r\n\tfont-family: monospace;\r\n\tfont-size: 1.2em;\r\n\tfont-weight: bold;\r\n}\r\n\r\nsvg-legend {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\tmargin: 5px;\r\n}\r\nsvg-legend .legend-item {\r\n\tpadding: 0.25em 0.6em;\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 1em;\r\n}\r\nsvg-legend .legend-item:hover {\r\n\tbackground: #FFF1;\r\n\tborder: 1px solid #FFF1;\r\n\tbox-shadow: 1px 2px 5px 0px #0004;\r\n\tbackdrop-filter: blur(20px);\r\n\tcursor: pointer;\r\n}\r\nsvg-legend .legend-item.disabled {\r\n\topacity: 0.5;\r\n\ttext-decoration: line-through;\r\n}\r\n\r\n.swatch {\r\n\tdisplay: inline-block;\r\n\twidth: 0.75em;\r\n\theight: 0.75em;\r\n\tmargin-right: 0.5em;\r\n\tborder-radius: 50%;\r\n}\r\n\t\r\n.xaxis text, .yaxis text {\r\n\ttransform-box: fill-box;\r\n}`\r\n"],"names":["ns","element","name","attrs","children","elem","document","createElementNS","key","undefined","setAttribute","child","appendChild","g","line","x1","from","y1","x2","to","y2","text","createElement","div","p","span","num","n","number","Range","min","max","constructor","this","static","contains","value","clamp","Math","normalize","lerp","t","minBy","arr","fn","length","reduce","a","b","minByKey","floorTo","floor","nearestLabel","range","data","nearestLabelsIdx","map","points","nearestIdx","label","getPos","x","idx","abs","nearestLabels","closestIdx","i","l","NumberLabel","toString","axisType","NumberAxis","getTicks","magnitude","pow","log10","interval","Array","keys","filter","IntegerLabel","IntegerAxis","DateLabel","toISOString","split","valueOf","DateAxis","unitOffset","ceil","Date","TimeLabel","date","d","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCMilliseconds","String","padStart","TimeAxis","MetricLabel","unit","offset","largestOffset","units","unitsStartOffset","MetricAxis","EmptyLabel","EmptyAxis","_range","_n","nearestPointForLabel","PopupElement","HTMLElement","super","show","removeAttribute","hide","move","y","style","left","top","update","innerHTML","h3","Text","nearestPoints","colour","point","setValues","class","customElements","define","LegendElement","callback","lines","disabled","Set","legendItem","classList","toggle","has","addEventListener","onLegendItemClick","delete","add","SVGraph","svgElem","popupElem","legendElem","guideElem","selectionElem","styles","xaxis","yaxis","resizeObserver","selection","activeData","canvasCoordRange","yAxis","width","clientWidth","config","shadow","attachShadow","mode","styleElem","textContent","h1","id","updateActiveData","xmlns","svg","height","overflow","fill","event","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","connectedCallback","ResizeObserver","entries","inlineSize","blockSize","contentBoxSize","draw","observe","box","title","redraw","colourscheme","xAxis","strokeWidth","labels","spacing","rotation","fontSize","grid","stroke","guideline","r","Object","sort","at","getColour","getAxis","shadowRoot","getElementById","axes","guide","selectionOverlay","selectRange","clientHeight","newActiveData","transform","step","textAnchorForLabelRotation","transformOriginForLabelRotation","values","join","polyline","UNIT","rect","visibility","circle","cx","cy","isWithinGraphArea","clientX","clientY","getBoundingClientRect","svgRect","shadowRect","host","handleSelection","buttons","handleHover","querySelectorAll","forEach","right","bottom","dataFiltered","maxByKey","maxBy"],"mappings":"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"}