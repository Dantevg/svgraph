{"version":3,"file":"svgraph.js","sources":["../src/util/svg.ts","../src/util/html.ts","../src/util/range.ts","../src/util/util.ts","../src/popup.ts","../src/legend.ts","../src/label.ts","../src/labeltypes/empty.ts","../src/labeltypes/number.ts","../src/labeltypes/integer.ts","../src/labeltypes/date.ts","../src/labeltypes/time.ts","../src/labeltypes/metric.ts","../src/svgraph.ts","../src/style.ts"],"sourcesContent":["const ns = \"http://www.w3.org/2000/svg\"\r\n\r\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\r\n\tconst elem = document.createElementNS(ns, name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype stringable = string | number | boolean\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\ttransform?: string\r\n\tfill?: string\r\n\tstroke?: string\r\n\t\"stroke-width\"?: stringable\r\n\t\"font-size\"?: stringable\r\n\tvisibility?: \"visible\" | \"hidden\"\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"svg\", { ...attrs, xmlns: ns }, children) as SVGElement\r\n\r\nexport const circle = (attrs: { cx: stringable, cy: stringable, r: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"circle\", attrs, children) as SVGCircleElement\r\n\r\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children) as SVGGElement\r\n\r\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children) as SVGLineElement\r\n\r\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children) as SVGPolylineElement\r\n\r\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"rect\", attrs, children) as SVGRectElement\r\n\r\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"text\", attrs, children) as SVGTextElement\r\n","function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\r\n\tconst elem = document.createElement(name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\thidden?: string\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\r\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\r\nexport const span = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"span\", attrs, children)\r\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\r\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\r\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\r\nexport const table = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"table\", attrs, children)\r\nexport const tr = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"tr\", attrs, children)\r\nexport const td = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"td\", attrs, children)\r\n","import { Value } from \"./util\"\r\n\r\nexport default class Range<T extends Value> {\r\n\tconstructor(public min: T, public max: T) { }\r\n\r\n\t/**\r\n\t * The unit range [0,1]\r\n\t */\r\n\tstatic UNIT = new Range(0, 1) as Range<number>\r\n\r\n\t/**\r\n\t * The span of this range, i.e. `max - min`\r\n\t */\r\n\tget span() { return this.max.valueOf() - this.min.valueOf() }\r\n\r\n\t/**\r\n\t * Returns whether a value is within this range\r\n\t */\r\n\tcontains = <U extends T>(value: U): boolean => this.min.valueOf() < value.valueOf() && value.valueOf() < this.max.valueOf()\r\n\r\n\t/**\r\n\t * Clamps a value to this range\r\n\t */\r\n\tclamp = <U extends T>(value: U): number => Math.max(this.min.valueOf(), Math.min(value.valueOf(), this.max.valueOf()))\r\n\r\n\t/**\r\n\t * Normalizes a value in this range to [0,1]\r\n\t */\r\n\tnormalize = <U extends T>(value: U): number => (this.span != 0) ? (value.valueOf() - this.min.valueOf()) / this.span : 0\r\n\r\n\t/**\r\n\t * Interpolates a `t` in [0,1] to this range\r\n\t */\r\n\tlerp = (t: number): number => this.min.valueOf() + t * this.span\r\n}\r\n","import Range from \"./range\"\nimport { Label } from \"../label\"\nimport { Point } from \"../svgraph\"\n\nexport type DeepPartial<T> = T extends object\n\t? { [P in keyof T]?: DeepPartial<T[P]> }\n\t: T\n\n/**\n * Any value that can be interpreted as a number.\n * \n * This automatically includes the native `number` type.\n */\nexport type Value = { valueOf(): number }\n\nexport const maxBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) > fn(b) ? a : b) : undefined\nexport const maxByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] > b[key] ? a : b) : undefined\n\nexport const minBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) < fn(b) ? a : b) : undefined\nexport const minByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] < b[key] ? a : b) : undefined\n\nexport const floorTo = (n: number, to: number) => Math.floor(n / to) * to\n\nconst nearestIdx = (arr: number[], to: number): number =>\n\tminByKey(arr.map((x, idx) => [Math.abs(x - to), idx]), 0)[1]\n\nexport function nearestLabel(t: number, range: Range<Label>, data: { name: string, points: Point[] }[]) {\n\tconst nearestLabelsIdx = data.map(({ points }) => nearestIdx(points.map(p => range.normalize(p.label)), t))\n\tconst nearestLabels = nearestLabelsIdx.map((closestIdx, i) => data[i].points[closestIdx].label)\n\treturn minBy(nearestLabels, l => Math.abs(range.normalize(l) - t))\n}\n\nexport const nearestPointForLabel = (arr: Point[], to: Label, range: Range<Label>): Point =>\n\tminByKey(arr.map(x => [x, Math.abs(range.normalize(x.label) - range.normalize(to))]) as [Point, number][], 1)[0]\n","import { div, h3, p, span, table, td, tr } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { minByKey, nearestLabel, nearestPointForLabel } from \"./util/util\"\r\nimport { Dataset, Point } from \"./svgraph\"\r\nimport { Label } from \"./label\"\r\n\r\nexport default class PopupElement extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.setAttribute(\"hidden\", \"\")\r\n\t}\r\n\r\n\tshow() { this.removeAttribute(\"hidden\") }\r\n\r\n\thide() { this.setAttribute(\"hidden\", \"\") }\r\n\r\n\tmove(x: number, y: number, anchor: 'left' | 'right' = 'left') {\r\n\t\tthis.style[anchor] = `${x + 20}px`\r\n\t\tthis.style[anchor == 'left' ? 'right' : 'left'] = \"auto\"\r\n\t\tthis.style.top = `${y}px`\r\n\t}\r\n\r\n\tupdate(x: number, y: number, t: number, rect: DOMRect, label: Label, data: Dataset[], points: Point[]) {\r\n\t\tif (t <= 0.5) {\r\n\t\t\tthis.move(x, y, 'left')\r\n\t\t} else {\r\n\t\t\t// Show popup to the left of the cursor if on the right half of the graph\r\n\t\t\tthis.move(rect.width - x, y, 'right')\r\n\t\t}\r\n\r\n\t\tthis.innerHTML = \"\"\r\n\t\tthis.appendChild(h3({}, new Text(label?.text)))\r\n\t\tthis.setValues(data.map((d, i) => [d, points[i]]))\r\n\r\n\t\tthis.show()\r\n\t}\r\n\r\n\tprivate setValues(points: [Dataset, Point][]) {\r\n\t\tlet rows = []\r\n\t\tfor (const [{ name, colour }, { value }] of points) {\r\n\t\t\tif (value != undefined && value.valueOf() != 0) rows.push(tr({},\r\n\t\t\t\ttd({}, \r\n\t\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\r\n\t\t\t\t\tspan({ class: \"name\" }, new Text(name)),\r\n\t\t\t\t),\r\n\t\t\t\ttd({ class: \"value\" }, new Text(value.text)),\r\n\t\t\t))\r\n\t\t}\r\n\t\tthis.appendChild(table({}, ...rows))\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-popup\", PopupElement)\r\n","import { div, span } from \"./util/html\"\n\nexport default class LegendElement extends HTMLElement {\n\tlines: { name: string, colour: string }[]\n\tdisabled: Set<string> = new Set()\n\n\tconstructor(private callback: () => void) {\n\t\tsuper()\n\t}\n\n\tupdate(data: { name: string, colour: string }[]) {\n\t\tthis.lines = data\n\t\tthis.innerHTML = \"\"\n\t\tfor (const { name, colour } of data) {\n\t\t\tconst legendItem = span({ class: \"legend-item\" },\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\n\t\t\t)\n\t\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\t\tthis.appendChild(legendItem)\n\t\t\tlegendItem.addEventListener(\"click\", () => this.onLegendItemClick(name, legendItem))\n\t\t}\n\t}\n\n\tprivate onLegendItemClick(name: string, legendItem: HTMLElement) {\n\t\tif (this.disabled.has(name)) this.disabled.delete(name)\n\t\telse this.disabled.add(name)\n\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\tthis.callback()\n\t}\n}\n\ncustomElements.define(\"svg-legend\", LegendElement)\n","import Range from \"./util/range\"\nimport { Value } from \"./util/util\"\n\nexport abstract class Label implements Value {\n\tabstract value: Value\n\tabstract get text(): string\n\tabstract get axisType(): { new(range: Range<any>): Axis<Label> }\n\tvalueOf() { return this.value.valueOf() }\n}\n\nexport abstract class Axis<L extends Label> {\n\tconstructor(public range: Range<L>) { }\n\tabstract getTicks(n: number): L[]\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\nimport { Value } from \"../util/util\"\n\nexport class EmptyLabel extends Label {\n\tvalue: Value = { valueOf: () => 0 }\n\tconstructor() { super() }\n\n\tget text() { return \"\" }\n\tget axisType() { return EmptyAxis }\n}\n\nexport class EmptyAxis extends Axis<EmptyLabel> {\n\tstatic RANGE = new Range(new EmptyLabel(), new EmptyLabel())\n\tconstructor(_range?: Range<Label>) { super(EmptyAxis.RANGE) }\n\n\tgetTicks(_n: number): EmptyLabel[] {\n\t\treturn [new EmptyLabel()]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport { floorTo } from \"../util/util\"\n\nexport class NumberLabel extends Label {\n\tconstructor(public value: number) { super() }\n\n\tget text() { return this.value.toString() }\n\tget axisType() { return NumberAxis }\n}\n\nexport class NumberAxis extends Axis<NumberLabel> {\n\tgetTicks(n: number): NumberLabel[] {\n\t\tconst magnitude = Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1)\n\t\tconst interval = floorTo(this.range.span / n, magnitude)\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew NumberLabel(floorTo(x * interval + this.range.min.valueOf(), magnitude))\n\t\t)].filter((value, i, arr) => i == 0 || value.valueOf() != arr[i - 1].valueOf())\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport { floorTo } from \"../util/util\"\n\nexport class IntegerLabel extends Label {\n\tconstructor(public value: number) { super(); this.value = Math.floor(value) }\n\n\tget text() { return this.value.toString() }\n\tget axisType() { return IntegerAxis }\n}\n\nexport class IntegerAxis extends Axis<IntegerLabel> {\n\tgetTicks(n: number): IntegerLabel[] {\n\t\tconst magnitude = Math.max(1, Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1))\n\t\tconst interval = floorTo(this.range.span / n, magnitude)\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew IntegerLabel(x * interval + this.range.min.valueOf())\n\t\t)].filter((value, i, arr) => i == 0 || value.valueOf() != arr[i - 1].valueOf())\n\t}\n}\n","import { Axis, Label } from \"../label\"\n\nexport class DateLabel extends Label {\n\tconstructor(public value: Date) { super() }\n\n\tget text() { return this.value.toISOString().split(\"T\")[0] }\n\tget axisType() { return DateAxis }\n}\n\nexport class DateAxis extends Axis<DateLabel> {\n\tgetTicks(n: number): DateLabel[] {\n\t\t// total span in number of days\n\t\tconst span = this.range.span / 24 / 60 / 60 / 1000\n\n\t\tconst unitOffset = (span / 30 > n)\n\t\t\t? 30 // \"months\"\n\t\t\t: (span / 7 > n)\n\t\t\t\t? 7 // weeks\n\t\t\t\t: 1 // days\n\n\t\tconst interval = Math.ceil(span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(span / interval) + 1).keys().map(x =>\n\t\t\tnew DateLabel(new Date(x * interval * 24 * 60 * 60 * 1000 + this.range.min.valueOf()))\n\t\t)]\n\t}\n}\n","import { Axis, Label } from \"../label\"\n\nexport class TimeLabel extends Label {\n\tconstructor(public value: number) { super() }\n\n\tget text() {\n\t\tconst date = new Date(this.value * 1000)\n\t\tconst d = Math.floor(this.value / 24 / 60 / 60)\n\t\tconst h = date.getUTCHours()\n\t\tconst m = date.getUTCMinutes()\n\t\tconst s = date.getUTCSeconds() + date.getUTCMilliseconds() / 1000\n\t\tif (h > 0 || d > 0) {\n\t\t\tif (m == 0) return `${h + d * 24} h`\n\t\t\telse return `${h + d * 24}:${String(m).padStart(2, \"0\")} h`\n\t\t} else if (m > 0) {\n\t\t\treturn `${m}:${String(Math.floor(s)).padStart(2, \"0\")}`\n\t\t} else {\n\t\t\treturn `${s} s`\n\t\t}\n\t}\n\tget axisType() { return TimeAxis }\n}\n\nexport class TimeAxis extends Axis<TimeLabel> {\n\tgetTicks(n: number): TimeLabel[] {\n\t\tconst unitOffset = (this.range.span / 24 / 60 / 60 > n)\n\t\t\t? 24 * 60 * 60 // days\n\t\t\t: (this.range.span / 60 / 60 > n)\n\t\t\t\t? 60 * 60 // hours\n\t\t\t\t: (this.range.span / 60 > n)\n\t\t\t\t\t? 60 // minutes\n\t\t\t\t\t: 1 // seconds\n\n\t\tconst interval = Math.ceil(this.range.span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew TimeLabel(x * interval + this.range.min.valueOf())\n\t\t)]\n\t}\n}\n","import { Axis, Label } from \"../label\"\n\nexport class MetricLabel extends Label {\n\tconstructor(public value: number, public unit: string) { super() }\n\n\tget text() {\n\t\tconst offset = MetricLabel.largestOffset(this.value)\n\t\treturn `${Math.floor(this.value / Math.pow(10, offset * 3))} ${MetricLabel.units[offset + MetricLabel.unitsStartOffset]}${this.unit}`\n\t}\n\tget axisType() { return MetricAxis }\n\n\tstatic units = [\"n\", \"u\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"]\n\tstatic unitsStartOffset = 3\n\n\tstatic largestOffset = (value: number): number =>\n\t\t(value == 0) ? 0 : Math.floor(Math.log10(value) / 3)\n}\n\nexport class MetricAxis extends Axis<MetricLabel> {\n\tgetTicks = (n: number): MetricLabel[] =>\n\t\t[...Array(n).keys().map(x => new MetricLabel(\n\t\t\tMath.floor(this.range.lerp(x / (n - 1))),\n\t\t\tthis.range.min.unit\n\t\t))]\n}\n","import { circle, g, line, polyline, rect, svg, text } from \"./util/svg\"\r\nimport { h1 } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { DeepPartial, maxBy, minBy, nearestLabel, nearestPointForLabel } from \"./util/util\"\r\nimport { Label, Axis } from \"./label\"\r\nimport PopupElement from \"./popup\"\r\nimport LegendElement from \"./legend\"\r\nimport { EmptyAxis } from \"./labeltypes/empty\"\r\nimport style from \"./style\"\r\n\r\nexport { Label } from \"./label\"\r\nexport { NumberLabel } from \"./labeltypes/number\"\r\nexport { IntegerLabel } from \"./labeltypes/integer\"\r\nexport { DateLabel } from \"./labeltypes/date\"\r\nexport { TimeLabel } from \"./labeltypes/time\"\r\nexport { MetricLabel } from \"./labeltypes/metric\"\r\nexport { EmptyLabel } from \"./labeltypes/empty\"\r\n\r\nexport type Point = { label: Label, value: Label }\r\n\r\nexport type Config = {\r\n\tdata: { [category: string]: Point[] }\r\n\tstyles?: DeepPartial<Styles>\r\n\ttitle?: string\r\n}\r\n\r\ntype AxisStyle = {\r\n\tcolour: string\r\n\tstrokeWidth: number\r\n\tlabels: {\r\n\t\tspacing: number\r\n\t\trotation: number\r\n\t\tcolour: string\r\n\t\tfontSize: string\r\n\t}\r\n}\r\n\r\nexport type Styles = {\r\n\tcolourscheme: string[]\r\n\txAxis: AxisStyle & { height: number }\r\n\tyAxis: AxisStyle & { width: number }\r\n\tgrid: {\r\n\t\tstroke: string\r\n\t}\r\n\tguideline: {\r\n\t\tstroke: string\r\n\t\twidth: number\r\n\t\tpoints: {\r\n\t\t\tr: number\r\n\t\t\tfill: string\r\n\t\t}\r\n\t}\r\n\tlines: {\r\n\t\twidth: number\r\n\t}\r\n}\r\n\r\nexport type Dataset = {\r\n\tname: string\r\n\tcolour: string\r\n\tpoints: Point[]\r\n}\r\n\r\nexport default class SVGraph extends HTMLElement {\r\n\tsvgElem: SVGElement\r\n\tpopupElem: PopupElement\r\n\tlegendElem: LegendElement\r\n\tguideElem: SVGElement\r\n\tselectionElem: SVGElement\r\n\r\n\tdata: Dataset[]\r\n\tstyles: Styles\r\n\txaxis: Axis<Label>\r\n\tyaxis: Axis<Label>\r\n\r\n\tprivate resizeObserver: ResizeObserver\r\n\tprivate selection: { from?: number, to?: number } = {}\r\n\tprivate activeData: Dataset[]\r\n\r\n\tget canvasCoordRange() { return new Range(this.styles.yAxis.width, this.svgElem.clientWidth) }\r\n\r\n\tconstructor(config: Config) {\r\n\t\tsuper()\r\n\r\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\r\n\r\n\t\tconst styleElem = document.createElement(\"style\")\r\n\t\tstyleElem.textContent = style\r\n\t\tshadow.appendChild(styleElem)\r\n\r\n\t\tshadow.appendChild(h1({ id: \"title\" }))\r\n\r\n\t\tthis.legendElem = new LegendElement(() => this.updateActiveData())\r\n\t\tshadow.appendChild(this.legendElem)\r\n\r\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\r\n\t\tthis.svgElem.addEventListener(\"mousedown\", (event: MouseEvent) => this.onMouseDown(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseup\", (event: MouseEvent) => this.onMouseUp(event))\r\n\t\tthis.svgElem.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\r\n\t\tshadow.appendChild(this.svgElem)\r\n\r\n\t\tthis.popupElem = new PopupElement()\r\n\t\tshadow.appendChild(this.popupElem)\r\n\r\n\t\tthis.update(config, false)\r\n\t}\r\n\r\n\t// Callback for when the element is added to the DOM\r\n\tprivate connectedCallback() {\r\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\r\n\t\t\tconst { inlineSize: width, blockSize: height } = entries[0].contentBoxSize[0]\r\n\t\t\tif (width > 0 && height > 0) this.draw(width, height)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\r\n\t}\r\n\r\n\tupdate({ data, title, styles }: Config, redraw = true) {\r\n\t\tthis.styles = {\r\n\t\t\tcolourscheme: styles?.colourscheme ?? [\"black\"],\r\n\t\t\txAxis: {\r\n\t\t\t\theight: styles?.xAxis?.height ?? 30,\r\n\t\t\t\tcolour: styles?.xAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.xAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.xAxis?.labels?.spacing ?? 30,\r\n\t\t\t\t\trotation: styles?.xAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.xAxis?.labels?.colour ?? styles?.xAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.xAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\twidth: styles?.yAxis?.width ?? 30,\r\n\t\t\t\tcolour: styles?.yAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.yAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.yAxis?.labels?.spacing ?? 50,\r\n\t\t\t\t\trotation: styles?.yAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.yAxis?.labels?.colour ?? styles?.yAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.yAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tstroke: styles?.grid?.stroke ?? \"#FFF2\",\r\n\t\t\t},\r\n\t\t\tguideline: {\r\n\t\t\t\tstroke: styles?.guideline?.stroke ?? \"#FFF8\",\r\n\t\t\t\twidth: styles?.guideline?.width ?? 1,\r\n\t\t\t\tpoints: {\r\n\t\t\t\t\tr: styles?.guideline?.points?.r ?? 2,\r\n\t\t\t\t\tfill: styles?.guideline?.points?.fill ?? \"white\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlines: {\r\n\t\t\t\twidth: styles?.lines?.width ?? 2,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.data = Object.entries(data)\r\n\t\t\t.sort((a, b) => (b[1].at(-1)?.value?.valueOf() ?? 0) - (a[1].at(-1)?.value?.valueOf() ?? 0))\r\n\t\t\t.map(([name, points], i, arr) => ({ name, points, colour: getColour(this.styles.colourscheme, (i + 1) / (arr.length + 1)) }))\r\n\r\n\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\tthis.yaxis = getAxis(this.data, \"value\")\r\n\t\tthis.legendElem.update(this.data)\r\n\r\n\t\tthis.shadowRoot.getElementById(\"title\").textContent = title\r\n\r\n\t\tthis.updateActiveData(redraw)\r\n\t}\r\n\r\n\tdraw(width: number, height: number) {\r\n\t\tthis.svgElem.innerHTML = \"\"\r\n\r\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\r\n\r\n\t\tthis.guideElem = this.guide(height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.guideElem)\r\n\r\n\t\tthis.selectionElem = this.selectionOverlay(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.selectionElem)\r\n\t}\r\n\r\n\tselectRange(from: Label, to: Label, redraw = true) {\r\n\t\tthis.xaxis.range = new Range(from, to)\r\n\t\tthis.updateActiveData(false)\r\n\r\n\t\tif (this.activeData.length == 0) {\r\n\t\t\t// selection has no data, reset zoom\r\n\t\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\t\tthis.updateActiveData(false)\r\n\t\t}\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate updateActiveData(redraw = true) {\r\n\t\tconst newActiveData = this.data\r\n\t\t\t.filter(({ name }) => !this.legendElem.disabled.has(name))\r\n\t\t\t.map(({ name, colour, points }) => ({\r\n\t\t\t\tname, colour, points: points.filter(({ label }, i, arr) =>\r\n\t\t\t\t\tthis.xaxis.range.contains(label)\r\n\t\t\t\t\t|| (arr[i - 1] && this.xaxis.range.contains(arr[i - 1].label))\r\n\t\t\t\t\t|| (arr[i + 1] && this.xaxis.range.contains(arr[i + 1].label))\r\n\t\t\t\t)\r\n\t\t\t})).filter(({ points }) => points.length > 0)\r\n\r\n\t\tthis.activeData = newActiveData\r\n\r\n\t\tthis.yaxis = getAxis(this.activeData, \"value\")\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\r\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\r\n\t\t\tthis.xAxis(this.styles.yAxis.width, height - this.styles.xAxis.height, width - this.styles.yAxis.width, this.styles.xAxis.height),\r\n\t\t\tthis.yAxis(0, 0, this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"xaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x - this.styles.yAxis.strokeWidth, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tto: [x + width, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tstroke: this.styles.xAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.xAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + this.xaxis.range.normalize(step) * width,\r\n\t\t\t\ty: y + 20,\r\n\t\t\t\ttransform: `rotate(${this.styles.xAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": textAnchorForLabelRotation(this.styles.xAxis.labels.rotation),\r\n\t\t\t\tstyle: `transform-origin: ${transformOriginForLabelRotation(this.styles.xAxis.labels.rotation)}`,\r\n\t\t\t\tfill: this.styles.xAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.xAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"yaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x + width - this.styles.yAxis.strokeWidth / 2, y],\r\n\t\t\t\tto: [x + width - this.styles.yAxis.strokeWidth / 2, y + height],\r\n\t\t\t\tstroke: this.styles.yAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.yAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + width - 10,\r\n\t\t\t\ty: y + (1 - this.yaxis.range.normalize(step)) * height + 5,\r\n\t\t\t\ttransform: `rotate(${this.styles.yAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": \"end\",\r\n\t\t\t\tstyle: \"transform-origin: right\",\r\n\t\t\t\tfill: this.styles.yAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.yAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-v\",\r\n\t\t\t\tfrom: [this.xaxis.range.normalize(step) * width, 0],\r\n\t\t\t\tto: [this.xaxis.range.normalize(step) * width, height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-h\",\r\n\t\t\t\tfrom: [0, (1 - this.yaxis.range.normalize(step)) * height],\r\n\t\t\t\tto: [width, (1 - this.yaxis.range.normalize(step)) * height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t)\r\n\r\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": this.styles.lines.width },\r\n\t\t\t...this.activeData.map(({ name, colour, points: values }, i) => {\r\n\t\t\t\tconst points = values.map(point => [\r\n\t\t\t\t\tRange.UNIT.clamp(this.xaxis.range.normalize(point.label)) * width,\r\n\t\t\t\t\tRange.UNIT.clamp((1 - this.yaxis.range.normalize(point.value))) * height,\r\n\t\t\t\t] as [number, number])\r\n\t\t\t\treturn polyline({ \"data-name\": name, points, fill: \"none\", stroke: colour })\r\n\t\t\t})\r\n\t\t)\r\n\r\n\tprivate selectionOverlay = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\trect({ class: \"selection-overlay\", x: x, y: y, width: 0, height: height, fill: \"#46A4\" })\r\n\r\n\tprivate guide = (height: number): SVGElement =>\r\n\t\tg({ class: \"guide\", transform: `translate(${this.styles.yAxis.width}, 0)`, visibility: \"hidden\" },\r\n\t\t\tline({ class: \"guideline\", from: [0, 0], to: [0, height], stroke: this.styles.guideline.stroke, \"stroke-width\": this.styles.guideline.width }),\r\n\t\t\t...this.activeData.map(() => circle({ class: \"guide-point\", cx: 0, cy: 0, r: this.styles.guideline.points.r, fill: this.styles.guideline.points.fill })),\r\n\t\t)\r\n\r\n\tprivate onMouseDown(event: MouseEvent) {\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.selection = { from: Range.UNIT.clamp(this.canvasCoordRange.normalize(event.clientX - this.svgElem.getBoundingClientRect().left)) }\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseUp(event: MouseEvent) {\r\n\t\tif (this.selection.from != undefined) {\r\n\t\t\tthis.selectRange(\r\n\t\t\t\tnearestLabel(Math.min(this.selection.from, this.selection.to), this.xaxis.range, this.activeData),\r\n\t\t\t\tnearestLabel(Math.max(this.selection.from, this.selection.to), this.xaxis.range, this.activeData)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.selection = {}\r\n\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t}\r\n\r\n\tprivate onMouseMove(event: MouseEvent) {\r\n\t\tconst svgRect = this.svgElem.getBoundingClientRect()\r\n\t\tconst shadowRect = this.shadowRoot.host.getBoundingClientRect()\r\n\t\tconst t = this.canvasCoordRange.normalize(event.clientX - svgRect.left)\r\n\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.handleSelection(t, event.buttons)\r\n\t\t\tthis.handleHover(t, event.clientX - shadowRect.left, event.clientY - shadowRect.top, shadowRect, svgRect)\r\n\t\t} else {\r\n\t\t\tthis.popupElem.hide()\r\n\t\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseLeave(event: MouseEvent) {\r\n\t\tthis.popupElem.hide()\r\n\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t}\r\n\r\n\tprivate handleSelection(t: number, buttons: number) {\r\n\t\tif ((buttons & 1) == 1) {\r\n\t\t\t// primary (left) mouse button pressed\r\n\t\t\tthis.selection.to = Range.UNIT.clamp(t)\r\n\t\t} else {\r\n\t\t\tthis.selection = {}\r\n\t\t}\r\n\r\n\t\tif (this.selection.from != undefined && this.selection.to != undefined) {\r\n\t\t\tthis.selectionElem.setAttribute(\"x\", this.canvasCoordRange.lerp(Math.min(this.selection.from, this.selection.to)).toString())\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", (this.canvasCoordRange.lerp(Math.abs(this.selection.to - this.selection.from)) - this.styles.yAxis.width).toString())\r\n\t\t} else {\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleHover(t: number, x: number, y: number, shadowRect: DOMRect, svgRect: DOMRect) {\r\n\t\tconst label = nearestLabel(t, this.xaxis.range, this.activeData)\r\n\t\tconst points = this.activeData.map(({ points }) => nearestPointForLabel(points, label, this.xaxis.range))\r\n\t\t\r\n\t\tthis.popupElem.update(x, y, t, shadowRect, label, this.activeData, points)\r\n\r\n\t\tthis.guideElem.querySelectorAll(\".guide-point\").forEach((point, i) => {\r\n\t\t\tpoint.setAttribute(\"cy\", ((1 - this.yaxis.range.normalize(points[i].value)) * (svgRect.height - this.styles.xAxis.height)).toString())\r\n\t\t})\r\n\r\n\t\tthis.guideElem.setAttribute(\"transform\", `translate(${this.xaxis.range.normalize(label) * (svgRect.width - this.styles.yAxis.width) + this.styles.yAxis.width}, 0)`)\r\n\t\tthis.guideElem.removeAttribute(\"visibility\")\r\n\t}\r\n\r\n\tprivate isWithinGraphArea(x: number, y: number): boolean {\r\n\t\tconst rect = this.svgElem.getBoundingClientRect()\r\n\t\treturn new Range(rect.left + this.styles.yAxis.width, rect.right).contains(x)\r\n\t\t\t&& new Range(rect.top, rect.bottom - this.styles.xAxis.height).contains(y)\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-graph\", SVGraph)\r\n\r\nconst textAnchorForLabelRotation = (rotation: number): \"start\" | \"middle\" | \"end\" =>\r\n\trotation < 0 ? \"end\" : rotation > 0 ? \"start\" : \"middle\"\r\n\r\nconst transformOriginForLabelRotation = (rotation: number): \"left\" | \"center\" | \"right\" =>\r\n\trotation < 0 ? \"right\" : rotation > 0 ? \"left\" : \"center\"\r\n\r\nconst getColour = (colourscheme: string[], i: number) => colourscheme[Math.floor(i * colourscheme.length)]\r\n\r\nfunction getAxis(data: { name: string, colour: string, points: Point[] }[], key: keyof Point): Axis<Label> {\r\n\tconst dataFiltered = data.filter(({ points }) => points.length > 0)\r\n\tif (dataFiltered.length == 0) return new EmptyAxis()\r\n\r\n\tconst range = new Range(\r\n\t\tminBy(dataFiltered.map(({ points }) => minBy(points, p => p[key].valueOf())?.[key]), l => l.valueOf()),\r\n\t\tmaxBy(dataFiltered.map(({ points }) => maxBy(points, p => p[key].valueOf())?.[key]), l => l.valueOf()),\r\n\t)\r\n\r\n\treturn new range.min.axisType(range)\r\n}\r\n","export default `\n:host {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n}\n:host([hidden]) {\n\tdisplay: none;\n}\n\nh1 {\n\tmargin: 0 0 0.5em 0;\n\tfont-size: 1.5em;\n\ttext-align: center;\n}\nh1:empty {\n\tdisplay: none;\n}\n\nsvg-popup {\n\tposition: absolute;\n\tpadding: 0.5em 0.6em;\n\twhite-space: nowrap;\n\tbackground: #2228;\n\tborder: 1px solid #FFF1;\n\tborder-radius: 10px;\n\tbox-shadow: 1px 2px 20px 0px #0008;\n\tbackdrop-filter: blur(20px);\n\tpointer-events: none; /* prevent fast mouse movements from triggering mouseleave on svg */\n}\nsvg-popup h3 {\n\tmargin: 0 0 0.4em 0;\n}\nsvg-popup table {\n\tmargin-bottom: -0.1em;\n}\nsvg-popup .name {\n\tfont-family: monospace;\n\tfont-size: 1.2em;\n\tfont-weight: bold;\n}\nsvg-popup .value {\n\ttext-align: right;\n\tborder-left: 0.5em solid transparent;\n}\n\nsvg-legend {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tmargin: 5px;\n}\nsvg-legend .legend-item {\n\tpadding: 0.25em 0.6em;\n\tborder: 1px solid transparent;\n\tborder-radius: 1em;\n}\nsvg-legend .legend-item:hover {\n\tbackground: #FFF1;\n\tborder: 1px solid #FFF1;\n\tbox-shadow: 1px 2px 5px 0px #0004;\n\tbackdrop-filter: blur(20px);\n\tcursor: pointer;\n}\nsvg-legend .legend-item.disabled {\n\topacity: 0.5;\n\ttext-decoration: line-through;\n}\n\n.swatch {\n\tdisplay: inline-block;\n\twidth: 0.75em;\n\theight: 0.75em;\n\tmargin-right: 0.5em;\n\tborder-radius: 50%;\n}\n\t\n.xaxis text, .yaxis text {\n\ttransform-box: fill-box;\n}`\n"],"names":["ns","element","name","attrs","children","elem","document","createElementNS","key","undefined","setAttribute","child","appendChild","g","line","x1","from","y1","x2","to","y2","text","createElement","div","span","tr","td","Range","min","max","constructor","this","static","valueOf","contains","value","clamp","Math","normalize","lerp","t","maxBy","arr","fn","length","reduce","a","b","minBy","minByKey","floorTo","n","floor","nearestLabel","range","data","nearestLabelsIdx","map","points","nearestIdx","p","label","x","idx","abs","nearestLabels","closestIdx","i","l","PopupElement","HTMLElement","super","show","removeAttribute","hide","move","y","anchor","style","top","update","rect","width","innerHTML","h3","Text","setValues","d","rows","colour","push","class","table","customElements","define","LegendElement","callback","lines","disabled","Set","legendItem","classList","toggle","has","addEventListener","onLegendItemClick","delete","add","Label","Axis","EmptyLabel","axisType","EmptyAxis","_range","RANGE","getTicks","_n","NumberLabel","toString","NumberAxis","magnitude","pow","log10","interval","Array","keys","filter","IntegerLabel","IntegerAxis","DateLabel","toISOString","split","DateAxis","unitOffset","ceil","Date","TimeLabel","date","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCMilliseconds","String","padStart","TimeAxis","MetricLabel","unit","offset","largestOffset","units","unitsStartOffset","MetricAxis","SVGraph","svgElem","popupElem","legendElem","guideElem","selectionElem","styles","xaxis","yaxis","resizeObserver","selection","activeData","canvasCoordRange","yAxis","clientWidth","config","shadow","attachShadow","mode","styleElem","textContent","h1","id","updateActiveData","xmlns","svg","height","overflow","fill","event","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","connectedCallback","ResizeObserver","entries","inlineSize","blockSize","contentBoxSize","draw","observe","box","title","redraw","colourscheme","xAxis","strokeWidth","labels","spacing","rotation","fontSize","grid","stroke","guideline","r","Object","sort","at","getColour","getAxis","shadowRoot","getElementById","axes","guide","selectionOverlay","selectRange","clientHeight","newActiveData","transform","step","textAnchorForLabelRotation","transformOriginForLabelRotation","values","join","polyline","point","UNIT","visibility","circle","cx","cy","isWithinGraphArea","clientX","clientY","getBoundingClientRect","left","svgRect","shadowRect","host","handleSelection","buttons","handleHover","nearestPointForLabel","querySelectorAll","forEach","right","bottom","dataFiltered"],"mappings":"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"}