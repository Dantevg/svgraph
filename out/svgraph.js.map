{"version":3,"file":"svgraph.js","sources":["../src/util/svg.ts","../src/util/html.ts","../src/util/range.ts","../src/util/util.ts","../src/popup.ts","../src/legend.ts","../src/labeltypes/number.ts","../src/labeltypes/date.ts","../src/labeltypes/time.ts","../src/labeltypes/metric.ts","../src/svgraph.ts"],"sourcesContent":["const ns = \"http://www.w3.org/2000/svg\"\r\n\r\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\r\n\tconst elem = document.createElementNS(ns, name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype stringable = string | number | boolean\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\ttransform?: string\r\n\tfill?: string\r\n\tstroke?: string\r\n\t\"stroke-width\"?: stringable\r\n\t\"font-size\"?: stringable\r\n\tvisibility?: \"visible\" | \"hidden\"\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"svg\", { ...attrs, xmlns: ns }, children) as SVGElement\r\n\r\nexport const circle = (attrs: { cx: stringable, cy: stringable, r: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"circle\", attrs, children) as SVGCircleElement\r\n\r\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children) as SVGGElement\r\n\r\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children) as SVGLineElement\r\n\r\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children) as SVGPolylineElement\r\n\r\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"rect\", attrs, children) as SVGRectElement\r\n\r\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"text\", attrs, children) as SVGTextElement\r\n","function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\r\n\tconst elem = document.createElement(name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\thidden?: string\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\r\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\r\nexport const span = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"span\", attrs, children)\r\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\r\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\r\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\r\n","const num = (n: number | { number: number }) => typeof n === \"number\" ? n : n.number\r\n\r\nexport default class Range<T extends number | { number: number }> {\r\n\tconstructor(public min: T, public max: T) { }\r\n\r\n\t/**\r\n\t * The unit range [0,1]\r\n\t */\r\n\tstatic UNIT = new Range(0, 1) as Range<number>\r\n\r\n\t/**\r\n\t * The span of this range, i.e. `max - min`\r\n\t */\r\n\tget span() { return num(this.max) - num(this.min) }\r\n\r\n\t/**\r\n\t * Returns whether a value is within this range\r\n\t */\r\n\tcontains = (value: T): boolean => num(this.min) < num(value) && num(value) < num(this.max)\r\n\r\n\t/**\r\n\t * Clamps a value to this range\r\n\t */\r\n\tclamp = (value: number): number => Math.max(num(this.min), Math.min(value, num(this.max)))\r\n\r\n\t/**\r\n\t * Normalizes a value in a given [min,max] range to [0,1]\r\n\t */\r\n\tnormalize = (value: number): number => (value - num(this.min)) / (this.span)\r\n\r\n\t/**\r\n\t * Interpolates a `t` in [0,1] to a given [min,max] range\r\n\t */\r\n\tlerp = (t: number): number => num(this.min) + t * this.span\r\n}\r\n","import Range from \"./range\"\nimport { Label } from \"../label\"\nimport { Point } from \"../svgraph\"\n\nexport type DeepPartial<T> = T extends object\n\t? { [P in keyof T]?: DeepPartial<T[P]> }\n\t: T\n\nexport const maxBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) > fn(b) ? a : b) : undefined\nexport const maxByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] > b[key] ? a : b) : undefined\n\nexport const minBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) < fn(b) ? a : b) : undefined\nexport const minByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] < b[key] ? a : b) : undefined\n\nconst nearestIdx = (arr: number[], to: number): number =>\n\tminByKey(arr.map((x, idx) => [Math.abs(x - to), idx]), 0)[1]\n\nexport function nearestLabel(t: number, range: Range<Label>, data: { name: string, points: Point[] }[]) {\n\tconst nearestLabelsIdx = data.map(({ points }) => nearestIdx(points.map(p => p.label.getPos(range)), t))\n\tconst nearestLabels = nearestLabelsIdx.map((closestIdx, i) => data[i].points[closestIdx].label)\n\treturn minBy(nearestLabels, l => Math.abs(l.getPos(range) - t))\n}\n","import { div, h3, p, span } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { minByKey, nearestLabel } from \"./util/util\"\r\nimport { Point } from \"./svgraph\"\r\nimport { Label } from \"./label\"\r\n\r\nconst nearestPointForLabel = (arr: Point[], to: Label, range: Range<Label>): Point =>\r\n\tminByKey(arr.map(x => [x, Math.abs(x.label.getPos(range) - to.getPos(range))]) as [Point, number][], 1)[0]\r\n\r\nexport default class PopupElement extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.setAttribute(\"hidden\", \"\")\r\n\t}\r\n\r\n\tshow() { this.removeAttribute(\"hidden\") }\r\n\r\n\thide() { this.setAttribute(\"hidden\", \"\") }\r\n\r\n\tmove(x: number, y: number) {\r\n\t\tthis.style.left = `${x + 20}px`\r\n\t\tthis.style.top = `${y}px`\r\n\t}\r\n\r\n\tupdate(x: number, y: number, t: number, range: Range<Label>, data: { name: string, colour: string, points: Point[] }[]): Point[] {\r\n\t\tthis.move(x, y)\r\n\r\n\t\tconst label = nearestLabel(t, range, data)\r\n\r\n\t\tthis.innerHTML = \"\"\r\n\t\tthis.appendChild(h3({}, new Text(label.text)))\r\n\r\n\t\tconst nearestPoints = data.map(({ name, colour, points }) => ({ name, colour, point: nearestPointForLabel(points, label, range) }))\r\n\t\tthis.setValues(nearestPoints)\r\n\r\n\t\tthis.show()\r\n\r\n\t\treturn nearestPoints.map(x => x.point)\r\n\t}\r\n\r\n\tprivate setValues(points: { name: string, colour: string, point: Point }[]) {\r\n\t\tfor (const { name, colour, point: { value } } of points) {\r\n\t\t\tif (value != undefined && value.number != 0) this.appendChild(p({},\r\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\r\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\r\n\t\t\t\tnew Text(\": \"),\r\n\t\t\t\tspan({ class: \"value\" }, new Text(value.text)),\r\n\t\t\t))\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-popup\", PopupElement)\r\n","import { div, span } from \"./util/html\"\n\nexport default class LegendElement extends HTMLElement {\n\tlines: { name: string, colour: string }[]\n\tdisabled: Set<string> = new Set()\n\n\tconstructor(private callback: () => void) {\n\t\tsuper()\n\t}\n\n\tupdate(data: { name: string, colour: string }[]) {\n\t\tthis.lines = data\n\t\tthis.innerHTML = \"\"\n\t\tfor (const { name, colour } of data) {\n\t\t\tconst legendItem = span({ class: \"legend-item\" },\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\n\t\t\t)\n\t\t\tthis.appendChild(legendItem)\n\t\t\tlegendItem.addEventListener(\"click\", () => this.onLegendItemClick(name, legendItem))\n\t\t}\n\t}\n\n\tprivate onLegendItemClick(name: string, legendItem: HTMLElement) {\n\t\tif (this.disabled.has(name)) this.disabled.delete(name)\n\t\telse this.disabled.add(name)\n\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\tthis.callback()\n\t}\n}\n\ncustomElements.define(\"svg-legend\", LegendElement)\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class NumberLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() { return this.value.toString() }\n\tget number() { return this.value }\n\tget axisType() { return NumberAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class NumberAxis implements Axis<NumberLabel> {\n\tconstructor(public range: Range<NumberLabel>) { }\n\n\tgetTicks(n: number): NumberLabel[] {\n\t\tconst magnitude = Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1)\n\t\tconst interval = Math.floor(this.range.span / n / magnitude) * magnitude\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\n\t\t\tnew NumberLabel(Math.floor(x * interval + this.range.min.number))\n\t\t)]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class DateLabel implements Label {\n\tconstructor(public value: Date) { }\n\n\tget text() { return this.value.toISOString().split(\"T\")[0] }\n\tget number() { return this.value.valueOf() }\n\tget axisType() { return DateAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class DateAxis implements Axis<DateLabel> {\n\tconstructor(public range: Range<DateLabel>) { }\n\n\tgetTicks(n: number): DateLabel[] {\n\t\t// total span in number of days\n\t\tconst span = this.range.span / 24 / 60 / 60 / 1000\n\n\t\tconst unitOffset = (span / 30 > n)\n\t\t\t? 30 // \"months\"\n\t\t\t: (span / 7 > n)\n\t\t\t\t? 7 // weeks\n\t\t\t\t: 1 // days\n\n\t\tconst interval = Math.ceil(span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(span / interval) + 1).keys().map(x => new DateLabel(new Date(x * interval * 24 * 60 * 60 * 1000 + this.range.min.number)))]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class TimeLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() {\n\t\tconst date = new Date(this.value * 1000)\n\t\tconst d = Math.floor(this.value / 24 / 60 / 60)\n\t\tconst h = date.getUTCHours()\n\t\tconst m = date.getUTCMinutes()\n\t\tconst s = date.getUTCSeconds() + date.getUTCMilliseconds() / 1000\n\t\tif (h > 0 || d > 0) {\n\t\t\tif (m == 0) return `${h + d * 24} h`\n\t\t\telse return `${h + d * 24}:${String(m).padStart(2, \"0\")} h`\n\t\t} else if (m > 0) {\n\t\t\treturn `${m}:${String(Math.floor(s)).padStart(2, \"0\")}`\n\t\t} else {\n\t\t\treturn `${s} s`\n\t\t}\n\t}\n\tget number() { return this.value }\n\tget axisType() { return TimeAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n}\n\nexport class TimeAxis implements Axis<TimeLabel> {\n\tconstructor(public range: Range<TimeLabel>) { }\n\n\tgetTicks(n: number): TimeLabel[] {\n\t\tconst unitOffset = (this.range.span / 24 / 60 / 60 > n)\n\t\t\t? 24 * 60 * 60 // days\n\t\t\t: (this.range.span / 60 / 60 > n)\n\t\t\t\t? 60 * 60 // hours\n\t\t\t\t: (this.range.span / 60 > n)\n\t\t\t\t\t? 60 // minutes\n\t\t\t\t\t: 1 // seconds\n\n\t\tconst interval = Math.ceil(this.range.span / unitOffset / n) * unitOffset\n\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x => new TimeLabel(x * interval + this.range.min.number))]\n\t}\n}\n","import { Axis, Label } from \"../label\"\nimport Range from \"../util/range\"\n\nexport class MetricLabel implements Label {\n\tconstructor(public value: number, public unit: string) { }\n\n\tget text() {\n\t\tconst offset = MetricLabel.largestOffset(this.value)\n\t\treturn `${Math.floor(this.value / Math.pow(10, offset * 3))} ${MetricLabel.units[offset + MetricLabel.unitsStartOffset]}${this.unit}`\n\t}\n\tget number() { return this.value }\n\tget axisType() { return MetricAxis }\n\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\n\n\tstatic units = [\"n\", \"u\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"]\n\tstatic unitsStartOffset = 3\n\n\tstatic largestOffset = (value: number): number =>\n\t\t(value == 0) ? 0 : Math.floor(Math.log10(value) / 3)\n}\n\nexport class MetricAxis implements Axis<MetricLabel> {\n\tconstructor(public range: Range<MetricLabel>) { }\n\n\tgetTicks = (n: number): MetricLabel[] =>\n\t\t[...Array(n).keys().map(x => new MetricLabel(\n\t\t\tMath.floor(this.range.lerp(x / (n - 1))),\n\t\t\tthis.range.min.unit\n\t\t))]\n}\n","import { circle, g, line, polyline, rect, svg, text } from \"./util/svg\"\r\nimport { h1 } from \"./util/html\"\r\nimport Range from \"./util/range\"\r\nimport { DeepPartial, maxBy, maxByKey, minBy, minByKey, nearestLabel } from \"./util/util\"\r\nimport { Label, Axis } from \"./label\"\r\nimport PopupElement from \"./popup\"\r\nimport LegendElement from \"./legend\"\r\n\r\nexport { Label, NumberLabel, DateLabel, TimeLabel, MetricLabel } from \"./label\"\r\n\r\nexport type Point = { label: Label, value: Label }\r\n\r\nexport type Config = {\r\n\tdata: { [category: string]: Point[] }\r\n\tstyles?: DeepPartial<Styles>\r\n\ttitle?: string\r\n}\r\n\r\ntype AxisStyle = {\r\n\tcolour: string\r\n\tstrokeWidth: number\r\n\tlabels: {\r\n\t\tspacing: number\r\n\t\trotation: number\r\n\t\tcolour: string\r\n\t\tfontSize: string\r\n\t}\r\n}\r\n\r\nexport type Styles = {\r\n\tcolourscheme: string[]\r\n\txAxis: AxisStyle & { height: number }\r\n\tyAxis: AxisStyle & { width: number }\r\n\tgrid: {\r\n\t\tstroke: string\r\n\t}\r\n\tguideline: {\r\n\t\tstroke: string\r\n\t\twidth: number\r\n\t\tpoints: {\r\n\t\t\tr: number\r\n\t\t\tfill: string\r\n\t\t}\r\n\t}\r\n\tlines: {\r\n\t\twidth: number\r\n\t}\r\n}\r\n\r\nexport default class SVGraph extends HTMLElement {\r\n\tsvgElem: SVGElement\r\n\tpopupElem: PopupElement\r\n\tlegendElem: LegendElement\r\n\tguideElem: SVGElement\r\n\tselectionElem: SVGElement\r\n\r\n\tdata: { name: string, colour: string, points: Point[] }[]\r\n\tstyles: Styles\r\n\txaxis: Axis<Label>\r\n\tyaxis: Axis<Label>\r\n\r\n\tprivate resizeObserver: ResizeObserver\r\n\tprivate selection: { from?: number, to?: number } = {}\r\n\tprivate activeData: { name: string, colour: string, points: Point[] }[]\r\n\r\n\tget canvasCoordRange() { return new Range(this.styles.yAxis.width, this.svgElem.clientWidth) }\r\n\r\n\tconstructor(config: Config) {\r\n\t\tsuper()\r\n\r\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\r\n\r\n\t\tconst styleElem = document.createElement(\"style\")\r\n\t\tstyleElem.textContent = style\r\n\t\tshadow.appendChild(styleElem)\r\n\r\n\t\tshadow.appendChild(h1({ id: \"title\" }, new Text(config.title ?? \"\")))\r\n\r\n\t\tthis.legendElem = new LegendElement(() => this.updateActiveData())\r\n\t\tshadow.appendChild(this.legendElem)\r\n\r\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\r\n\t\tthis.svgElem.addEventListener(\"mousedown\", (event: MouseEvent) => this.onMouseDown(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseup\", (event: MouseEvent) => this.onMouseUp(event))\r\n\t\tthis.svgElem.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\r\n\t\tshadow.appendChild(this.svgElem)\r\n\r\n\t\tthis.popupElem = new PopupElement()\r\n\t\tshadow.appendChild(this.popupElem)\r\n\r\n\t\tthis.update(config, false)\r\n\t}\r\n\r\n\t// Callback for when the element is added to the DOM\r\n\tprivate connectedCallback() {\r\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\r\n\t\t\tconst { inlineSize: width, blockSize: height } = entries[0].contentBoxSize[0]\r\n\t\t\tif (width > 0 && height > 0) this.draw(width, height)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\r\n\t}\r\n\r\n\tupdate({ data, title, styles }: Config, redraw = true) {\r\n\t\tthis.styles = {\r\n\t\t\tcolourscheme: styles?.colourscheme ?? [\"black\"],\r\n\t\t\txAxis: {\r\n\t\t\t\theight: styles?.xAxis?.height ?? 30,\r\n\t\t\t\tcolour: styles?.xAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.xAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.xAxis?.labels?.spacing ?? 30,\r\n\t\t\t\t\trotation: styles?.xAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.xAxis?.labels?.colour ?? styles?.xAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.xAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\twidth: styles?.yAxis?.width ?? 30,\r\n\t\t\t\tcolour: styles?.yAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.yAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.yAxis?.labels?.spacing ?? 50,\r\n\t\t\t\t\trotation: styles?.yAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.yAxis?.labels?.colour ?? styles?.yAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.yAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tstroke: styles?.grid?.stroke ?? \"#FFF2\",\r\n\t\t\t},\r\n\t\t\tguideline: {\r\n\t\t\t\tstroke: styles?.guideline?.stroke ?? \"#FFF8\",\r\n\t\t\t\twidth: styles?.guideline?.width ?? 1,\r\n\t\t\t\tpoints: {\r\n\t\t\t\t\tr: styles?.guideline?.points?.r ?? 2,\r\n\t\t\t\t\tfill: styles?.guideline?.points?.fill ?? \"white\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlines: {\r\n\t\t\t\twidth: styles?.lines?.width ?? 2,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.data = Object.entries(data)\r\n\t\t\t.sort((a, b) => b[1].at(-1).value.number - a[1].at(-1).value.number)\r\n\t\t\t.map(([name, points], i, arr) => ({ name, points, colour: getColour(this.styles.colourscheme, (i + 1) / (arr.length + 1)) }))\r\n\r\n\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\tthis.yaxis = getAxis(this.data, \"value\")\r\n\t\tthis.legendElem.update(this.data)\r\n\r\n\t\tthis.shadowRoot.getElementById(\"title\").textContent = title\r\n\r\n\t\tthis.updateActiveData(redraw)\r\n\t}\r\n\r\n\tdraw(width: number, height: number) {\r\n\t\tthis.svgElem.innerHTML = \"\"\r\n\r\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\r\n\r\n\t\tthis.guideElem = this.guide(height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.guideElem)\r\n\r\n\t\tthis.selectionElem = this.selectionOverlay(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.selectionElem)\r\n\t}\r\n\r\n\tselectRange(from: Label, to: Label, redraw = true) {\r\n\t\tthis.xaxis.range = new Range(from, to)\r\n\r\n\t\tif (!this.updateActiveData(false)) {\r\n\t\t\t// selection has no data, reset zoom\r\n\t\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\t\tthis.updateActiveData(false)\r\n\t\t}\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate updateActiveData(redraw = true): boolean {\r\n\t\tconst newActiveData = this.data\r\n\t\t\t.filter(({ name }) => !this.legendElem.disabled.has(name))\r\n\t\t\t.map(({ name, colour, points }) => ({\r\n\t\t\t\tname, colour, points: points.filter(({ label }, i, arr) =>\r\n\t\t\t\t\tthis.xaxis.range.contains(label)\r\n\t\t\t\t\t|| (arr[i - 1] && this.xaxis.range.contains(arr[i - 1].label))\r\n\t\t\t\t\t|| (arr[i + 1] && this.xaxis.range.contains(arr[i + 1].label))\r\n\t\t\t\t)\r\n\t\t\t})).filter(({ points }) => points.length > 0)\r\n\r\n\t\tif (newActiveData.length == 0) return false\r\n\t\tthis.activeData = newActiveData\r\n\r\n\t\tthis.yaxis = getAxis(this.activeData, \"value\")\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t\treturn true\r\n\t}\r\n\r\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\r\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\r\n\t\t\tthis.xAxis(this.styles.yAxis.width, height - this.styles.xAxis.height, width - this.styles.yAxis.width, this.styles.xAxis.height),\r\n\t\t\tthis.yAxis(0, 0, this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"xaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x - this.styles.yAxis.strokeWidth, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tto: [x + width, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tstroke: this.styles.xAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.xAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + step.getPos(this.xaxis.range) * width,\r\n\t\t\t\ty: y + 20,\r\n\t\t\t\ttransform: `rotate(${this.styles.xAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": textAnchorForLabelRotation(this.styles.xAxis.labels.rotation),\r\n\t\t\t\tstyle: `transform-origin: ${transformOriginForLabelRotation(this.styles.xAxis.labels.rotation)}`,\r\n\t\t\t\tfill: this.styles.xAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.xAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"yaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x + width - this.styles.yAxis.strokeWidth / 2, y],\r\n\t\t\t\tto: [x + width - this.styles.yAxis.strokeWidth / 2, y + height],\r\n\t\t\t\tstroke: this.styles.yAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.yAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + width - 10,\r\n\t\t\t\ty: y + (1 - step.getPos(this.yaxis.range)) * height + 5,\r\n\t\t\t\ttransform: `rotate(${this.styles.yAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": \"end\",\r\n\t\t\t\tstyle: \"transform-origin: right\",\r\n\t\t\t\tfill: this.styles.yAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.yAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-v\",\r\n\t\t\t\tfrom: [step.getPos(this.xaxis.range) * width, 0],\r\n\t\t\t\tto: [step.getPos(this.xaxis.range) * width, height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-h\",\r\n\t\t\t\tfrom: [0, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tto: [width, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t)\r\n\r\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": this.styles.lines.width },\r\n\t\t\t...this.activeData.map(({ name, colour, points: values }, i) => {\r\n\t\t\t\tconst points = values.map(point => [\r\n\t\t\t\t\tRange.UNIT.clamp(point.label.getPos(this.xaxis.range)) * width,\r\n\t\t\t\t\tRange.UNIT.clamp((1 - point.value.getPos(this.yaxis.range))) * height,\r\n\t\t\t\t] as [number, number])\r\n\t\t\t\treturn polyline({ \"data-name\": name, points, fill: \"none\", stroke: colour })\r\n\t\t\t})\r\n\t\t)\r\n\r\n\tprivate selectionOverlay = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\trect({ class: \"selection-overlay\", x: x, y: y, width: 0, height: height, fill: \"#46A4\" })\r\n\r\n\tprivate guide = (height: number): SVGElement =>\r\n\t\tg({ class: \"guide\", transform: `translate(${this.styles.yAxis.width}, 0)`, visibility: \"hidden\" },\r\n\t\t\tline({ class: \"guideline\", from: [0, 0], to: [0, height], stroke: this.styles.guideline.stroke, \"stroke-width\": this.styles.guideline.width }),\r\n\t\t\t...this.activeData.map(() => circle({ class: \"guide-point\", cx: 0, cy: 0, r: this.styles.guideline.points.r, fill: this.styles.guideline.points.fill })),\r\n\t\t)\r\n\r\n\tprivate onMouseDown(event: MouseEvent) {\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.selection = { from: Range.UNIT.clamp(this.canvasCoordRange.normalize(event.clientX - this.svgElem.getBoundingClientRect().left)) }\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseUp(event: MouseEvent) {\r\n\t\tif (this.selection.from != undefined) {\r\n\t\t\tthis.selectRange(\r\n\t\t\t\tnearestLabel(Math.min(this.selection.from, this.selection.to), this.xaxis.range, this.activeData),\r\n\t\t\t\tnearestLabel(Math.max(this.selection.from, this.selection.to), this.xaxis.range, this.activeData)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.selection = {}\r\n\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t}\r\n\r\n\tprivate onMouseMove(event: MouseEvent) {\r\n\t\tconst svgRect = this.svgElem.getBoundingClientRect()\r\n\t\tconst shadowRect = this.shadowRoot.host.getBoundingClientRect()\r\n\t\tconst t = this.canvasCoordRange.normalize(event.clientX - svgRect.left)\r\n\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.handleSelection(t, event.buttons)\r\n\t\t\tthis.handleHover(t, event.clientX - shadowRect.left, event.clientY - shadowRect.top, svgRect)\r\n\t\t} else {\r\n\t\t\tthis.popupElem.hide()\r\n\t\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseLeave(event: MouseEvent) {\r\n\t\tthis.popupElem.hide()\r\n\t\tthis.guideElem.setAttribute(\"visibility\", \"hidden\")\r\n\t}\r\n\r\n\tprivate handleSelection(t: number, buttons: number) {\r\n\t\tif ((buttons & 1) == 1) {\r\n\t\t\t// primary (left) mouse button pressed\r\n\t\t\tthis.selection.to = Range.UNIT.clamp(t)\r\n\t\t} else {\r\n\t\t\tthis.selection = {}\r\n\t\t}\r\n\r\n\t\tif (this.selection.from != undefined && this.selection.to != undefined) {\r\n\t\t\tthis.selectionElem.setAttribute(\"x\", this.canvasCoordRange.lerp(Math.min(this.selection.from, this.selection.to)).toString())\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", (this.canvasCoordRange.lerp(Math.abs(this.selection.to - this.selection.from)) - this.styles.yAxis.width).toString())\r\n\t\t} else {\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleHover(t: number, x: number, y: number, rect: DOMRect) {\r\n\t\tconst points = this.popupElem.update(x, y, t, this.xaxis.range, this.activeData)\r\n\r\n\t\tthis.guideElem.querySelectorAll(\".guide-point\").forEach((point, i) => {\r\n\t\t\tpoint.setAttribute(\"cy\", ((1 - points[i].value.getPos(this.yaxis.range)) * (rect.height - this.styles.xAxis.height)).toString())\r\n\t\t})\r\n\r\n\t\tthis.guideElem.setAttribute(\"transform\", `translate(${x}, 0)`)\r\n\t\tthis.guideElem.removeAttribute(\"visibility\")\r\n\t}\r\n\r\n\tprivate isWithinGraphArea(x: number, y: number): boolean {\r\n\t\tconst rect = this.svgElem.getBoundingClientRect()\r\n\t\treturn new Range(rect.left + this.styles.yAxis.width, rect.right).contains(x)\r\n\t\t\t&& new Range(rect.top, rect.bottom - this.styles.xAxis.height).contains(y)\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-graph\", SVGraph)\r\n\r\nconst textAnchorForLabelRotation = (rotation: number): \"start\" | \"middle\" | \"end\" =>\r\n\trotation < 0 ? \"end\" : rotation > 0 ? \"start\" : \"middle\"\r\n\r\nconst transformOriginForLabelRotation = (rotation: number): \"left\" | \"center\" | \"right\" =>\r\n\trotation < 0 ? \"right\" : rotation > 0 ? \"left\" : \"center\"\r\n\r\nconst getColour = (colourscheme: string[], i: number) => colourscheme[Math.floor(i * colourscheme.length)]\r\n\r\nfunction getAxis<L extends Label>(data: { name: string, colour: string, points: Point[] }[], key: keyof Point): Axis<L> {\r\n\tconst range = new Range(\r\n\t\tminByKey(data.map(({ points }) => minBy(points, p => p[key].number)[key]), \"number\"),\r\n\t\tmaxByKey(data.map(({ points }) => maxBy(points, p => p[key].number)[key]), \"number\"),\r\n\t)\r\n\r\n\treturn new range.min.axisType(range)\r\n}\r\n\r\nconst style = `\r\n:host {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 100%;\r\n}\r\n:host([hidden]) {\r\n\tdisplay: none;\r\n}\r\n\r\nh1 {\r\n\tmargin: 0 0 0.5em 0;\r\n\tfont-size: 1.5em;\r\n\ttext-align: center;\r\n}\r\nh1:empty {\r\n\tdisplay: none;\r\n}\r\n\r\nsvg-popup {\r\n\tposition: absolute;\r\n\tpadding: 0.5em 0.6em;\r\n\twhite-space: nowrap;\r\n\tbackground: #2228;\r\n\tborder: 1px solid #FFF1;\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 1px 2px 20px 0px #0008;\r\n\tbackdrop-filter: blur(20px);\r\n\tpointer-events: none; // prevent fast mouse movements from triggering mouseleave on svg\r\n}\r\nsvg-popup h3 {\r\n\tmargin: 0 0 0.6em 0;\r\n}\r\nsvg-popup p {\r\n\tmargin: 0.3em 0 0 0;\r\n}\r\nsvg-popup .name {\r\n\tfont-family: monospace;\r\n\tfont-size: 1.2em;\r\n\tfont-weight: bold;\r\n}\r\n\r\nsvg-legend {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\tmargin: 5px 10px;\r\n}\r\nsvg-legend .legend-item {\r\n\tpadding: 0.25em 0.6em;\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 1em;\r\n}\r\nsvg-legend .legend-item:hover {\r\n\tbackground: #FFF1;\r\n\tborder: 1px solid #FFF1;\r\n\tbox-shadow: 1px 2px 5px 0px #0004;\r\n\tbackdrop-filter: blur(20px);\r\n\tcursor: pointer;\r\n}\r\nsvg-legend .legend-item.disabled {\r\n\topacity: 0.5;\r\n\ttext-decoration: line-through;\r\n}\r\n\r\n.swatch {\r\n\tdisplay: inline-block;\r\n\twidth: 0.75em;\r\n\theight: 0.75em;\r\n\tmargin-right: 0.5em;\r\n\tborder-radius: 50%;\r\n}\r\n\t\r\n.xaxis text, .yaxis text {\r\n\ttransform-box: fill-box;\r\n}`\r\n"],"names":["ns","element","name","attrs","children","elem","document","createElementNS","key","undefined","setAttribute","child","appendChild","g","line","x1","from","y1","x2","to","y2","text","createElement","div","p","span","num","n","number","Range","min","max","constructor","this","static","contains","value","clamp","Math","normalize","lerp","t","minBy","arr","fn","length","reduce","a","b","minByKey","nearestLabel","range","data","nearestLabelsIdx","map","points","nearestIdx","label","getPos","x","idx","abs","nearestLabels","closestIdx","i","l","nearestPointForLabel","PopupElement","HTMLElement","super","show","removeAttribute","hide","move","y","style","left","top","update","innerHTML","h3","Text","nearestPoints","colour","point","setValues","class","customElements","define","LegendElement","callback","lines","disabled","Set","legendItem","addEventListener","onLegendItemClick","has","delete","add","classList","toggle","NumberLabel","toString","axisType","NumberAxis","getTicks","magnitude","pow","floor","log10","interval","Array","keys","DateLabel","toISOString","split","valueOf","DateAxis","unitOffset","ceil","Date","TimeLabel","date","d","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCMilliseconds","String","padStart","TimeAxis","MetricLabel","unit","offset","largestOffset","units","unitsStartOffset","MetricAxis","SVGraph","svgElem","popupElem","legendElem","guideElem","selectionElem","styles","xaxis","yaxis","resizeObserver","selection","activeData","canvasCoordRange","yAxis","width","clientWidth","config","shadow","attachShadow","mode","styleElem","textContent","h1","id","title","updateActiveData","xmlns","svg","height","overflow","fill","event","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","connectedCallback","ResizeObserver","entries","inlineSize","blockSize","contentBoxSize","draw","observe","box","redraw","colourscheme","xAxis","strokeWidth","labels","spacing","rotation","fontSize","grid","stroke","guideline","r","Object","sort","at","getColour","getAxis","shadowRoot","getElementById","axes","guide","selectionOverlay","selectRange","clientHeight","newActiveData","filter","transform","step","textAnchorForLabelRotation","transformOriginForLabelRotation","values","join","polyline","UNIT","rect","visibility","circle","cx","cy","isWithinGraphArea","clientX","clientY","getBoundingClientRect","svgRect","shadowRect","host","handleSelection","buttons","handleHover","querySelectorAll","forEach","right","bottom","maxByKey","maxBy"],"mappings":"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"}