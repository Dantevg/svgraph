{"version":3,"file":"svgraph.js","sources":["../src/colourschemes.ts","../src/label.ts","../src/html.ts","../src/popup.ts","../src/svg.ts","../node_modules/csv-parse/dist/esm/sync.js","../src/data.ts","../src/svgraph.ts"],"sourcesContent":["export const inferno = [\"#000004\",\"#010005\",\"#010106\",\"#010108\",\"#02010a\",\"#02020c\",\"#02020e\",\"#030210\",\"#040312\",\"#040314\",\"#050417\",\"#060419\",\"#07051b\",\"#08051d\",\"#09061f\",\"#0a0722\",\"#0b0724\",\"#0c0826\",\"#0d0829\",\"#0e092b\",\"#10092d\",\"#110a30\",\"#120a32\",\"#140b34\",\"#150b37\",\"#160b39\",\"#180c3c\",\"#190c3e\",\"#1b0c41\",\"#1c0c43\",\"#1e0c45\",\"#1f0c48\",\"#210c4a\",\"#230c4c\",\"#240c4f\",\"#260c51\",\"#280b53\",\"#290b55\",\"#2b0b57\",\"#2d0b59\",\"#2f0a5b\",\"#310a5c\",\"#320a5e\",\"#340a5f\",\"#360961\",\"#380962\",\"#390963\",\"#3b0964\",\"#3d0965\",\"#3e0966\",\"#400a67\",\"#420a68\",\"#440a68\",\"#450a69\",\"#470b6a\",\"#490b6a\",\"#4a0c6b\",\"#4c0c6b\",\"#4d0d6c\",\"#4f0d6c\",\"#510e6c\",\"#520e6d\",\"#540f6d\",\"#550f6d\",\"#57106e\",\"#59106e\",\"#5a116e\",\"#5c126e\",\"#5d126e\",\"#5f136e\",\"#61136e\",\"#62146e\",\"#64156e\",\"#65156e\",\"#67166e\",\"#69166e\",\"#6a176e\",\"#6c186e\",\"#6d186e\",\"#6f196e\",\"#71196e\",\"#721a6e\",\"#741a6e\",\"#751b6e\",\"#771c6d\",\"#781c6d\",\"#7a1d6d\",\"#7c1d6d\",\"#7d1e6d\",\"#7f1e6c\",\"#801f6c\",\"#82206c\",\"#84206b\",\"#85216b\",\"#87216b\",\"#88226a\",\"#8a226a\",\"#8c2369\",\"#8d2369\",\"#8f2469\",\"#902568\",\"#922568\",\"#932667\",\"#952667\",\"#972766\",\"#982766\",\"#9a2865\",\"#9b2964\",\"#9d2964\",\"#9f2a63\",\"#a02a63\",\"#a22b62\",\"#a32c61\",\"#a52c60\",\"#a62d60\",\"#a82e5f\",\"#a92e5e\",\"#ab2f5e\",\"#ad305d\",\"#ae305c\",\"#b0315b\",\"#b1325a\",\"#b3325a\",\"#b43359\",\"#b63458\",\"#b73557\",\"#b93556\",\"#ba3655\",\"#bc3754\",\"#bd3853\",\"#bf3952\",\"#c03a51\",\"#c13a50\",\"#c33b4f\",\"#c43c4e\",\"#c63d4d\",\"#c73e4c\",\"#c83f4b\",\"#ca404a\",\"#cb4149\",\"#cc4248\",\"#ce4347\",\"#cf4446\",\"#d04545\",\"#d24644\",\"#d34743\",\"#d44842\",\"#d54a41\",\"#d74b3f\",\"#d84c3e\",\"#d94d3d\",\"#da4e3c\",\"#db503b\",\"#dd513a\",\"#de5238\",\"#df5337\",\"#e05536\",\"#e15635\",\"#e25734\",\"#e35933\",\"#e45a31\",\"#e55c30\",\"#e65d2f\",\"#e75e2e\",\"#e8602d\",\"#e9612b\",\"#ea632a\",\"#eb6429\",\"#eb6628\",\"#ec6726\",\"#ed6925\",\"#ee6a24\",\"#ef6c23\",\"#ef6e21\",\"#f06f20\",\"#f1711f\",\"#f1731d\",\"#f2741c\",\"#f3761b\",\"#f37819\",\"#f47918\",\"#f57b17\",\"#f57d15\",\"#f67e14\",\"#f68013\",\"#f78212\",\"#f78410\",\"#f8850f\",\"#f8870e\",\"#f8890c\",\"#f98b0b\",\"#f98c0a\",\"#f98e09\",\"#fa9008\",\"#fa9207\",\"#fa9407\",\"#fb9606\",\"#fb9706\",\"#fb9906\",\"#fb9b06\",\"#fb9d07\",\"#fc9f07\",\"#fca108\",\"#fca309\",\"#fca50a\",\"#fca60c\",\"#fca80d\",\"#fcaa0f\",\"#fcac11\",\"#fcae12\",\"#fcb014\",\"#fcb216\",\"#fcb418\",\"#fbb61a\",\"#fbb81d\",\"#fbba1f\",\"#fbbc21\",\"#fbbe23\",\"#fac026\",\"#fac228\",\"#fac42a\",\"#fac62d\",\"#f9c72f\",\"#f9c932\",\"#f9cb35\",\"#f8cd37\",\"#f8cf3a\",\"#f7d13d\",\"#f7d340\",\"#f6d543\",\"#f6d746\",\"#f5d949\",\"#f5db4c\",\"#f4dd4f\",\"#f4df53\",\"#f4e156\",\"#f3e35a\",\"#f3e55d\",\"#f2e661\",\"#f2e865\",\"#f2ea69\",\"#f1ec6d\",\"#f1ed71\",\"#f1ef75\",\"#f1f179\",\"#f2f27d\",\"#f2f482\",\"#f3f586\",\"#f3f68a\",\"#f4f88e\",\"#f5f992\",\"#f6fa96\",\"#f8fb9a\",\"#f9fc9d\",\"#fafda1\",\"#fcffa4\"]\n\nexport const warm = [\"#6e40aa\",\"#6f40aa\",\"#7140ab\",\"#723fac\",\"#743fac\",\"#753fad\",\"#773fad\",\"#783fae\",\"#7a3fae\",\"#7c3faf\",\"#7d3faf\",\"#7f3faf\",\"#803eb0\",\"#823eb0\",\"#833eb0\",\"#853eb1\",\"#873eb1\",\"#883eb1\",\"#8a3eb2\",\"#8b3eb2\",\"#8d3eb2\",\"#8f3db2\",\"#903db2\",\"#923db3\",\"#943db3\",\"#953db3\",\"#973db3\",\"#983db3\",\"#9a3db3\",\"#9c3db3\",\"#9d3db3\",\"#9f3db3\",\"#a13db3\",\"#a23db3\",\"#a43db3\",\"#a63cb3\",\"#a73cb3\",\"#a93cb3\",\"#aa3cb2\",\"#ac3cb2\",\"#ae3cb2\",\"#af3cb2\",\"#b13cb2\",\"#b23cb1\",\"#b43cb1\",\"#b63cb1\",\"#b73cb0\",\"#b93cb0\",\"#ba3cb0\",\"#bc3caf\",\"#be3caf\",\"#bf3caf\",\"#c13dae\",\"#c23dae\",\"#c43dad\",\"#c53dad\",\"#c73dac\",\"#c83dac\",\"#ca3dab\",\"#cb3daa\",\"#cd3daa\",\"#ce3da9\",\"#d03ea9\",\"#d13ea8\",\"#d33ea7\",\"#d43ea7\",\"#d53ea6\",\"#d73ea5\",\"#d83fa4\",\"#da3fa4\",\"#db3fa3\",\"#dc3fa2\",\"#de3fa1\",\"#df40a0\",\"#e040a0\",\"#e2409f\",\"#e3409e\",\"#e4419d\",\"#e5419c\",\"#e7419b\",\"#e8429a\",\"#e94299\",\"#ea4298\",\"#eb4397\",\"#ed4396\",\"#ee4395\",\"#ef4494\",\"#f04493\",\"#f14592\",\"#f24591\",\"#f34590\",\"#f4468f\",\"#f5468e\",\"#f6478d\",\"#f7478c\",\"#f8488b\",\"#f9488a\",\"#fa4988\",\"#fb4987\",\"#fc4a86\",\"#fd4a85\",\"#fe4b84\",\"#fe4b83\",\"#ff4c81\",\"#ff4d80\",\"#ff4d7f\",\"#ff4e7e\",\"#ff4e7d\",\"#ff4f7b\",\"#ff507a\",\"#ff5079\",\"#ff5178\",\"#ff5276\",\"#ff5275\",\"#ff5374\",\"#ff5473\",\"#ff5572\",\"#ff5570\",\"#ff566f\",\"#ff576e\",\"#ff586d\",\"#ff586b\",\"#ff596a\",\"#ff5a69\",\"#ff5b68\",\"#ff5c66\",\"#ff5d65\",\"#ff5d64\",\"#ff5e63\",\"#ff5f61\",\"#ff6060\",\"#ff615f\",\"#ff625e\",\"#ff635d\",\"#ff645b\",\"#ff655a\",\"#ff6659\",\"#ff6758\",\"#ff6857\",\"#ff6956\",\"#ff6a54\",\"#ff6b53\",\"#ff6c52\",\"#ff6d51\",\"#ff6e50\",\"#ff6f4f\",\"#ff704e\",\"#ff714d\",\"#ff724c\",\"#ff734b\",\"#ff744a\",\"#ff7549\",\"#ff7648\",\"#ff7847\",\"#ff7946\",\"#ff7a45\",\"#ff7b44\",\"#ff7c43\",\"#ff7d42\",\"#ff7e41\",\"#ff8040\",\"#ff813f\",\"#ff823e\",\"#ff833d\",\"#ff843d\",\"#ff863c\",\"#ff873b\",\"#ff883a\",\"#ff893a\",\"#ff8a39\",\"#ff8c38\",\"#ff8d37\",\"#ff8e37\",\"#ff8f36\",\"#fe9136\",\"#fd9235\",\"#fd9334\",\"#fc9534\",\"#fb9633\",\"#fa9733\",\"#f99832\",\"#f99a32\",\"#f89b32\",\"#f79c31\",\"#f69d31\",\"#f59f30\",\"#f4a030\",\"#f3a130\",\"#f2a32f\",\"#f1a42f\",\"#f0a52f\",\"#efa62f\",\"#eea82f\",\"#eda92e\",\"#ecaa2e\",\"#ebac2e\",\"#eaad2e\",\"#e9ae2e\",\"#e8b02e\",\"#e7b12e\",\"#e6b22e\",\"#e5b32e\",\"#e4b52e\",\"#e3b62e\",\"#e2b72f\",\"#e1b92f\",\"#e0ba2f\",\"#dfbb2f\",\"#debc30\",\"#ddbe30\",\"#dbbf30\",\"#dac030\",\"#d9c131\",\"#d8c331\",\"#d7c432\",\"#d6c532\",\"#d5c633\",\"#d4c833\",\"#d3c934\",\"#d2ca34\",\"#d1cb35\",\"#cfcc36\",\"#cece36\",\"#cdcf37\",\"#ccd038\",\"#cbd138\",\"#cad239\",\"#c9d33a\",\"#c8d53b\",\"#c7d63c\",\"#c6d73c\",\"#c5d83d\",\"#c4d93e\",\"#c3da3f\",\"#c2db40\",\"#c1dc41\",\"#c0dd42\",\"#bfdf43\",\"#bee044\",\"#bde146\",\"#bce247\",\"#bbe348\",\"#bae449\",\"#b9e54a\",\"#b8e64b\",\"#b7e74d\",\"#b6e84e\",\"#b6e94f\",\"#b5ea51\",\"#b4ea52\",\"#b3eb53\",\"#b2ec55\",\"#b1ed56\",\"#b1ee58\",\"#b0ef59\",\"#aff05b\"]\n\nexport const turbo = [\"#23171b\",\"#271a28\",\"#2b1c33\",\"#2f1e3f\",\"#32204a\",\"#362354\",\"#39255f\",\"#3b2768\",\"#3e2a72\",\"#402c7b\",\"#422f83\",\"#44318b\",\"#453493\",\"#46369b\",\"#4839a2\",\"#493ca8\",\"#493eaf\",\"#4a41b5\",\"#4a44bb\",\"#4b46c0\",\"#4b49c5\",\"#4b4cca\",\"#4b4ecf\",\"#4b51d3\",\"#4a54d7\",\"#4a56db\",\"#4959de\",\"#495ce2\",\"#485fe5\",\"#4761e7\",\"#4664ea\",\"#4567ec\",\"#446aee\",\"#446df0\",\"#426ff2\",\"#4172f3\",\"#4075f5\",\"#3f78f6\",\"#3e7af7\",\"#3d7df7\",\"#3c80f8\",\"#3a83f9\",\"#3985f9\",\"#3888f9\",\"#378bf9\",\"#368df9\",\"#3590f8\",\"#3393f8\",\"#3295f7\",\"#3198f7\",\"#309bf6\",\"#2f9df5\",\"#2ea0f4\",\"#2da2f3\",\"#2ca5f1\",\"#2ba7f0\",\"#2aaaef\",\"#2aaced\",\"#29afec\",\"#28b1ea\",\"#28b4e8\",\"#27b6e6\",\"#27b8e5\",\"#26bbe3\",\"#26bde1\",\"#26bfdf\",\"#25c1dc\",\"#25c3da\",\"#25c6d8\",\"#25c8d6\",\"#25cad3\",\"#25ccd1\",\"#25cecf\",\"#26d0cc\",\"#26d2ca\",\"#26d4c8\",\"#27d6c5\",\"#27d8c3\",\"#28d9c0\",\"#29dbbe\",\"#29ddbb\",\"#2adfb8\",\"#2be0b6\",\"#2ce2b3\",\"#2de3b1\",\"#2ee5ae\",\"#30e6ac\",\"#31e8a9\",\"#32e9a6\",\"#34eba4\",\"#35eca1\",\"#37ed9f\",\"#39ef9c\",\"#3af09a\",\"#3cf197\",\"#3ef295\",\"#40f392\",\"#42f490\",\"#44f58d\",\"#46f68b\",\"#48f788\",\"#4af786\",\"#4df884\",\"#4ff981\",\"#51fa7f\",\"#54fa7d\",\"#56fb7a\",\"#59fb78\",\"#5cfc76\",\"#5efc74\",\"#61fd71\",\"#64fd6f\",\"#66fd6d\",\"#69fd6b\",\"#6cfd69\",\"#6ffe67\",\"#72fe65\",\"#75fe63\",\"#78fe61\",\"#7bfe5f\",\"#7efd5d\",\"#81fd5c\",\"#84fd5a\",\"#87fd58\",\"#8afc56\",\"#8dfc55\",\"#90fb53\",\"#93fb51\",\"#96fa50\",\"#99fa4e\",\"#9cf94d\",\"#9ff84b\",\"#a2f84a\",\"#a6f748\",\"#a9f647\",\"#acf546\",\"#aff444\",\"#b2f343\",\"#b5f242\",\"#b8f141\",\"#bbf03f\",\"#beef3e\",\"#c1ed3d\",\"#c3ec3c\",\"#c6eb3b\",\"#c9e93a\",\"#cce839\",\"#cfe738\",\"#d1e537\",\"#d4e336\",\"#d7e235\",\"#d9e034\",\"#dcdf33\",\"#dedd32\",\"#e0db32\",\"#e3d931\",\"#e5d730\",\"#e7d52f\",\"#e9d42f\",\"#ecd22e\",\"#eed02d\",\"#f0ce2c\",\"#f1cb2c\",\"#f3c92b\",\"#f5c72b\",\"#f7c52a\",\"#f8c329\",\"#fac029\",\"#fbbe28\",\"#fdbc28\",\"#feb927\",\"#ffb727\",\"#ffb526\",\"#ffb226\",\"#ffb025\",\"#ffad25\",\"#ffab24\",\"#ffa824\",\"#ffa623\",\"#ffa323\",\"#ffa022\",\"#ff9e22\",\"#ff9b21\",\"#ff9921\",\"#ff9621\",\"#ff9320\",\"#ff9020\",\"#ff8e1f\",\"#ff8b1f\",\"#ff881e\",\"#ff851e\",\"#ff831d\",\"#ff801d\",\"#ff7d1d\",\"#ff7a1c\",\"#ff781c\",\"#ff751b\",\"#ff721b\",\"#ff6f1a\",\"#fd6c1a\",\"#fc6a19\",\"#fa6719\",\"#f96418\",\"#f76118\",\"#f65f18\",\"#f45c17\",\"#f25916\",\"#f05716\",\"#ee5415\",\"#ec5115\",\"#ea4f14\",\"#e84c14\",\"#e64913\",\"#e44713\",\"#e24412\",\"#df4212\",\"#dd3f11\",\"#da3d10\",\"#d83a10\",\"#d5380f\",\"#d3360f\",\"#d0330e\",\"#ce310d\",\"#cb2f0d\",\"#c92d0c\",\"#c62a0b\",\"#c3280b\",\"#c1260a\",\"#be2409\",\"#bb2309\",\"#b92108\",\"#b61f07\",\"#b41d07\",\"#b11b06\",\"#af1a05\",\"#ac1805\",\"#aa1704\",\"#a81604\",\"#a51403\",\"#a31302\",\"#a11202\",\"#9f1101\",\"#9d1000\",\"#9b0f00\",\"#9a0e00\",\"#980e00\",\"#960d00\",\"#950c00\",\"#940c00\",\"#930c00\",\"#920c00\",\"#910b00\",\"#910c00\",\"#900c00\",\"#900c00\",\"#900c00\"]\n\nexport const rainbow = [\"#6e40aa\",\"#7140ab\",\"#743fac\",\"#773fad\",\"#7a3fae\",\"#7d3faf\",\"#803eb0\",\"#833eb0\",\"#873eb1\",\"#8a3eb2\",\"#8d3eb2\",\"#903db2\",\"#943db3\",\"#973db3\",\"#9a3db3\",\"#9d3db3\",\"#a13db3\",\"#a43db3\",\"#a73cb3\",\"#aa3cb2\",\"#ae3cb2\",\"#b13cb2\",\"#b43cb1\",\"#b73cb0\",\"#ba3cb0\",\"#be3caf\",\"#c13dae\",\"#c43dad\",\"#c73dac\",\"#ca3dab\",\"#cd3daa\",\"#d03ea9\",\"#d33ea7\",\"#d53ea6\",\"#d83fa4\",\"#db3fa3\",\"#de3fa1\",\"#e040a0\",\"#e3409e\",\"#e5419c\",\"#e8429a\",\"#ea4298\",\"#ed4396\",\"#ef4494\",\"#f14592\",\"#f34590\",\"#f5468e\",\"#f7478c\",\"#f9488a\",\"#fb4987\",\"#fd4a85\",\"#fe4b83\",\"#ff4d80\",\"#ff4e7e\",\"#ff4f7b\",\"#ff5079\",\"#ff5276\",\"#ff5374\",\"#ff5572\",\"#ff566f\",\"#ff586d\",\"#ff596a\",\"#ff5b68\",\"#ff5d65\",\"#ff5e63\",\"#ff6060\",\"#ff625e\",\"#ff645b\",\"#ff6659\",\"#ff6857\",\"#ff6a54\",\"#ff6c52\",\"#ff6e50\",\"#ff704e\",\"#ff724c\",\"#ff744a\",\"#ff7648\",\"#ff7946\",\"#ff7b44\",\"#ff7d42\",\"#ff8040\",\"#ff823e\",\"#ff843d\",\"#ff873b\",\"#ff893a\",\"#ff8c38\",\"#ff8e37\",\"#fe9136\",\"#fd9334\",\"#fb9633\",\"#f99832\",\"#f89b32\",\"#f69d31\",\"#f4a030\",\"#f2a32f\",\"#f0a52f\",\"#eea82f\",\"#ecaa2e\",\"#eaad2e\",\"#e8b02e\",\"#e6b22e\",\"#e4b52e\",\"#e2b72f\",\"#e0ba2f\",\"#debc30\",\"#dbbf30\",\"#d9c131\",\"#d7c432\",\"#d5c633\",\"#d3c934\",\"#d1cb35\",\"#cece36\",\"#ccd038\",\"#cad239\",\"#c8d53b\",\"#c6d73c\",\"#c4d93e\",\"#c2db40\",\"#c0dd42\",\"#bee044\",\"#bce247\",\"#bae449\",\"#b8e64b\",\"#b6e84e\",\"#b5ea51\",\"#b3eb53\",\"#b1ed56\",\"#b0ef59\",\"#adf05a\",\"#aaf159\",\"#a6f159\",\"#a2f258\",\"#9ef258\",\"#9af357\",\"#96f357\",\"#93f457\",\"#8ff457\",\"#8bf457\",\"#87f557\",\"#83f557\",\"#80f558\",\"#7cf658\",\"#78f659\",\"#74f65a\",\"#71f65b\",\"#6df65c\",\"#6af75d\",\"#66f75e\",\"#63f75f\",\"#5ff761\",\"#5cf662\",\"#59f664\",\"#55f665\",\"#52f667\",\"#4ff669\",\"#4cf56a\",\"#49f56c\",\"#46f46e\",\"#43f470\",\"#41f373\",\"#3ef375\",\"#3bf277\",\"#39f279\",\"#37f17c\",\"#34f07e\",\"#32ef80\",\"#30ee83\",\"#2eed85\",\"#2cec88\",\"#2aeb8a\",\"#28ea8d\",\"#27e98f\",\"#25e892\",\"#24e795\",\"#22e597\",\"#21e49a\",\"#20e29d\",\"#1fe19f\",\"#1edfa2\",\"#1ddea4\",\"#1cdca7\",\"#1bdbaa\",\"#1bd9ac\",\"#1ad7af\",\"#1ad5b1\",\"#1ad4b4\",\"#19d2b6\",\"#19d0b8\",\"#19cebb\",\"#19ccbd\",\"#19cabf\",\"#1ac8c1\",\"#1ac6c4\",\"#1ac4c6\",\"#1bc2c8\",\"#1bbfca\",\"#1cbdcc\",\"#1dbbcd\",\"#1db9cf\",\"#1eb6d1\",\"#1fb4d2\",\"#20b2d4\",\"#21afd5\",\"#22add7\",\"#23abd8\",\"#25a8d9\",\"#26a6db\",\"#27a4dc\",\"#29a1dd\",\"#2a9fdd\",\"#2b9cde\",\"#2d9adf\",\"#2e98e0\",\"#3095e0\",\"#3293e1\",\"#3390e1\",\"#358ee1\",\"#378ce1\",\"#3889e1\",\"#3a87e1\",\"#3c84e1\",\"#3d82e1\",\"#3f80e1\",\"#417de0\",\"#437be0\",\"#4479df\",\"#4676df\",\"#4874de\",\"#4a72dd\",\"#4b70dc\",\"#4d6ddb\",\"#4f6bda\",\"#5169d9\",\"#5267d7\",\"#5465d6\",\"#5663d5\",\"#5761d3\",\"#595fd1\",\"#5a5dd0\",\"#5c5bce\",\"#5d59cc\",\"#5f57ca\",\"#6055c8\",\"#6153c6\",\"#6351c4\",\"#6450c2\",\"#654ec0\",\"#664cbe\",\"#674abb\",\"#6849b9\",\"#6a47b7\",\"#6a46b4\",\"#6b44b2\",\"#6c43af\",\"#6d41ad\",\"#6e40aa\"]\n","export interface Label {\n\tget text(): string\n\tgetPos(min: number, max: number): number\n}\n\nexport class NumberLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() { return this.value.toString() }\n\n\tgetPos(min: number, max: number) { return (this.value - min) / (max - min) }\n}\n\n// TODO: date labels etc\n","function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\n\tconst elem = document.createElement(name)\n\tfor (const key in attrs) {\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\n\t}\n\tfor (const child of children ?? []) elem.appendChild(child)\n\treturn elem\n}\n\ntype DefaultAttrs = {\n\tid?: string,\n\tclass?: string\n}\n\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\n","import { h3, p } from \"./html\"\nimport { Label } from \"./label\"\n\nexport default class PopupElement extends HTMLDivElement {\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\tshow() { this.classList.add(\"active\") }\n\n\thide() { this.classList.remove(\"active\") }\n\n\tmove(x: number, y: number) {\n\t\tthis.style.left = `${x + 10}px`\n\t\tthis.style.top = `${y}px`\n\t}\n\n\tsetValues(values: { name: string, value: number }[]) {\n\t\tfor (const {name, value} of values) {\n\t\t\tif (value != undefined) this.appendChild(p({}, new Text(`${name}: ${value}`)))\n\t\t}\n\t}\n\n\tupdate(x: number, y: number, idx: number, data: { name: string, points: { label: Label, value: number }[] }[]) {\n\t\tthis.move(x, y)\n\n\t\tthis.innerHTML = \"\"\n\t\tthis.appendChild(h3({}, new Text(idx.toString())))\n\t\t// this.setValues(data.map(line => ({ name: line.name, value: line.values[idx] })))\n\t\t\n\t\t// TODO: get closest x label and get values from lines\n\n\t\tthis.show()\n\t}\n}\n\ncustomElements.define(\"svg-popup\", PopupElement, { extends: \"div\" })\n","const ns = \"http://www.w3.org/2000/svg\"\n\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\n\tconst elem = document.createElementNS(ns, name)\n\tfor (const key in attrs) {\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\n\t}\n\tfor (const child of children ?? []) elem.appendChild(child)\n\treturn elem\n}\n\ntype stringable = string | number | boolean\n\ntype DefaultAttrs = {\n\tid?: string,\n\tclass?: string\n\ttransform?: string,\n\tfill?: string\n\tstroke?: string\n\t\"stroke-width\"?: stringable\n}\n\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"svg\", { ...attrs, xmlns: ns }, children)\n\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children)\n\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children)\n\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children)\n\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"rect\", attrs, children)\n\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"text\", attrs, children)\n","var global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nclass CsvError extends Error {\n  constructor(code, message, options, ...contexts) {\n    if (Array.isArray(message)) message = message.join(\" \").trim();\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for (const context of contexts) {\n      for (const key in context) {\n        const value = context[key];\n        this[key] = isBuffer(value)\n          ? value.toString(options.encoding)\n          : value == null\n            ? value\n            : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n}\n\nconst is_object = function (obj) {\n  return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n};\n\nconst normalize_columns_array = function (columns) {\n  const normalizedColumns = [];\n  for (let i = 0, l = columns.length; i < l; i++) {\n    const column = columns[i];\n    if (column === undefined || column === null || column === false) {\n      normalizedColumns[i] = { disabled: true };\n    } else if (typeof column === \"string\") {\n      normalizedColumns[i] = { name: column };\n    } else if (is_object(column)) {\n      if (typeof column.name !== \"string\") {\n        throw new CsvError(\"CSV_OPTION_COLUMNS_MISSING_NAME\", [\n          \"Option columns missing name:\",\n          `property \"name\" is required at position ${i}`,\n          \"when column is an object literal\",\n        ]);\n      }\n      normalizedColumns[i] = column;\n    } else {\n      throw new CsvError(\"CSV_INVALID_COLUMN_DEFINITION\", [\n        \"Invalid column definition:\",\n        \"expect a string or a literal object,\",\n        `got ${JSON.stringify(column)} at position ${i}`,\n      ]);\n    }\n  }\n  return normalizedColumns;\n};\n\nclass ResizeableBuffer {\n  constructor(size = 100) {\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val) {\n    if (isBuffer(val)) {\n      const length = this.length + val.length;\n      if (length >= this.size) {\n        this.resize();\n        if (length >= this.size) {\n          throw Error(\"INVALID_BUFFER_STATE\");\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    } else {\n      const length = this.length++;\n      if (length === this.size) {\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }\n  append(val) {\n    const length = this.length++;\n    if (length === this.size) {\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding) {\n    if (encoding) {\n      return this.buf.slice(0, this.length).toString(encoding);\n    } else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON() {\n    return this.toString(\"utf8\");\n  }\n  reset() {\n    this.length = 0;\n  }\n}\n\n// white space characters\n// https://en.wikipedia.org/wiki/Whitespace_character\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types\n// \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\nconst np = 12;\nconst cr$1 = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl$1 = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\nconst space = 32;\nconst tab = 9;\n\nconst init_state = function (options) {\n  return {\n    bomSkipped: false,\n    bufBytesStart: 0,\n    castField: options.cast_function,\n    commenting: false,\n    // Current error encountered by a record\n    error: undefined,\n    enabled: options.from_line === 1,\n    escaping: false,\n    escapeIsQuote:\n      isBuffer(options.escape) &&\n      isBuffer(options.quote) &&\n      Buffer.compare(options.escape, options.quote) === 0,\n    // columns can be `false`, `true`, `Array`\n    expectedRecordLength: Array.isArray(options.columns)\n      ? options.columns.length\n      : undefined,\n    field: new ResizeableBuffer(20),\n    firstLineToHeaders: options.cast_first_line_to_header,\n    needMoreDataSize: Math.max(\n      // Skip if the remaining buffer smaller than comment\n      options.comment !== null ? options.comment.length : 0,\n      // Skip if the remaining buffer can be delimiter\n      ...options.delimiter.map((delimiter) => delimiter.length),\n      // Skip if the remaining buffer can be escape sequence\n      options.quote !== null ? options.quote.length : 0,\n    ),\n    previousBuf: undefined,\n    quoting: false,\n    stop: false,\n    rawBuffer: new ResizeableBuffer(100),\n    record: [],\n    recordHasError: false,\n    record_length: 0,\n    recordDelimiterMaxLength:\n      options.record_delimiter.length === 0\n        ? 0\n        : Math.max(...options.record_delimiter.map((v) => v.length)),\n    trimChars: [\n      Buffer.from(\" \", options.encoding)[0],\n      Buffer.from(\"\\t\", options.encoding)[0],\n    ],\n    wasQuoting: false,\n    wasRowDelimiter: false,\n    timchars: [\n      Buffer.from(Buffer.from([cr$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([nl$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([np], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([space], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([tab], \"utf8\").toString(), options.encoding),\n    ],\n  };\n};\n\nconst underscore = function (str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return \"_\" + match.toLowerCase();\n  });\n};\n\nconst normalize_options = function (opts) {\n  const options = {};\n  // Merge with user options\n  for (const opt in opts) {\n    options[underscore(opt)] = opts[opt];\n  }\n  // Normalize option `encoding`\n  // Note: defined first because other options depends on it\n  // to convert chars/strings into buffers.\n  if (options.encoding === undefined || options.encoding === true) {\n    options.encoding = \"utf8\";\n  } else if (options.encoding === null || options.encoding === false) {\n    options.encoding = null;\n  } else if (\n    typeof options.encoding !== \"string\" &&\n    options.encoding !== null\n  ) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_ENCODING\",\n      [\n        \"Invalid option encoding:\",\n        \"encoding must be a string or null to return a buffer,\",\n        `got ${JSON.stringify(options.encoding)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `bom`\n  if (\n    options.bom === undefined ||\n    options.bom === null ||\n    options.bom === false\n  ) {\n    options.bom = false;\n  } else if (options.bom !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_BOM\",\n      [\n        \"Invalid option bom:\",\n        \"bom must be true,\",\n        `got ${JSON.stringify(options.bom)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast`\n  options.cast_function = null;\n  if (\n    options.cast === undefined ||\n    options.cast === null ||\n    options.cast === false ||\n    options.cast === \"\"\n  ) {\n    options.cast = undefined;\n  } else if (typeof options.cast === \"function\") {\n    options.cast_function = options.cast;\n    options.cast = true;\n  } else if (options.cast !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_CAST\",\n      [\n        \"Invalid option cast:\",\n        \"cast must be true or a function,\",\n        `got ${JSON.stringify(options.cast)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast_date`\n  if (\n    options.cast_date === undefined ||\n    options.cast_date === null ||\n    options.cast_date === false ||\n    options.cast_date === \"\"\n  ) {\n    options.cast_date = false;\n  } else if (options.cast_date === true) {\n    options.cast_date = function (value) {\n      const date = Date.parse(value);\n      return !isNaN(date) ? new Date(date) : value;\n    };\n  } else if (typeof options.cast_date !== \"function\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_CAST_DATE\",\n      [\n        \"Invalid option cast_date:\",\n        \"cast_date must be true or a function,\",\n        `got ${JSON.stringify(options.cast_date)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `columns`\n  options.cast_first_line_to_header = null;\n  if (options.columns === true) {\n    // Fields in the first line are converted as-is to columns\n    options.cast_first_line_to_header = undefined;\n  } else if (typeof options.columns === \"function\") {\n    options.cast_first_line_to_header = options.columns;\n    options.columns = true;\n  } else if (Array.isArray(options.columns)) {\n    options.columns = normalize_columns_array(options.columns);\n  } else if (\n    options.columns === undefined ||\n    options.columns === null ||\n    options.columns === false\n  ) {\n    options.columns = false;\n  } else {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_COLUMNS\",\n      [\n        \"Invalid option columns:\",\n        \"expect an array, a function or true,\",\n        `got ${JSON.stringify(options.columns)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `group_columns_by_name`\n  if (\n    options.group_columns_by_name === undefined ||\n    options.group_columns_by_name === null ||\n    options.group_columns_by_name === false\n  ) {\n    options.group_columns_by_name = false;\n  } else if (options.group_columns_by_name !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"expect an boolean,\",\n        `got ${JSON.stringify(options.group_columns_by_name)}`,\n      ],\n      options,\n    );\n  } else if (options.columns === false) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"the `columns` mode must be activated.\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `comment`\n  if (\n    options.comment === undefined ||\n    options.comment === null ||\n    options.comment === false ||\n    options.comment === \"\"\n  ) {\n    options.comment = null;\n  } else {\n    if (typeof options.comment === \"string\") {\n      options.comment = Buffer.from(options.comment, options.encoding);\n    }\n    if (!isBuffer(options.comment)) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_COMMENT\",\n        [\n          \"Invalid option comment:\",\n          \"comment must be a buffer or a string,\",\n          `got ${JSON.stringify(options.comment)}`,\n        ],\n        options,\n      );\n    }\n  }\n  // Normalize option `comment_no_infix`\n  if (\n    options.comment_no_infix === undefined ||\n    options.comment_no_infix === null ||\n    options.comment_no_infix === false\n  ) {\n    options.comment_no_infix = false;\n  } else if (options.comment_no_infix !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_COMMENT\",\n      [\n        \"Invalid option comment_no_infix:\",\n        \"value must be a boolean,\",\n        `got ${JSON.stringify(options.comment_no_infix)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `delimiter`\n  const delimiter_json = JSON.stringify(options.delimiter);\n  if (!Array.isArray(options.delimiter))\n    options.delimiter = [options.delimiter];\n  if (options.delimiter.length === 0) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_DELIMITER\",\n      [\n        \"Invalid option delimiter:\",\n        \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n        `got ${delimiter_json}`,\n      ],\n      options,\n    );\n  }\n  options.delimiter = options.delimiter.map(function (delimiter) {\n    if (delimiter === undefined || delimiter === null || delimiter === false) {\n      return Buffer.from(\",\", options.encoding);\n    }\n    if (typeof delimiter === \"string\") {\n      delimiter = Buffer.from(delimiter, options.encoding);\n    }\n    if (!isBuffer(delimiter) || delimiter.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_DELIMITER\",\n        [\n          \"Invalid option delimiter:\",\n          \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n          `got ${delimiter_json}`,\n        ],\n        options,\n      );\n    }\n    return delimiter;\n  });\n  // Normalize option `escape`\n  if (options.escape === undefined || options.escape === true) {\n    options.escape = Buffer.from('\"', options.encoding);\n  } else if (typeof options.escape === \"string\") {\n    options.escape = Buffer.from(options.escape, options.encoding);\n  } else if (options.escape === null || options.escape === false) {\n    options.escape = null;\n  }\n  if (options.escape !== null) {\n    if (!isBuffer(options.escape)) {\n      throw new Error(\n        `Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`,\n      );\n    }\n  }\n  // Normalize option `from`\n  if (options.from === undefined || options.from === null) {\n    options.from = 1;\n  } else {\n    if (typeof options.from === \"string\" && /\\d+/.test(options.from)) {\n      options.from = parseInt(options.from);\n    }\n    if (Number.isInteger(options.from)) {\n      if (options.from < 0) {\n        throw new Error(\n          `Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`,\n      );\n    }\n  }\n  // Normalize option `from_line`\n  if (options.from_line === undefined || options.from_line === null) {\n    options.from_line = 1;\n  } else {\n    if (\n      typeof options.from_line === \"string\" &&\n      /\\d+/.test(options.from_line)\n    ) {\n      options.from_line = parseInt(options.from_line);\n    }\n    if (Number.isInteger(options.from_line)) {\n      if (options.from_line <= 0) {\n        throw new Error(\n          `Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`,\n      );\n    }\n  }\n  // Normalize options `ignore_last_delimiters`\n  if (\n    options.ignore_last_delimiters === undefined ||\n    options.ignore_last_delimiters === null\n  ) {\n    options.ignore_last_delimiters = false;\n  } else if (typeof options.ignore_last_delimiters === \"number\") {\n    options.ignore_last_delimiters = Math.floor(options.ignore_last_delimiters);\n    if (options.ignore_last_delimiters === 0) {\n      options.ignore_last_delimiters = false;\n    }\n  } else if (typeof options.ignore_last_delimiters !== \"boolean\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS\",\n      [\n        \"Invalid option `ignore_last_delimiters`:\",\n        \"the value must be a boolean value or an integer,\",\n        `got ${JSON.stringify(options.ignore_last_delimiters)}`,\n      ],\n      options,\n    );\n  }\n  if (options.ignore_last_delimiters === true && options.columns === false) {\n    throw new CsvError(\n      \"CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS\",\n      [\n        \"The option `ignore_last_delimiters`\",\n        \"requires the activation of the `columns` option\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `info`\n  if (\n    options.info === undefined ||\n    options.info === null ||\n    options.info === false\n  ) {\n    options.info = false;\n  } else if (options.info !== true) {\n    throw new Error(\n      `Invalid Option: info must be true, got ${JSON.stringify(options.info)}`,\n    );\n  }\n  // Normalize option `max_record_size`\n  if (\n    options.max_record_size === undefined ||\n    options.max_record_size === null ||\n    options.max_record_size === false\n  ) {\n    options.max_record_size = 0;\n  } else if (\n    Number.isInteger(options.max_record_size) &&\n    options.max_record_size >= 0\n  ) ; else if (\n    typeof options.max_record_size === \"string\" &&\n    /\\d+/.test(options.max_record_size)\n  ) {\n    options.max_record_size = parseInt(options.max_record_size);\n  } else {\n    throw new Error(\n      `Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`,\n    );\n  }\n  // Normalize option `objname`\n  if (\n    options.objname === undefined ||\n    options.objname === null ||\n    options.objname === false\n  ) {\n    options.objname = undefined;\n  } else if (isBuffer(options.objname)) {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty buffer`);\n    }\n    if (options.encoding === null) ; else {\n      options.objname = options.objname.toString(options.encoding);\n    }\n  } else if (typeof options.objname === \"string\") {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty string`);\n    }\n    // Great, nothing to do\n  } else if (typeof options.objname === \"number\") ; else {\n    throw new Error(\n      `Invalid Option: objname must be a string or a buffer, got ${options.objname}`,\n    );\n  }\n  if (options.objname !== undefined) {\n    if (typeof options.objname === \"number\") {\n      if (options.columns !== false) {\n        throw Error(\n          \"Invalid Option: objname index cannot be combined with columns or be defined as a field\",\n        );\n      }\n    } else {\n      // A string or a buffer\n      if (options.columns === false) {\n        throw Error(\n          \"Invalid Option: objname field must be combined with columns or be defined as an index\",\n        );\n      }\n    }\n  }\n  // Normalize option `on_record`\n  if (options.on_record === undefined || options.on_record === null) {\n    options.on_record = undefined;\n  } else if (typeof options.on_record !== \"function\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_ON_RECORD\",\n      [\n        \"Invalid option `on_record`:\",\n        \"expect a function,\",\n        `got ${JSON.stringify(options.on_record)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `on_skip`\n  // options.on_skip ??= (err, chunk) => {\n  //   this.emit('skip', err, chunk);\n  // };\n  if (\n    options.on_skip !== undefined &&\n    options.on_skip !== null &&\n    typeof options.on_skip !== \"function\"\n  ) {\n    throw new Error(\n      `Invalid Option: on_skip must be a function, got ${JSON.stringify(options.on_skip)}`,\n    );\n  }\n  // Normalize option `quote`\n  if (\n    options.quote === null ||\n    options.quote === false ||\n    options.quote === \"\"\n  ) {\n    options.quote = null;\n  } else {\n    if (options.quote === undefined || options.quote === true) {\n      options.quote = Buffer.from('\"', options.encoding);\n    } else if (typeof options.quote === \"string\") {\n      options.quote = Buffer.from(options.quote, options.encoding);\n    }\n    if (!isBuffer(options.quote)) {\n      throw new Error(\n        `Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`,\n      );\n    }\n  }\n  // Normalize option `raw`\n  if (\n    options.raw === undefined ||\n    options.raw === null ||\n    options.raw === false\n  ) {\n    options.raw = false;\n  } else if (options.raw !== true) {\n    throw new Error(\n      `Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`,\n    );\n  }\n  // Normalize option `record_delimiter`\n  if (options.record_delimiter === undefined) {\n    options.record_delimiter = [];\n  } else if (\n    typeof options.record_delimiter === \"string\" ||\n    isBuffer(options.record_delimiter)\n  ) {\n    if (options.record_delimiter.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer,\",\n          `got ${JSON.stringify(options.record_delimiter)}`,\n        ],\n        options,\n      );\n    }\n    options.record_delimiter = [options.record_delimiter];\n  } else if (!Array.isArray(options.record_delimiter)) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n      [\n        \"Invalid option `record_delimiter`:\",\n        \"value must be a string, a buffer or array of string|buffer,\",\n        `got ${JSON.stringify(options.record_delimiter)}`,\n      ],\n      options,\n    );\n  }\n  options.record_delimiter = options.record_delimiter.map(function (rd, i) {\n    if (typeof rd !== \"string\" && !isBuffer(rd)) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a string, a buffer or array of string|buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    } else if (rd.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    }\n    if (typeof rd === \"string\") {\n      rd = Buffer.from(rd, options.encoding);\n    }\n    return rd;\n  });\n  // Normalize option `relax_column_count`\n  if (typeof options.relax_column_count === \"boolean\") ; else if (\n    options.relax_column_count === undefined ||\n    options.relax_column_count === null\n  ) {\n    options.relax_column_count = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`,\n    );\n  }\n  if (typeof options.relax_column_count_less === \"boolean\") ; else if (\n    options.relax_column_count_less === undefined ||\n    options.relax_column_count_less === null\n  ) {\n    options.relax_column_count_less = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`,\n    );\n  }\n  if (typeof options.relax_column_count_more === \"boolean\") ; else if (\n    options.relax_column_count_more === undefined ||\n    options.relax_column_count_more === null\n  ) {\n    options.relax_column_count_more = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`,\n    );\n  }\n  // Normalize option `relax_quotes`\n  if (typeof options.relax_quotes === \"boolean\") ; else if (\n    options.relax_quotes === undefined ||\n    options.relax_quotes === null\n  ) {\n    options.relax_quotes = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`,\n    );\n  }\n  // Normalize option `skip_empty_lines`\n  if (typeof options.skip_empty_lines === \"boolean\") ; else if (\n    options.skip_empty_lines === undefined ||\n    options.skip_empty_lines === null\n  ) {\n    options.skip_empty_lines = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`,\n    );\n  }\n  // Normalize option `skip_records_with_empty_values`\n  if (typeof options.skip_records_with_empty_values === \"boolean\") ; else if (\n    options.skip_records_with_empty_values === undefined ||\n    options.skip_records_with_empty_values === null\n  ) {\n    options.skip_records_with_empty_values = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`,\n    );\n  }\n  // Normalize option `skip_records_with_error`\n  if (typeof options.skip_records_with_error === \"boolean\") ; else if (\n    options.skip_records_with_error === undefined ||\n    options.skip_records_with_error === null\n  ) {\n    options.skip_records_with_error = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`,\n    );\n  }\n  // Normalize option `rtrim`\n  if (\n    options.rtrim === undefined ||\n    options.rtrim === null ||\n    options.rtrim === false\n  ) {\n    options.rtrim = false;\n  } else if (options.rtrim !== true) {\n    throw new Error(\n      `Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`,\n    );\n  }\n  // Normalize option `ltrim`\n  if (\n    options.ltrim === undefined ||\n    options.ltrim === null ||\n    options.ltrim === false\n  ) {\n    options.ltrim = false;\n  } else if (options.ltrim !== true) {\n    throw new Error(\n      `Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`,\n    );\n  }\n  // Normalize option `trim`\n  if (\n    options.trim === undefined ||\n    options.trim === null ||\n    options.trim === false\n  ) {\n    options.trim = false;\n  } else if (options.trim !== true) {\n    throw new Error(\n      `Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`,\n    );\n  }\n  // Normalize options `trim`, `ltrim` and `rtrim`\n  if (options.trim === true && opts.ltrim !== false) {\n    options.ltrim = true;\n  } else if (options.ltrim !== true) {\n    options.ltrim = false;\n  }\n  if (options.trim === true && opts.rtrim !== false) {\n    options.rtrim = true;\n  } else if (options.rtrim !== true) {\n    options.rtrim = false;\n  }\n  // Normalize option `to`\n  if (options.to === undefined || options.to === null) {\n    options.to = -1;\n  } else {\n    if (typeof options.to === \"string\" && /\\d+/.test(options.to)) {\n      options.to = parseInt(options.to);\n    }\n    if (Number.isInteger(options.to)) {\n      if (options.to <= 0) {\n        throw new Error(\n          `Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`,\n      );\n    }\n  }\n  // Normalize option `to_line`\n  if (options.to_line === undefined || options.to_line === null) {\n    options.to_line = -1;\n  } else {\n    if (typeof options.to_line === \"string\" && /\\d+/.test(options.to_line)) {\n      options.to_line = parseInt(options.to_line);\n    }\n    if (Number.isInteger(options.to_line)) {\n      if (options.to_line <= 0) {\n        throw new Error(\n          `Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`,\n      );\n    }\n  }\n  return options;\n};\n\nconst isRecordEmpty = function (record) {\n  return record.every(\n    (field) =>\n      field == null || (field.toString && field.toString().trim() === \"\"),\n  );\n};\n\nconst cr = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\n\nconst boms = {\n  // Note, the following are equals:\n  // Buffer.from(\"\\ufeff\")\n  // Buffer.from([239, 187, 191])\n  // Buffer.from('EFBBBF', 'hex')\n  utf8: Buffer.from([239, 187, 191]),\n  // Note, the following are equals:\n  // Buffer.from \"\\ufeff\", 'utf16le\n  // Buffer.from([255, 254])\n  utf16le: Buffer.from([255, 254]),\n};\n\nconst transform = function (original_options = {}) {\n  const info = {\n    bytes: 0,\n    comment_lines: 0,\n    empty_lines: 0,\n    invalid_field_length: 0,\n    lines: 1,\n    records: 0,\n  };\n  const options = normalize_options(original_options);\n  return {\n    info: info,\n    original_options: original_options,\n    options: options,\n    state: init_state(options),\n    __needMoreData: function (i, bufLen, end) {\n      if (end) return false;\n      const { encoding, escape, quote } = this.options;\n      const { quoting, needMoreDataSize, recordDelimiterMaxLength } =\n        this.state;\n      const numOfCharLeft = bufLen - i - 1;\n      const requiredLength = Math.max(\n        needMoreDataSize,\n        // Skip if the remaining buffer smaller than record delimiter\n        // If \"record_delimiter\" is yet to be discovered:\n        // 1. It is equals to `[]` and \"recordDelimiterMaxLength\" equals `0`\n        // 2. We set the length to windows line ending in the current encoding\n        // Note, that encoding is known from user or bom discovery at that point\n        // recordDelimiterMaxLength,\n        recordDelimiterMaxLength === 0\n          ? Buffer.from(\"\\r\\n\", encoding).length\n          : recordDelimiterMaxLength,\n        // Skip if remaining buffer can be an escaped quote\n        quoting ? (escape === null ? 0 : escape.length) + quote.length : 0,\n        // Skip if remaining buffer can be record delimiter following the closing quote\n        quoting ? quote.length + recordDelimiterMaxLength : 0,\n      );\n      return numOfCharLeft < requiredLength;\n    },\n    // Central parser implementation\n    parse: function (nextBuf, end, push, close) {\n      const {\n        bom,\n        comment_no_infix,\n        encoding,\n        from_line,\n        ltrim,\n        max_record_size,\n        raw,\n        relax_quotes,\n        rtrim,\n        skip_empty_lines,\n        to,\n        to_line,\n      } = this.options;\n      let { comment, escape, quote, record_delimiter } = this.options;\n      const { bomSkipped, previousBuf, rawBuffer, escapeIsQuote } = this.state;\n      let buf;\n      if (previousBuf === undefined) {\n        if (nextBuf === undefined) {\n          // Handle empty string\n          close();\n          return;\n        } else {\n          buf = nextBuf;\n        }\n      } else if (previousBuf !== undefined && nextBuf === undefined) {\n        buf = previousBuf;\n      } else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      }\n      // Handle UTF BOM\n      if (bomSkipped === false) {\n        if (bom === false) {\n          this.state.bomSkipped = true;\n        } else if (buf.length < 3) {\n          // No enough data\n          if (end === false) {\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          }\n        } else {\n          for (const encoding in boms) {\n            if (boms[encoding].compare(buf, 0, boms[encoding].length) === 0) {\n              // Skip BOM\n              const bomLength = boms[encoding].length;\n              this.state.bufBytesStart += bomLength;\n              buf = buf.slice(bomLength);\n              // Renormalize original options with the new encoding\n              this.options = normalize_options({\n                ...this.original_options,\n                encoding: encoding,\n              });\n              // Options will re-evaluate the Buffer with the new encoding\n              ({ comment, escape, quote } = this.options);\n              break;\n            }\n          }\n          this.state.bomSkipped = true;\n        }\n      }\n      const bufLen = buf.length;\n      let pos;\n      for (pos = 0; pos < bufLen; pos++) {\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if (this.__needMoreData(pos, bufLen, end)) {\n          break;\n        }\n        if (this.state.wasRowDelimiter === true) {\n          this.info.lines++;\n          this.state.wasRowDelimiter = false;\n        }\n        if (to_line !== -1 && this.info.lines > to_line) {\n          this.state.stop = true;\n          close();\n          return;\n        }\n        // Auto discovery of record_delimiter, unix, mac and windows supported\n        if (this.state.quoting === false && record_delimiter.length === 0) {\n          const record_delimiterCount = this.__autoDiscoverRecordDelimiter(\n            buf,\n            pos,\n          );\n          if (record_delimiterCount) {\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n        const chr = buf[pos];\n        if (raw === true) {\n          rawBuffer.append(chr);\n        }\n        if (\n          (chr === cr || chr === nl) &&\n          this.state.wasRowDelimiter === false\n        ) {\n          this.state.wasRowDelimiter = true;\n        }\n        // Previous char was a valid escape char\n        // treat the current char as a regular char\n        if (this.state.escaping === true) {\n          this.state.escaping = false;\n        } else {\n          // Escape is only active inside quoted fields\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          // if(escape !== null && this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          if (\n            escape !== null &&\n            this.state.quoting === true &&\n            this.__isEscape(buf, pos, chr) &&\n            pos + escape.length < bufLen\n          ) {\n            if (escapeIsQuote) {\n              if (this.__isQuote(buf, pos + escape.length)) {\n                this.state.escaping = true;\n                pos += escape.length - 1;\n                continue;\n              }\n            } else {\n              this.state.escaping = true;\n              pos += escape.length - 1;\n              continue;\n            }\n          }\n          // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n          if (this.state.commenting === false && this.__isQuote(buf, pos)) {\n            if (this.state.quoting === true) {\n              const nextChr = buf[pos + quote.length];\n              const isNextChrTrimable =\n                rtrim && this.__isCharTrimable(buf, pos + quote.length);\n              const isNextChrComment =\n                comment !== null &&\n                this.__compareBytes(comment, buf, pos + quote.length, nextChr);\n              const isNextChrDelimiter = this.__isDelimiter(\n                buf,\n                pos + quote.length,\n                nextChr,\n              );\n              const isNextChrRecordDelimiter =\n                record_delimiter.length === 0\n                  ? this.__autoDiscoverRecordDelimiter(buf, pos + quote.length)\n                  : this.__isRecordDelimiter(nextChr, buf, pos + quote.length);\n              // Escape a quote\n              // Treat next char as a regular character\n              if (\n                escape !== null &&\n                this.__isEscape(buf, pos, chr) &&\n                this.__isQuote(buf, pos + escape.length)\n              ) {\n                pos += escape.length - 1;\n              } else if (\n                !nextChr ||\n                isNextChrDelimiter ||\n                isNextChrRecordDelimiter ||\n                isNextChrComment ||\n                isNextChrTrimable\n              ) {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                pos += quote.length - 1;\n                continue;\n              } else if (relax_quotes === false) {\n                const err = this.__error(\n                  new CsvError(\n                    \"CSV_INVALID_CLOSING_QUOTE\",\n                    [\n                      \"Invalid Closing Quote:\",\n                      `got \"${String.fromCharCode(nextChr)}\"`,\n                      `at line ${this.info.lines}`,\n                      \"instead of delimiter, record delimiter, trimable character\",\n                      \"(if activated) or comment\",\n                    ],\n                    this.options,\n                    this.__infoField(),\n                  ),\n                );\n                if (err !== undefined) return err;\n              } else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                this.state.field.prepend(quote);\n                pos += quote.length - 1;\n              }\n            } else {\n              if (this.state.field.length !== 0) {\n                // In relax_quotes mode, treat opening quote preceded by chrs as regular\n                if (relax_quotes === false) {\n                  const info = this.__infoField();\n                  const bom = Object.keys(boms)\n                    .map((b) =>\n                      boms[b].equals(this.state.field.toString()) ? b : false,\n                    )\n                    .filter(Boolean)[0];\n                  const err = this.__error(\n                    new CsvError(\n                      \"INVALID_OPENING_QUOTE\",\n                      [\n                        \"Invalid Opening Quote:\",\n                        `a quote is found on field ${JSON.stringify(info.column)} at line ${info.lines}, value is ${JSON.stringify(this.state.field.toString(encoding))}`,\n                        bom ? `(${bom} bom)` : undefined,\n                      ],\n                      this.options,\n                      info,\n                      {\n                        field: this.state.field,\n                      },\n                    ),\n                  );\n                  if (err !== undefined) return err;\n                }\n              } else {\n                this.state.quoting = true;\n                pos += quote.length - 1;\n                continue;\n              }\n            }\n          }\n          if (this.state.quoting === false) {\n            const recordDelimiterLength = this.__isRecordDelimiter(\n              chr,\n              buf,\n              pos,\n            );\n            if (recordDelimiterLength !== 0) {\n              // Do not emit comments which take a full line\n              const skipCommentLine =\n                this.state.commenting &&\n                this.state.wasQuoting === false &&\n                this.state.record.length === 0 &&\n                this.state.field.length === 0;\n              if (skipCommentLine) {\n                this.info.comment_lines++;\n                // Skip full comment line\n              } else {\n                // Activate records emition if above from_line\n                if (\n                  this.state.enabled === false &&\n                  this.info.lines +\n                    (this.state.wasRowDelimiter === true ? 1 : 0) >=\n                    from_line\n                ) {\n                  this.state.enabled = true;\n                  this.__resetField();\n                  this.__resetRecord();\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                // Skip if line is empty and skip_empty_lines activated\n                if (\n                  skip_empty_lines === true &&\n                  this.state.wasQuoting === false &&\n                  this.state.record.length === 0 &&\n                  this.state.field.length === 0\n                ) {\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                this.info.bytes = this.state.bufBytesStart + pos;\n                const errField = this.__onField();\n                if (errField !== undefined) return errField;\n                this.info.bytes =\n                  this.state.bufBytesStart + pos + recordDelimiterLength;\n                const errRecord = this.__onRecord(push);\n                if (errRecord !== undefined) return errRecord;\n                if (to !== -1 && this.info.records >= to) {\n                  this.state.stop = true;\n                  close();\n                  return;\n                }\n              }\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n            if (this.state.commenting) {\n              continue;\n            }\n            if (\n              comment !== null &&\n              (comment_no_infix === false ||\n                (this.state.record.length === 0 &&\n                  this.state.field.length === 0))\n            ) {\n              const commentCount = this.__compareBytes(comment, buf, pos, chr);\n              if (commentCount !== 0) {\n                this.state.commenting = true;\n                continue;\n              }\n            }\n            const delimiterLength = this.__isDelimiter(buf, pos, chr);\n            if (delimiterLength !== 0) {\n              this.info.bytes = this.state.bufBytesStart + pos;\n              const errField = this.__onField();\n              if (errField !== undefined) return errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n        if (this.state.commenting === false) {\n          if (\n            max_record_size !== 0 &&\n            this.state.record_length + this.state.field.length > max_record_size\n          ) {\n            return this.__error(\n              new CsvError(\n                \"CSV_MAX_RECORD_SIZE\",\n                [\n                  \"Max Record Size:\",\n                  \"record exceed the maximum number of tolerated bytes\",\n                  `of ${max_record_size}`,\n                  `at line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n              ),\n            );\n          }\n        }\n        const lappend =\n          ltrim === false ||\n          this.state.quoting === true ||\n          this.state.field.length !== 0 ||\n          !this.__isCharTrimable(buf, pos);\n        // rtrim in non quoting is handle in __onField\n        const rappend = rtrim === false || this.state.wasQuoting === false;\n        if (lappend === true && rappend === true) {\n          this.state.field.append(chr);\n        } else if (rtrim === true && !this.__isCharTrimable(buf, pos)) {\n          return this.__error(\n            new CsvError(\n              \"CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE\",\n              [\n                \"Invalid Closing Quote:\",\n                \"found non trimable byte after quote\",\n                `at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n        } else {\n          if (lappend === false) {\n            pos += this.__isCharTrimable(buf, pos) - 1;\n          }\n          continue;\n        }\n      }\n      if (end === true) {\n        // Ensure we are not ending in a quoting state\n        if (this.state.quoting === true) {\n          const err = this.__error(\n            new CsvError(\n              \"CSV_QUOTE_NOT_CLOSED\",\n              [\n                \"Quote Not Closed:\",\n                `the parsing is finished with an opening quote at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n          if (err !== undefined) return err;\n        } else {\n          // Skip last line if it has no characters\n          if (\n            this.state.wasQuoting === true ||\n            this.state.record.length !== 0 ||\n            this.state.field.length !== 0\n          ) {\n            this.info.bytes = this.state.bufBytesStart + pos;\n            const errField = this.__onField();\n            if (errField !== undefined) return errField;\n            const errRecord = this.__onRecord(push);\n            if (errRecord !== undefined) return errRecord;\n          } else if (this.state.wasRowDelimiter === true) {\n            this.info.empty_lines++;\n          } else if (this.state.commenting === true) {\n            this.info.comment_lines++;\n          }\n        }\n      } else {\n        this.state.bufBytesStart += pos;\n        this.state.previousBuf = buf.slice(pos);\n      }\n      if (this.state.wasRowDelimiter === true) {\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    },\n    __onRecord: function (push) {\n      const {\n        columns,\n        group_columns_by_name,\n        encoding,\n        info,\n        from,\n        relax_column_count,\n        relax_column_count_less,\n        relax_column_count_more,\n        raw,\n        skip_records_with_empty_values,\n      } = this.options;\n      const { enabled, record } = this.state;\n      if (enabled === false) {\n        return this.__resetRecord();\n      }\n      // Convert the first line into column names\n      const recordLength = record.length;\n      if (columns === true) {\n        if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n          this.__resetRecord();\n          return;\n        }\n        return this.__firstLineToColumns(record);\n      }\n      if (columns === false && this.info.records === 0) {\n        this.state.expectedRecordLength = recordLength;\n      }\n      if (recordLength !== this.state.expectedRecordLength) {\n        const err =\n          columns === false\n            ? new CsvError(\n                \"CSV_RECORD_INCONSISTENT_FIELDS_LENGTH\",\n                [\n                  \"Invalid Record Length:\",\n                  `expect ${this.state.expectedRecordLength},`,\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              )\n            : new CsvError(\n                \"CSV_RECORD_INCONSISTENT_COLUMNS\",\n                [\n                  \"Invalid Record Length:\",\n                  `columns length is ${columns.length},`, // rename columns\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              );\n        if (\n          relax_column_count === true ||\n          (relax_column_count_less === true &&\n            recordLength < this.state.expectedRecordLength) ||\n          (relax_column_count_more === true &&\n            recordLength > this.state.expectedRecordLength)\n        ) {\n          this.info.invalid_field_length++;\n          this.state.error = err;\n          // Error is undefined with skip_records_with_error\n        } else {\n          const finalErr = this.__error(err);\n          if (finalErr) return finalErr;\n        }\n      }\n      if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n        this.__resetRecord();\n        return;\n      }\n      if (this.state.recordHasError === true) {\n        this.__resetRecord();\n        this.state.recordHasError = false;\n        return;\n      }\n      this.info.records++;\n      if (from === 1 || this.info.records >= from) {\n        const { objname } = this.options;\n        // With columns, records are object\n        if (columns !== false) {\n          const obj = {};\n          // Transform record array to an object\n          for (let i = 0, l = record.length; i < l; i++) {\n            if (columns[i] === undefined || columns[i].disabled) continue;\n            // Turn duplicate columns into an array\n            if (\n              group_columns_by_name === true &&\n              obj[columns[i].name] !== undefined\n            ) {\n              if (Array.isArray(obj[columns[i].name])) {\n                obj[columns[i].name] = obj[columns[i].name].concat(record[i]);\n              } else {\n                obj[columns[i].name] = [obj[columns[i].name], record[i]];\n              }\n            } else {\n              obj[columns[i].name] = record[i];\n            }\n          }\n          // Without objname (default)\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: obj },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [obj[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? obj : [obj[objname], obj],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n          // Without columns, records are array\n        } else {\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: record },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [record[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? record : [record[objname], record],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n        }\n      }\n      this.__resetRecord();\n    },\n    __firstLineToColumns: function (record) {\n      const { firstLineToHeaders } = this.state;\n      try {\n        const headers =\n          firstLineToHeaders === undefined\n            ? record\n            : firstLineToHeaders.call(null, record);\n        if (!Array.isArray(headers)) {\n          return this.__error(\n            new CsvError(\n              \"CSV_INVALID_COLUMN_MAPPING\",\n              [\n                \"Invalid Column Mapping:\",\n                \"expect an array from column function,\",\n                `got ${JSON.stringify(headers)}`,\n              ],\n              this.options,\n              this.__infoField(),\n              {\n                headers: headers,\n              },\n            ),\n          );\n        }\n        const normalizedHeaders = normalize_columns_array(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n        this.__resetRecord();\n        return;\n      } catch (err) {\n        return err;\n      }\n    },\n    __resetRecord: function () {\n      if (this.options.raw === true) {\n        this.state.rawBuffer.reset();\n      }\n      this.state.error = undefined;\n      this.state.record = [];\n      this.state.record_length = 0;\n    },\n    __onField: function () {\n      const { cast, encoding, rtrim, max_record_size } = this.options;\n      const { enabled, wasQuoting } = this.state;\n      // Short circuit for the from_line options\n      if (enabled === false) {\n        return this.__resetField();\n      }\n      let field = this.state.field.toString(encoding);\n      if (rtrim === true && wasQuoting === false) {\n        field = field.trimRight();\n      }\n      if (cast === true) {\n        const [err, f] = this.__cast(field);\n        if (err !== undefined) return err;\n        field = f;\n      }\n      this.state.record.push(field);\n      // Increment record length if record size must not exceed a limit\n      if (max_record_size !== 0 && typeof field === \"string\") {\n        this.state.record_length += field.length;\n      }\n      this.__resetField();\n    },\n    __resetField: function () {\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    },\n    __push: function (record, push) {\n      const { on_record } = this.options;\n      if (on_record !== undefined) {\n        const info = this.__infoRecord();\n        try {\n          record = on_record.call(null, record, info);\n        } catch (err) {\n          return err;\n        }\n        if (record === undefined || record === null) {\n          return;\n        }\n      }\n      push(record);\n    },\n    // Return a tuple with the error and the casted value\n    __cast: function (field) {\n      const { columns, relax_column_count } = this.options;\n      const isColumns = Array.isArray(columns);\n      // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n      if (\n        isColumns === true &&\n        relax_column_count &&\n        this.options.columns.length <= this.state.record.length\n      ) {\n        return [undefined, undefined];\n      }\n      if (this.state.castField !== null) {\n        try {\n          const info = this.__infoField();\n          return [undefined, this.state.castField.call(null, field, info)];\n        } catch (err) {\n          return [err];\n        }\n      }\n      if (this.__isFloat(field)) {\n        return [undefined, parseFloat(field)];\n      } else if (this.options.cast_date !== false) {\n        const info = this.__infoField();\n        return [undefined, this.options.cast_date.call(null, field, info)];\n      }\n      return [undefined, field];\n    },\n    // Helper to test if a character is a space or a line delimiter\n    __isCharTrimable: function (buf, pos) {\n      const isTrim = (buf, pos) => {\n        const { timchars } = this.state;\n        loop1: for (let i = 0; i < timchars.length; i++) {\n          const timchar = timchars[i];\n          for (let j = 0; j < timchar.length; j++) {\n            if (timchar[j] !== buf[pos + j]) continue loop1;\n          }\n          return timchar.length;\n        }\n        return 0;\n      };\n      return isTrim(buf, pos);\n    },\n    // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n    __isFloat: function (value) {\n      return value - parseFloat(value) + 1 >= 0; // Borrowed from jquery\n    },\n    __compareBytes: function (sourceBuf, targetBuf, targetPos, firstByte) {\n      if (sourceBuf[0] !== firstByte) return 0;\n      const sourceLength = sourceBuf.length;\n      for (let i = 1; i < sourceLength; i++) {\n        if (sourceBuf[i] !== targetBuf[targetPos + i]) return 0;\n      }\n      return sourceLength;\n    },\n    __isDelimiter: function (buf, pos, chr) {\n      const { delimiter, ignore_last_delimiters } = this.options;\n      if (\n        ignore_last_delimiters === true &&\n        this.state.record.length === this.options.columns.length - 1\n      ) {\n        return 0;\n      } else if (\n        ignore_last_delimiters !== false &&\n        typeof ignore_last_delimiters === \"number\" &&\n        this.state.record.length === ignore_last_delimiters - 1\n      ) {\n        return 0;\n      }\n      loop1: for (let i = 0; i < delimiter.length; i++) {\n        const del = delimiter[i];\n        if (del[0] === chr) {\n          for (let j = 1; j < del.length; j++) {\n            if (del[j] !== buf[pos + j]) continue loop1;\n          }\n          return del.length;\n        }\n      }\n      return 0;\n    },\n    __isRecordDelimiter: function (chr, buf, pos) {\n      const { record_delimiter } = this.options;\n      const recordDelimiterLength = record_delimiter.length;\n      loop1: for (let i = 0; i < recordDelimiterLength; i++) {\n        const rd = record_delimiter[i];\n        const rdLength = rd.length;\n        if (rd[0] !== chr) {\n          continue;\n        }\n        for (let j = 1; j < rdLength; j++) {\n          if (rd[j] !== buf[pos + j]) {\n            continue loop1;\n          }\n        }\n        return rd.length;\n      }\n      return 0;\n    },\n    __isEscape: function (buf, pos, chr) {\n      const { escape } = this.options;\n      if (escape === null) return false;\n      const l = escape.length;\n      if (escape[0] === chr) {\n        for (let i = 0; i < l; i++) {\n          if (escape[i] !== buf[pos + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    __isQuote: function (buf, pos) {\n      const { quote } = this.options;\n      if (quote === null) return false;\n      const l = quote.length;\n      for (let i = 0; i < l; i++) {\n        if (quote[i] !== buf[pos + i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    __autoDiscoverRecordDelimiter: function (buf, pos) {\n      const { encoding } = this.options;\n      // Note, we don't need to cache this information in state,\n      // It is only called on the first line until we find out a suitable\n      // record delimiter.\n      const rds = [\n        // Important, the windows line ending must be before mac os 9\n        Buffer.from(\"\\r\\n\", encoding),\n        Buffer.from(\"\\n\", encoding),\n        Buffer.from(\"\\r\", encoding),\n      ];\n      loop: for (let i = 0; i < rds.length; i++) {\n        const l = rds[i].length;\n        for (let j = 0; j < l; j++) {\n          if (rds[i][j] !== buf[pos + j]) {\n            continue loop;\n          }\n        }\n        this.options.record_delimiter.push(rds[i]);\n        this.state.recordDelimiterMaxLength = rds[i].length;\n        return rds[i].length;\n      }\n      return 0;\n    },\n    __error: function (msg) {\n      const { encoding, raw, skip_records_with_error } = this.options;\n      const err = typeof msg === \"string\" ? new Error(msg) : msg;\n      if (skip_records_with_error) {\n        this.state.recordHasError = true;\n        if (this.options.on_skip !== undefined) {\n          this.options.on_skip(\n            err,\n            raw ? this.state.rawBuffer.toString(encoding) : undefined,\n          );\n        }\n        // this.emit('skip', err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        return undefined;\n      } else {\n        return err;\n      }\n    },\n    __infoDataSet: function () {\n      return {\n        ...this.info,\n        columns: this.options.columns,\n      };\n    },\n    __infoRecord: function () {\n      const { columns, raw, encoding } = this.options;\n      return {\n        ...this.__infoDataSet(),\n        error: this.state.error,\n        header: columns === true,\n        index: this.state.record.length,\n        raw: raw ? this.state.rawBuffer.toString(encoding) : undefined,\n      };\n    },\n    __infoField: function () {\n      const { columns } = this.options;\n      const isColumns = Array.isArray(columns);\n      return {\n        ...this.__infoRecord(),\n        column:\n          isColumns === true\n            ? columns.length > this.state.record.length\n              ? columns[this.state.record.length].name\n              : null\n            : this.state.record.length,\n        quoting: this.state.wasQuoting,\n      };\n    },\n  };\n};\n\nconst parse = function (data, opts = {}) {\n  if (typeof data === \"string\") {\n    data = Buffer.from(data);\n  }\n  const records = opts && opts.objname ? {} : [];\n  const parser = transform(opts);\n  const push = (record) => {\n    if (parser.options.objname === undefined) records.push(record);\n    else {\n      records[record[0]] = record[1];\n    }\n  };\n  const close = () => {};\n  const err1 = parser.parse(data, false, push, close);\n  if (err1 !== undefined) throw err1;\n  const err2 = parser.parse(undefined, true, push, close);\n  if (err2 !== undefined) throw err2;\n  return records;\n};\n\nexport { CsvError, parse };\n","import { parse } from \"csv-parse/browser/esm/sync\"\nimport { Label, NumberLabel } from \"./label\"\n\ntype StatData = { Date: string, Player: string }[]\n\nfunction datesBetween(from: Date, to: Date, inclusive: boolean): Date[] {\n\tconst dates = []\n\tlet current = from\n\twhile (inclusive ? current <= to : current < to) {\n\t\tdates.push(new Date(current))\n\t\tcurrent.setUTCDate(current.getUTCDate() + 1)\n\t}\n\treturn dates\n}\n\nfunction getDatasetForPlayer(data: StatData, dates: string[], player: string, stat: string): { label: Label, value: number }[] {\n\tconst linedata = data.filter(row => row.Player == player)\n\t\t.map(row => ({\n\t\t\tlabel: new Date(row.Date).toISOString().split(\"T\")[0],\n\t\t\tvalue: Number(row[stat]),\n\t\t}))\n\t\t.flatMap((row, i, rows) => {\n\t\t\tconst days = datesBetween(new Date(row.label), new Date(rows[i + 1]?.label ?? dates.at(-1)), i == rows.length - 1)\n\t\t\t// return days.map(day => ({ label: day.toISOString().split(\"T\")[0], value: row.value }))\n\t\t\treturn days.map(day => ({ label: new NumberLabel(Math.floor(day.valueOf() / 1000 / 60 / 60 / 24)), value: row.value }))\n\t\t})\n\treturn linedata\n}\n\nexport async function getData(column: string) {\n\tconst data = parse(await (await fetch(\"./stats.csv\")).text(), { columns: true })\n\tconst players: Set<string> = new Set(data.map(row => row.Player))\n\tconst [minDate, maxDate] = data.map(row => new Date(row.Date).valueOf())\n\t\t.reduce(\n\t\t\t([min, max], date) => [Math.min(min, date), Math.max(max, date)],\n\t\t\t[Infinity, -Infinity])\n\tconst dates = datesBetween(new Date(minDate), new Date(maxDate), true)\n\t\t.map(date => date.toISOString().split(\"T\")[0])\n\n\treturn Object.fromEntries([...players].map(player => [player, getDatasetForPlayer(data, dates, player, column)]))\n}\n","import { turbo } from \"./colourschemes\"\nimport { Label, NumberLabel } from \"./label\"\nimport PopupElement from \"./popup\"\nimport { g, line, polyline, rect, svg, text } from \"./svg\"\n\nexport { Label, NumberLabel } from \"./label\"\nexport { getData } from \"./data\"\n\nexport type Config = {\n\tdata: { [category: string]: { label: Label, value: number }[] }\n\txLabels?: Label[]\n\tyLabels?: Label[]\n\tstyles?: Styles\n}\n\nexport type Styles = {\n\txAxisSize?: number\n\tyAxisSize?: number\n\tminSpacePerXLabel?: number\n\tminSpacePerYLabel?: number\n}\n\nexport default class SVGraph extends HTMLElement {\n\tsvgElem: SVGElement\n\tpopupElem: PopupElement\n\tguideLine: SVGElement\n\n\tdata: { name: string, points: { label: Label, value: number }[] }[]\n\txLabels: Label[]\n\tyLabels: Label[]\n\tstyles: Styles\n\n\txRange: [number, number]\n\tmaxY: number\n\tprivate resizeObserver: ResizeObserver\n\n\tprivate getXLabelInterval = (width: number): number =>\n\t\tMath.ceil(this.xLabels.length / (width / this.styles.minSpacePerXLabel))\n\n\tprivate getYLabelInterval = (height: number): number =>\n\t\tMath.ceil(this.yLabels.length / (height / this.styles.minSpacePerYLabel))\n\n\tprivate getXLabels = (width: number): Label[] => this.xLabels.filter((_, i) => i % this.getXLabelInterval(width) == 0)\n\tprivate getYLabels = (height: number): Label[] => this.yLabels.filter((_, i) => i % this.getYLabelInterval(height) == 0)\n\n\tconstructor(config: Config) {\n\t\tsuper()\n\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\n\n\t\tconst styleElem = document.createElement(\"style\")\n\t\tstyleElem.textContent = `\n\t\t\t.popup {\n\t\t\t\tposition: absolute;\n\t\t\t\tpadding: 10px;\n\t\t\t\tbackground: #2228;\n\t\t\t\tborder: 1px solid #FFF1;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbox-shadow: 1px 2px 20px 0px #0008;\n\t\t\t\tbackdrop-filter: blur(20px);\n\t\t\t}\n\t\t\t.popup h3 {\n\t\t\t\tmargin: 0 0 0.8em 0;\n\t\t\t}\n\t\t\t.popup p {\n\t\t\t\tmargin: 0.5em 0 0 0;\n\t\t\t}\n\t\t\t\n\t\t\t.popup:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.guideline:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`\n\t\tshadow.appendChild(styleElem)\n\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\n\t\tshadow.appendChild(this.svgElem)\n\n\t\tthis.guideLine = line({ class: \"guideline\", from: [0, 0], to: [0, 0], stroke: \"#FFF8\", \"stroke-width\": 1 })\n\n\t\tthis.popupElem = new PopupElement()\n\t\tthis.popupElem.classList.add(\"popup\")\n\t\tshadow.appendChild(this.popupElem)\n\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\n\t\t\tthis.draw(entries[0].contentBoxSize[0].inlineSize, entries[0].contentBoxSize[0].blockSize)\n\t\t})\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\n\n\t\tthis.update(config, false)\n\t}\n\n\tupdate({ data, xLabels, yLabels, styles: style }: Config, redraw = true) {\n\t\tthis.data = Object.entries(data).sort((a, b) => b[1].at(-1).value - a[1].at(-1).value).map(([name, points]) => ({ name, points }))\n\n\t\t// this.maxX = this.data.map(({ points }) => points.length - 1).max()\n\t\tthis.xRange = [\n\t\t\tNumber(this.data.map(({ points }) => points[0])[0].label.text),\n\t\t\tNumber(this.data.map(({ points }) => points.at(-1)).at(-1).label.text)\n\t\t]\n\t\tthis.maxY = this.data[0].points.maxByKey(\"value\").value\n\n\t\tthis.xLabels = xLabels ?? new Set(this.data.flatMap(({ points }) => points.keys().toArray()))\n\t\t\t.values().toArray().sort((a, b) => a - b).map((i) => new NumberLabel(i))\n\t\tthis.yLabels = yLabels ?? [new NumberLabel(0), new NumberLabel(this.maxY)]\n\n\t\tthis.styles = {\n\t\t\txAxisSize: style?.xAxisSize ?? 30,\n\t\t\tyAxisSize: style?.yAxisSize ?? 30,\n\t\t\tminSpacePerXLabel: style?.minSpacePerXLabel ?? 50,\n\t\t\tminSpacePerYLabel: style?.minSpacePerYLabel ?? 50,\n\t\t}\n\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\n\t}\n\n\tdraw(width: number, height: number) {\n\t\tthis.svgElem.innerHTML = \"\"\n\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxisSize, 0, width - this.styles.yAxisSize, height - this.styles.xAxisSize))\n\t\tthis.svgElem.appendChild(this.guideLine)\n\t\tthis.guideLine.setAttribute(\"y2\", (height - this.styles.xAxisSize).toString())\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxisSize, 0, width - this.styles.yAxisSize, height - this.styles.xAxisSize))\n\n\t\tconst area = rect({ x: this.styles.yAxisSize, y: 0, width: width - this.styles.yAxisSize, height: height - this.styles.xAxisSize, fill: \"transparent\" })\n\t\tthis.svgElem.appendChild(area)\n\t\tarea.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\n\t\tarea.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\n\t}\n\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\n\t\t\tthis.xAxis(this.styles.yAxisSize, height - this.styles.xAxisSize, width - this.styles.yAxisSize, this.styles.xAxisSize),\n\t\t\tthis.yAxis(0, 0, this.styles.yAxisSize, height - this.styles.xAxisSize)\n\t\t)\n\t}\n\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"xaxis\" },\n\t\t\tline({ from: [x, y], to: [x + width, y], stroke: \"white\" }),\n\t\t\t...this.getXLabels(width).map(step => text({\n\t\t\t\tx: x + step.getPos(...this.xRange) * width,\n\t\t\t\ty: y + 20,\n\t\t\t\t\"text-anchor\": \"middle\"\n\t\t\t}, new Text(step.text)))\n\t\t)\n\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"yaxis\" },\n\t\t\tline({ from: [x + width, y], to: [x + width, y + height], stroke: \"white\" }),\n\t\t\t...this.getYLabels(height).map(step => text({\n\t\t\t\tx: x + width - 10,\n\t\t\t\ty: y + (1 - step.getPos(0, this.maxY)) * height + 5,\n\t\t\t\t\"text-anchor\": \"end\"\n\t\t\t}, new Text(step.text)))\n\t\t)\n\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\n\t\t\t...this.getXLabels(width).map(step => line({\n\t\t\t\tfrom: [step.getPos(...this.xRange) * width, 0],\n\t\t\t\tto: [step.getPos(...this.xRange) * width, height],\n\t\t\t\tstroke: \"#FFF4\"\n\t\t\t})),\n\t\t\t...this.getYLabels(height).map(step => line({\n\t\t\t\tfrom: [0, (1 - step.getPos(0, this.maxY)) * height],\n\t\t\t\tto: [width, (1 - step.getPos(0, this.maxY)) * height],\n\t\t\t\tstroke: \"#FFF4\"\n\t\t\t})),\n\t\t)\n\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": \"2\" },\n\t\t\t...this.data.map(({ name, points: values }, i) => {\n\t\t\t\tconst colour = turbo[Math.floor((i + 1) / (this.data.length + 1) * turbo.length)]\n\t\t\t\tconst points = values.map(point => [\n\t\t\t\t\tpoint.label.getPos(...this.xRange) * width,\n\t\t\t\t\t(1 - point.value / this.maxY) * height\n\t\t\t\t] as [number, number])\n\t\t\t\treturn polyline({ points, fill: \"none\", stroke: colour })\n\t\t\t})\n\t\t)\n\n\tprivate onMouseMove(event: MouseEvent) {\n\t\tconst rect = this.getBoundingClientRect()\n\t\tconst x = event.clientX - rect.left\n\n\t\tthis.popupElem.update(event.clientX, event.clientY, (x - this.styles.yAxisSize) / (rect.width - this.styles.yAxisSize), this.data)\n\n\t\tthis.guideLine.classList.add(\"active\")\n\t\tthis.guideLine.setAttribute(\"x1\", x.toString())\n\t\tthis.guideLine.setAttribute(\"x2\", x.toString())\n\t}\n\n\tprivate onMouseLeave(event: MouseEvent) {\n\t\tthis.popupElem.hide()\n\t\tthis.guideLine.classList.remove(\"active\")\n\t}\n}\n\ncustomElements.define(\"svg-graph\", SVGraph)\n\ndeclare global {\n\tinterface Array<T> {\n\t\tmax(): T\n\t\tmaxBy(fn: (x: T) => number): T\n\t\tmaxByKey(key: string): T\n\t\tmin(): T\n\t\tminBy(fn: (x: T) => number): T\n\t\tminByKey(key: string): T\n\t}\n}\n\nArray.prototype.max = function () { return this.reduce((a, b) => Math.max(a, b), 0) }\nArray.prototype.maxBy = function <T>(fn: (x: T) => number) { return this.reduce((a, b) => fn(a) > fn(b) ? a : b) }\nArray.prototype.maxByKey = function (key: string) { return this.reduce((a, b) => a[key] > b[key] ? a : b) }\n\nArray.prototype.min = function () { return this.reduce((a, b) => Math.min(a, b), 0) }\nArray.prototype.minBy = function <T>(fn: (x: T) => number) { return this.reduce((a, b) => fn(a) < fn(b) ? a : b) }\nArray.prototype.minByKey = function (key: string) { return this.reduce((a, b) => a[key] < b[key] ? a : b) }\n"],"names":["turbo","NumberLabel","value","constructor","this","text","toString","getPos","min","max","element","name","attrs","children","elem","document","createElement","key","undefined","setAttribute","child","appendChild","p","PopupElement","HTMLDivElement","super","show","classList","add","hide","remove","move","x","y","style","left","top","setValues","values","Text","update","idx","data","innerHTML","h3","customElements","define","extends","ns","createElementNS","g","line","x1","from","y1","x2","to","y2","global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","len","length","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","c","rt","abs","isNaN","floor","log","LN2","isArray","arr","call","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","Error","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","poolSize","_augment","Symbol","species","alloc","fill","allocUnsafeSlow","isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","CsvError","message","options","contexts","captureStackTrace","context","JSON","parse","stringify","normalize_columns_array","columns","normalizedColumns","column","disabled","ResizeableBuffer","prepend","resize","clone","append","reset","init_state","bomSkipped","bufBytesStart","castField","cast_function","commenting","error","enabled","from_line","escaping","escapeIsQuote","escape","quote","expectedRecordLength","field","firstLineToHeaders","cast_first_line_to_header","needMoreDataSize","comment","delimiter","map","previousBuf","quoting","stop","rawBuffer","record","recordHasError","record_length","recordDelimiterMaxLength","record_delimiter","v","trimChars","wasQuoting","wasRowDelimiter","timchars","normalize_options","opts","opt","_","bom","cast","cast_date","date","Date","group_columns_by_name","comment_no_infix","delimiter_json","test","isInteger","ignore_last_delimiters","info","max_record_size","objname","on_record","on_skip","raw","rd","relax_column_count","relax_column_count_less","relax_column_count_more","relax_quotes","skip_empty_lines","skip_records_with_empty_values","skip_records_with_error","rtrim","ltrim","to_line","isRecordEmpty","every","boms","utf8","utf16le","records","parser","original_options","comment_lines","empty_lines","invalid_field_length","lines","state","__needMoreData","bufLen","nextBuf","close","bomLength","__autoDiscoverRecordDelimiter","chr","__isEscape","__isQuote","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRecordDelimiter","__isRecordDelimiter","err","__error","__infoField","Object","keys","filter","Boolean","recordDelimiterLength","__resetField","__resetRecord","errField","__onField","errRecord","__onRecord","delimiterLength","lappend","rappend","recordLength","__firstLineToColumns","finalErr","extRecord","assign","__infoRecord","__push","headers","normalizedHeaders","trimRight","f","__cast","__isFloat","parseFloat","loop1","timchar","isTrim","sourceBuf","targetBuf","targetPos","sourceLength","del","rdLength","rds","loop","msg","__infoDataSet","header","index","isColumns","transform","err1","err2","datesBetween","inclusive","dates","current","setUTCDate","getUTCDate","getDatasetForPlayer","player","stat","row","Player","label","toISOString","split","flatMap","rows","at","day","valueOf","async","getData","fetch","players","Set","minDate","maxDate","reduce","fromEntries","SVGraph","HTMLElement","svgElem","popupElem","guideLine","xLabels","yLabels","styles","xRange","maxY","resizeObserver","getXLabelInterval","width","ceil","minSpacePerXLabel","getYLabelInterval","height","minSpacePerYLabel","getXLabels","getYLabels","config","shadow","attachShadow","mode","styleElem","textContent","xmlns","svg","overflow","class","stroke","ResizeObserver","entries","draw","contentBoxSize","inlineSize","blockSize","observe","box","redraw","sort","points","maxByKey","toArray","xAxisSize","yAxisSize","clientWidth","clientHeight","grid","axes","area","rect","addEventListener","event","onMouseMove","onMouseLeave","xAxis","yAxis","step","colour","polyline","point","getBoundingClientRect","clientX","clientY","maxBy","fn","minBy","minByKey"],"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","x_google_ignoreList":[5]}