{"version":3,"file":"svgraph.js","sources":["../src/util/html.ts","../src/util/util.ts","../src/popup.ts","../src/util/svg.ts","../src/util/range.ts","../src/legend.ts","../src/axis.ts","../src/label.ts","../src/svgraph.ts"],"sourcesContent":["function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\r\n\tconst elem = document.createElement(name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\r\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\r\nexport const span = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"span\", attrs, children)\r\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\r\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\r\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\r\n","export type DeepPartial<T> = T extends object\n\t? { [P in keyof T]?: DeepPartial<T[P]> }\n\t: T\n\nexport const maxBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) > fn(b) ? a : b) : undefined\nexport const maxByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] > b[key] ? a : b) : undefined\n\nexport const minBy = <T>(arr: T[], fn: (x: T) => number): T => (arr.length > 0) ? arr.reduce((a, b) => fn(a) < fn(b) ? a : b) : undefined\nexport const minByKey = <T>(arr: T[], key: keyof T): T => (arr.length > 0) ? arr.reduce((a, b) => a[key] < b[key] ? a : b) : undefined\n","import { div, h3, p, span } from \"./util/html\"\r\nimport { Label } from \"./label\"\r\nimport { nearestLabel, Point } from \"./svgraph\"\r\nimport Range from \"./util/range\"\r\nimport { minByKey } from \"./util/util\"\r\n\r\nconst nearestPointForLabel = (arr: Point[], to: Label, range: Range<Label>): Point =>\r\n\tminByKey(arr.map(x => [x, Math.abs(x.label.getPos(range) - to.getPos(range))]) as [Point, number][], 1)[0]\r\n\r\nexport default class PopupElement extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t}\r\n\r\n\tshow() { this.classList.add(\"active\") }\r\n\r\n\thide() { this.classList.remove(\"active\") }\r\n\r\n\tmove(x: number, y: number) {\r\n\t\tthis.style.left = `${x + 20}px`\r\n\t\tthis.style.top = `${y}px`\r\n\t}\r\n\r\n\tupdate(x: number, y: number, t: number, range: Range<Label>, data: { name: string, colour: string, points: Point[] }[]): Point[] {\r\n\t\tthis.move(x, y)\r\n\r\n\t\tconst label = nearestLabel(t, range, data)\r\n\r\n\t\tthis.innerHTML = \"\"\r\n\t\tthis.appendChild(h3({}, new Text(label.text)))\r\n\r\n\t\tconst nearestPoints = data.map(({ name, colour, points }) => ({ name, colour, point: nearestPointForLabel(points, label, range) }))\r\n\t\tthis.setValues(nearestPoints)\r\n\r\n\t\tthis.show()\r\n\r\n\t\treturn nearestPoints.map(x => x.point)\r\n\t}\r\n\r\n\tprivate setValues(points: { name: string, colour: string, point: Point }[]) {\r\n\t\tfor (const { name, colour, point: { value } } of points) {\r\n\t\t\tif (value != undefined && value.number != 0) this.appendChild(p({},\r\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\r\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\r\n\t\t\t\tnew Text(\": \"),\r\n\t\t\t\tspan({ class: \"value\" }, new Text(value.text)),\r\n\t\t\t))\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-popup\", PopupElement)\r\n","const ns = \"http://www.w3.org/2000/svg\"\r\n\r\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\r\n\tconst elem = document.createElementNS(ns, name)\r\n\tfor (const key in attrs) {\r\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\r\n\t}\r\n\tfor (const child of children ?? []) elem.appendChild(child)\r\n\treturn elem\r\n}\r\n\r\ntype stringable = string | number | boolean\r\n\r\ntype DefaultAttrs = {\r\n\tid?: string\r\n\tclass?: string\r\n\tstyle?: string\r\n\ttransform?: string\r\n\tfill?: string\r\n\tstroke?: string\r\n\t\"stroke-width\"?: stringable\r\n\t\"font-size\"?: stringable\r\n\t[_: `data-${string}`]: string\r\n}\r\n\r\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"svg\", { ...attrs, xmlns: ns }, children) as SVGElement\r\n\r\nexport const circle = (attrs: { cx: stringable, cy: stringable, r: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"circle\", attrs, children) as SVGCircleElement\r\n\r\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children) as SVGGElement\r\n\r\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children) as SVGLineElement\r\n\r\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children) as SVGPolylineElement\r\n\r\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"rect\", attrs, children) as SVGRectElement\r\n\r\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\r\n\telement(\"text\", attrs, children) as SVGTextElement\r\n","const num = (n: number | { number: number }) => typeof n === \"number\" ? n : n.number\r\n\r\nexport default class Range<T extends number | { number: number }> {\r\n\tconstructor(public min: T, public max: T) { }\r\n\r\n\t/**\r\n\t * The unit range [0,1]\r\n\t */\r\n\tstatic UNIT = new Range(0, 1) as Range<number>\r\n\r\n\t/**\r\n\t * The span of this range, i.e. `max - min`\r\n\t */\r\n\tget span() { return num(this.max) - num(this.min) }\r\n\r\n\t/**\r\n\t * Returns whether a value is within this range\r\n\t */\r\n\tcontains = (value: T): boolean => num(this.min) < num(value) && num(value) < num(this.max)\r\n\r\n\t/**\r\n\t * Clamps a value to this range\r\n\t */\r\n\tclamp = (value: number): number => Math.max(num(this.min), Math.min(value, num(this.max)))\r\n\r\n\t/**\r\n\t * Normalizes a value in a given [min,max] range to [0,1]\r\n\t */\r\n\tnormalize = (value: number): number => (value - num(this.min)) / (this.span)\r\n\r\n\t/**\r\n\t * Interpolates a `t` in [0,1] to a given [min,max] range\r\n\t */\r\n\tlerp = (t: number): number => num(this.min) + t * this.span\r\n}\r\n","import { div, span } from \"./util/html\"\n\nexport default class LegendElement extends HTMLElement {\n\tlines: { name: string, colour: string }[]\n\tdisabled: Set<string> = new Set()\n\n\tconstructor(private callback: () => void) {\n\t\tsuper()\n\t}\n\n\tupdate(data: { name: string, colour: string }[]) {\n\t\tthis.lines = data\n\t\tthis.innerHTML = \"\"\n\t\tfor (const { name, colour } of data) {\n\t\t\tconst legendItem = span({ class: \"legend-item\" },\n\t\t\t\tdiv({ class: \"swatch\", style: `background-color: ${colour}` }),\n\t\t\t\tspan({ class: \"name\" }, new Text(name)),\n\t\t\t)\n\t\t\tthis.appendChild(legendItem)\n\t\t\tlegendItem.addEventListener(\"click\", () => this.onLegendItemClick(name, legendItem))\n\t\t}\n\t}\n\n\tprivate onLegendItemClick(name: string, legendItem: HTMLElement) {\n\t\tif (this.disabled.has(name)) this.disabled.delete(name)\n\t\telse this.disabled.add(name)\n\t\tlegendItem.classList.toggle(\"disabled\", this.disabled.has(name))\n\t\tthis.callback()\n\t}\n}\n\ncustomElements.define(\"svg-legend\", LegendElement)\n","import { DateLabel, Label, MetricLabel, NumberLabel, TimeLabel } from \"./label\"\r\nimport Range from \"./util/range\"\r\n\r\nexport interface Axis<L extends Label> {\r\n\trange: Range<L>\r\n\tgetTicks(n: number): L[]\r\n}\r\n\r\nexport class NumberAxis implements Axis<NumberLabel> {\r\n\tconstructor(public range: Range<NumberLabel>) { }\r\n\r\n\tgetTicks(n: number): NumberLabel[] {\r\n\t\tconst magnitude = Math.pow(10, Math.floor(Math.log10(this.range.span / n)) - 1)\r\n\t\tconst interval = Math.floor(this.range.span / n / magnitude) * magnitude\r\n\r\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x =>\r\n\t\t\tnew NumberLabel(Math.floor(x * interval + this.range.min.number))\r\n\t\t)]\r\n\t}\r\n}\r\n\r\nexport class DateAxis implements Axis<DateLabel> {\r\n\tconstructor(public range: Range<DateLabel>) { }\r\n\r\n\tgetTicks(n: number): DateLabel[] {\r\n\t\t// total span in number of days\r\n\t\tconst span = this.range.span / 24 / 60 / 60 / 1000\r\n\r\n\t\tconst unitOffset = (span / 30 > n)\r\n\t\t\t? 30 // \"months\"\r\n\t\t\t: (span / 7 > n)\r\n\t\t\t\t? 7 // weeks\r\n\t\t\t\t: 1 // days\r\n\r\n\t\tconst interval = Math.ceil(span / unitOffset / n) * unitOffset\r\n\r\n\t\treturn [...Array(Math.floor(span / interval) + 1).keys().map(x => new DateLabel(new Date(x * interval * 24 * 60 * 60 * 1000 + this.range.min.number)))]\r\n\t}\r\n}\r\n\r\nexport class TimeAxis implements Axis<TimeLabel> {\r\n\tconstructor(public range: Range<TimeLabel>) { }\r\n\r\n\tgetTicks(n: number): TimeLabel[] {\r\n\t\tconst unitOffset = (this.range.span / 24 / 60 / 60 > n)\r\n\t\t\t? 24 * 60 * 60 // days\r\n\t\t\t: (this.range.span / 60 / 60 > n)\r\n\t\t\t\t? 60 * 60 // hours\r\n\t\t\t\t: (this.range.span / 60 > n)\r\n\t\t\t\t\t? 60 // minutes\r\n\t\t\t\t\t: 1 // seconds\r\n\r\n\t\tconst interval = Math.ceil(this.range.span / unitOffset / n) * unitOffset\r\n\r\n\t\treturn [...Array(Math.floor(this.range.span / interval) + 1).keys().map(x => new TimeLabel(x * interval + this.range.min.number))]\r\n\t}\r\n}\r\n\r\nexport class MetricAxis implements Axis<MetricLabel> {\r\n\tconstructor(public range: Range<MetricLabel>) { }\r\n\r\n\tgetTicks = (n: number): MetricLabel[] =>\r\n\t\t[...Array(n).keys().map(x => new MetricLabel(\r\n\t\t\tMath.floor(this.range.lerp(x / (n - 1))),\r\n\t\t\tthis.range.min.unit\r\n\t\t))]\r\n}\r\n","import { DateAxis, MetricAxis, NumberAxis, TimeAxis } from \"./axis\"\r\nimport Range from \"./util/range\"\r\n\r\nexport interface Label {\r\n\tget text(): string\r\n\tget number(): number\r\n\tget axisType(): any\r\n\tgetPos(range: Range<Label>): number\r\n}\r\n\r\nexport class NumberLabel implements Label {\r\n\tconstructor(public value: number) { }\r\n\r\n\tget text() { return this.value.toString() }\r\n\tget number() { return this.value }\r\n\tget axisType() { return NumberAxis }\r\n\r\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\r\n}\r\n\r\nexport class DateLabel implements Label {\r\n\tconstructor(public value: Date) { }\r\n\r\n\tget text() { return this.value.toISOString().split(\"T\")[0] }\r\n\tget number() { return this.value.valueOf() }\r\n\tget axisType() { return DateAxis }\r\n\r\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\r\n}\r\n\r\nexport class TimeLabel implements Label {\r\n\tconstructor(public value: number) { }\r\n\r\n\tget text() {\r\n\t\tconst date = new Date(this.value * 1000)\r\n\t\tconst d = Math.floor(this.value / 24 / 60 / 60)\r\n\t\tconst h = date.getUTCHours()\r\n\t\tconst m = date.getUTCMinutes()\r\n\t\tconst s = date.getUTCSeconds() + date.getUTCMilliseconds() / 1000\r\n\t\tif (h > 0 || d > 0) {\r\n\t\t\tif (m == 0) return `${h + d * 24} h`\r\n\t\t\telse return `${h + d * 24}:${String(m).padStart(2, \"0\")} h`\r\n\t\t} else if (m > 0) {\r\n\t\t\treturn `${m}:${String(Math.floor(s)).padStart(2, \"0\")}`\r\n\t\t} else {\r\n\t\t\treturn `${s} s`\r\n\t\t}\r\n\t}\r\n\tget number() { return this.value }\r\n\tget axisType() { return TimeAxis }\r\n\r\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\r\n}\r\n\r\nexport class MetricLabel implements Label {\r\n\tconstructor(public value: number, public unit: string) { }\r\n\r\n\tget text() {\r\n\t\tconst offset = MetricLabel.largestOffset(this.value)\r\n\t\treturn `${Math.floor(this.value / Math.pow(10, offset * 3))} ${MetricLabel.units[offset + MetricLabel.unitsStartOffset]}${this.unit}`\r\n\t}\r\n\tget number() { return this.value }\r\n\tget axisType() { return MetricAxis }\r\n\r\n\tgetPos = (range: Range<Label>) => range.normalize(this.number)\r\n\r\n\tstatic units = [\"n\", \"u\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"]\r\n\tstatic unitsStartOffset = 3\r\n\r\n\tstatic largestOffset = (value: number): number =>\r\n\t\t(value == 0) ? 0 : Math.floor(Math.log10(value) / 3)\r\n}\r\n","import { Axis } from \"./axis\"\r\nimport { Label } from \"./label\"\r\nimport PopupElement from \"./popup\"\r\nimport { circle, g, line, polyline, rect, svg, text } from \"./util/svg\"\r\nimport Range from \"./util/range\"\r\nimport LegendElement from \"./legend\"\r\nimport { h1 } from \"./util/html\"\r\nimport { DeepPartial, maxBy, maxByKey, minBy, minByKey } from \"./util/util\"\r\n\r\nexport * from \"./label\"\r\n\r\nexport type Point = { label: Label, value: Label }\r\n\r\nexport type Config = {\r\n\tdata: { [category: string]: Point[] }\r\n\tstyles?: DeepPartial<Styles>\r\n\ttitle?: string\r\n}\r\n\r\ntype AxisStyle = {\r\n\tcolour: string\r\n\tstrokeWidth: number\r\n\tlabels: {\r\n\t\tspacing: number\r\n\t\trotation: number\r\n\t\tcolour: string\r\n\t\tfontSize: string\r\n\t}\r\n}\r\n\r\nexport type Styles = {\r\n\tcolourscheme: string[]\r\n\txAxis: AxisStyle & { height: number }\r\n\tyAxis: AxisStyle & { width: number }\r\n\tgrid: {\r\n\t\tstroke: string\r\n\t}\r\n\tguideline: {\r\n\t\tstroke: string\r\n\t\twidth: number\r\n\t\tpoints: {\r\n\t\t\tr: number\r\n\t\t\tfill: string\r\n\t\t}\r\n\t}\r\n\tlines: {\r\n\t\twidth: number\r\n\t}\r\n}\r\n\r\nexport default class SVGraph extends HTMLElement {\r\n\tsvgElem: SVGElement\r\n\tpopupElem: PopupElement\r\n\tlegendElem: LegendElement\r\n\tguideElem: SVGElement\r\n\tselectionElem: SVGElement\r\n\r\n\tdata: { name: string, colour: string, points: Point[] }[]\r\n\tstyles: Styles\r\n\txaxis: Axis<Label>\r\n\tyaxis: Axis<Label>\r\n\r\n\tprivate resizeObserver: ResizeObserver\r\n\tprivate selection: { from?: number, to?: number } = {}\r\n\tprivate activeData: { name: string, colour: string, points: Point[] }[]\r\n\r\n\tget canvasCoordRange() { return new Range(this.styles.yAxis.width, this.svgElem.clientWidth) }\r\n\r\n\tconstructor(config: Config) {\r\n\t\tsuper()\r\n\r\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\r\n\r\n\t\tconst styleElem = document.createElement(\"style\")\r\n\t\tstyleElem.textContent = style\r\n\t\tshadow.appendChild(styleElem)\r\n\r\n\t\tif (config.title != undefined) shadow.appendChild(h1({ class: \"title\" }, new Text(config.title)))\r\n\r\n\t\tthis.legendElem = new LegendElement(() => this.updateActiveData())\r\n\t\tshadow.appendChild(this.legendElem)\r\n\r\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\r\n\t\tthis.svgElem.addEventListener(\"mousedown\", (event: MouseEvent) => this.onMouseDown(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseup\", (event: MouseEvent) => this.onMouseUp(event))\r\n\t\tthis.svgElem.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\r\n\t\tthis.svgElem.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\r\n\t\tshadow.appendChild(this.svgElem)\r\n\r\n\t\tthis.popupElem = new PopupElement()\r\n\t\tshadow.appendChild(this.popupElem)\r\n\r\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\r\n\t\t\tconst { inlineSize: width, blockSize: height } = entries[0].contentBoxSize[0]\r\n\t\t\tif (width > 0 && height > 0) this.draw(width, height)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\r\n\r\n\t\tthis.update(config, false)\r\n\t}\r\n\r\n\tupdate({ data, title, styles }: Config, redraw = true) {\r\n\t\tthis.styles = {\r\n\t\t\tcolourscheme: styles?.colourscheme ?? [\"black\"],\r\n\t\t\txAxis: {\r\n\t\t\t\theight: styles?.xAxis?.height ?? 30,\r\n\t\t\t\tcolour: styles?.xAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.xAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.xAxis?.labels?.spacing ?? 30,\r\n\t\t\t\t\trotation: styles?.xAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.xAxis?.labels?.colour ?? styles?.xAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.xAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\twidth: styles?.yAxis?.width ?? 30,\r\n\t\t\t\tcolour: styles?.yAxis?.colour ?? \"white\",\r\n\t\t\t\tstrokeWidth: styles?.yAxis?.strokeWidth ?? 1,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tspacing: styles?.yAxis?.labels?.spacing ?? 50,\r\n\t\t\t\t\trotation: styles?.yAxis?.labels?.rotation ?? 0,\r\n\t\t\t\t\tcolour: styles?.yAxis?.labels?.colour ?? styles?.yAxis?.colour ?? \"#FFF8\",\r\n\t\t\t\t\tfontSize: styles?.yAxis?.labels?.fontSize ?? \"0.8em\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tstroke: styles?.grid?.stroke ?? \"#FFF2\",\r\n\t\t\t},\r\n\t\t\tguideline: {\r\n\t\t\t\tstroke: styles?.guideline?.stroke ?? \"#FFF8\",\r\n\t\t\t\twidth: styles?.guideline?.width ?? 1,\r\n\t\t\t\tpoints: {\r\n\t\t\t\t\tr: styles?.guideline?.points?.r ?? 2,\r\n\t\t\t\t\tfill: styles?.guideline?.points?.fill ?? \"white\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlines: {\r\n\t\t\t\twidth: styles?.lines?.width ?? 2,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.data = Object.entries(data)\r\n\t\t\t.sort((a, b) => b[1].at(-1).value.number - a[1].at(-1).value.number)\r\n\t\t\t.map(([name, points], i, arr) => ({ name, points, colour: getColour(this.styles.colourscheme, (i + 1) / (arr.length + 1)) }))\r\n\r\n\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\tthis.yaxis = getAxis(this.data, \"value\")\r\n\t\tthis.legendElem.update(this.data)\r\n\r\n\t\t// TODO: update title\r\n\r\n\t\tthis.updateActiveData(redraw)\r\n\t}\r\n\r\n\tdraw(width: number, height: number) {\r\n\t\tthis.svgElem.innerHTML = \"\"\r\n\r\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height))\r\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\r\n\r\n\t\tthis.guideElem = this.guide(height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.guideElem)\r\n\r\n\t\tthis.selectionElem = this.selectionOverlay(this.styles.yAxis.width, 0, width - this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\tthis.svgElem.appendChild(this.selectionElem)\r\n\t}\r\n\r\n\tselectRange(from: Label, to: Label, redraw = true) {\r\n\t\tthis.xaxis.range = new Range(from, to)\r\n\r\n\t\tif (!this.updateActiveData(false)) {\r\n\t\t\t// selection has no data, reset zoom\r\n\t\t\tthis.xaxis = getAxis(this.data, \"label\")\r\n\t\t\tthis.updateActiveData(false)\r\n\t\t}\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t}\r\n\r\n\tprivate updateActiveData(redraw = true): boolean {\r\n\t\tconst newActiveData = this.data\r\n\t\t\t.filter(({ name }) => !this.legendElem.disabled.has(name))\r\n\t\t\t.map(({ name, colour, points }) => ({\r\n\t\t\t\tname, colour, points: points.filter(({ label }, i, arr) =>\r\n\t\t\t\t\tthis.xaxis.range.contains(label)\r\n\t\t\t\t\t|| (arr[i - 1] && this.xaxis.range.contains(arr[i - 1].label))\r\n\t\t\t\t\t|| (arr[i + 1] && this.xaxis.range.contains(arr[i + 1].label))\r\n\t\t\t\t)\r\n\t\t\t})).filter(({ points }) => points.length > 0)\r\n\r\n\t\tif (newActiveData.length == 0) return false\r\n\t\tthis.activeData = newActiveData\r\n\r\n\t\tthis.yaxis = getAxis(this.activeData, \"value\")\r\n\r\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\r\n\t\treturn true\r\n\t}\r\n\r\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\r\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\r\n\t\t\tthis.xAxis(this.styles.yAxis.width, height - this.styles.xAxis.height, width - this.styles.yAxis.width, this.styles.xAxis.height),\r\n\t\t\tthis.yAxis(0, 0, this.styles.yAxis.width, height - this.styles.xAxis.height)\r\n\t\t)\r\n\t}\r\n\r\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"xaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x - this.styles.yAxis.strokeWidth, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tto: [x + width, y + this.styles.xAxis.strokeWidth / 2],\r\n\t\t\t\tstroke: this.styles.xAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.xAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + step.getPos(this.xaxis.range) * width,\r\n\t\t\t\ty: y + 20,\r\n\t\t\t\ttransform: `rotate(${this.styles.xAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": textAnchorForLabelRotation(this.styles.xAxis.labels.rotation),\r\n\t\t\t\tstyle: `transform-origin: ${transformOriginForLabelRotation(this.styles.xAxis.labels.rotation)}`,\r\n\t\t\t\tfill: this.styles.xAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.xAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"yaxis\" },\r\n\t\t\tline({\r\n\t\t\t\tfrom: [x + width - this.styles.yAxis.strokeWidth / 2, y],\r\n\t\t\t\tto: [x + width - this.styles.yAxis.strokeWidth / 2, y + height],\r\n\t\t\t\tstroke: this.styles.yAxis.colour,\r\n\t\t\t\t\"stroke-width\": this.styles.yAxis.strokeWidth\r\n\t\t\t}),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => text({\r\n\t\t\t\tclass: \"tick-label\",\r\n\t\t\t\tx: x + width - 10,\r\n\t\t\t\ty: y + (1 - step.getPos(this.yaxis.range)) * height + 5,\r\n\t\t\t\ttransform: `rotate(${this.styles.yAxis.labels.rotation})`,\r\n\t\t\t\t\"text-anchor\": \"end\",\r\n\t\t\t\tstyle: \"transform-origin: right\",\r\n\t\t\t\tfill: this.styles.yAxis.labels.colour,\r\n\t\t\t\t\"font-size\": this.styles.yAxis.labels.fontSize,\r\n\t\t\t}, new Text(step.text)))\r\n\t\t)\r\n\r\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\r\n\t\t\t...this.xaxis.getTicks(Math.floor(width / this.styles.xAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-v\",\r\n\t\t\t\tfrom: [step.getPos(this.xaxis.range) * width, 0],\r\n\t\t\t\tto: [step.getPos(this.xaxis.range) * width, height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t\t...this.yaxis.getTicks(Math.floor(height / this.styles.yAxis.labels.spacing)).map(step => line({\r\n\t\t\t\tclass: \"gridline-h\",\r\n\t\t\t\tfrom: [0, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tto: [width, (1 - step.getPos(this.yaxis.range)) * height],\r\n\t\t\t\tstroke: this.styles.grid.stroke\r\n\t\t\t})),\r\n\t\t)\r\n\r\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": this.styles.lines.width },\r\n\t\t\t...this.activeData.map(({ name, colour, points: values }, i) => {\r\n\t\t\t\tconst points = values.map(point => [\r\n\t\t\t\t\tRange.UNIT.clamp(point.label.getPos(this.xaxis.range)) * width,\r\n\t\t\t\t\tRange.UNIT.clamp((1 - point.value.getPos(this.yaxis.range))) * height,\r\n\t\t\t\t] as [number, number])\r\n\t\t\t\treturn polyline({ \"data-name\": name, points, fill: \"none\", stroke: colour })\r\n\t\t\t})\r\n\t\t)\r\n\r\n\tprivate selectionOverlay = (x: number, y: number, width: number, height: number): SVGElement =>\r\n\t\trect({ class: \"selection-overlay\", x: x, y: y, width: 0, height: height, fill: \"#46A4\" })\r\n\r\n\tprivate guide = (height: number): SVGElement =>\r\n\t\tg({ class: \"guide\", transform: `translate(${this.styles.yAxis.width}, 0)` },\r\n\t\t\tline({ class: \"guideline\", from: [0, 0], to: [0, height], stroke: this.styles.guideline.stroke, \"stroke-width\": this.styles.guideline.width }),\r\n\t\t\t...this.activeData.map(() => circle({ class: \"guide-point\", cx: 0, cy: 0, r: this.styles.guideline.points.r, fill: this.styles.guideline.points.fill })),\r\n\t\t)\r\n\r\n\tprivate onMouseDown(event: MouseEvent) {\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.selection = { from: Range.UNIT.clamp(this.canvasCoordRange.normalize(event.clientX - this.svgElem.getBoundingClientRect().left)) }\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseUp(event: MouseEvent) {\r\n\t\tif (this.selection.from != undefined) {\r\n\t\t\tthis.selectRange(\r\n\t\t\t\tnearestLabel(Math.min(this.selection.from, this.selection.to), this.xaxis.range, this.activeData),\r\n\t\t\t\tnearestLabel(Math.max(this.selection.from, this.selection.to), this.xaxis.range, this.activeData)\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.selection = {}\r\n\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t}\r\n\r\n\tprivate onMouseMove(event: MouseEvent) {\r\n\t\tconst rect = this.svgElem.getBoundingClientRect()\r\n\t\tconst t = this.canvasCoordRange.normalize(event.clientX - rect.left)\r\n\r\n\t\tif (this.isWithinGraphArea(event.clientX, event.clientY)) {\r\n\t\t\tthis.handleSelection(t, event.buttons)\r\n\t\t\tthis.handleHover(t, event.clientX, event.clientY, rect)\r\n\t\t} else {\r\n\t\t\tthis.popupElem.hide()\r\n\t\t\tthis.guideElem.classList.remove(\"active\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onMouseLeave(event: MouseEvent) {\r\n\t\tthis.popupElem.hide()\r\n\t\tthis.guideElem.classList.remove(\"active\")\r\n\t}\r\n\r\n\tprivate handleSelection(t: number, buttons: number) {\r\n\t\tif ((buttons & 1) == 1) {\r\n\t\t\t// primary (left) mouse button pressed\r\n\t\t\tthis.selection.to = Range.UNIT.clamp(t)\r\n\t\t} else {\r\n\t\t\tthis.selection = {}\r\n\t\t}\r\n\r\n\t\tif (this.selection.from != undefined && this.selection.to != undefined) {\r\n\t\t\tthis.selectionElem.setAttribute(\"x\", this.canvasCoordRange.lerp(Math.min(this.selection.from, this.selection.to)).toString())\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", (this.canvasCoordRange.lerp(Math.abs(this.selection.to - this.selection.from)) - this.styles.yAxis.width).toString())\r\n\t\t} else {\r\n\t\t\tthis.selectionElem.setAttribute(\"width\", \"0\")\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleHover(t: number, clientX: number, clientY: number, rect: DOMRect) {\r\n\t\tconst points = this.popupElem.update(clientX, clientY, t, this.xaxis.range, this.activeData)\r\n\r\n\t\tthis.guideElem.querySelectorAll(\".guide-point\").forEach((point, i) => {\r\n\t\t\tpoint.setAttribute(\"cy\", ((1 - points[i].value.getPos(this.yaxis.range)) * (rect.height - this.styles.xAxis.height)).toString())\r\n\t\t})\r\n\r\n\t\tthis.guideElem.setAttribute(\"transform\", `translate(${clientX - rect.left}, 0)`)\r\n\t\tthis.guideElem.classList.add(\"active\")\r\n\t}\r\n\r\n\tprivate isWithinGraphArea(clientX: number, clientY: number): boolean {\r\n\t\tconst rect = this.svgElem.getBoundingClientRect()\r\n\t\treturn new Range(rect.left + this.styles.yAxis.width, rect.right).contains(clientX)\r\n\t\t\t&& new Range(rect.top, rect.bottom - this.styles.xAxis.height).contains(clientY)\r\n\t}\r\n}\r\n\r\ncustomElements.define(\"svg-graph\", SVGraph)\r\n\r\nconst textAnchorForLabelRotation = (rotation: number): \"start\" | \"middle\" | \"end\" =>\r\n\trotation < 0 ? \"end\" : rotation > 0 ? \"start\" : \"middle\"\r\n\r\nconst transformOriginForLabelRotation = (rotation: number): \"left\" | \"center\" | \"right\" =>\r\n\trotation < 0 ? \"right\" : rotation > 0 ? \"left\" : \"center\"\r\n\r\nconst getColour = (colourscheme: string[], i: number) => colourscheme[Math.floor(i * colourscheme.length)]\r\n\r\nfunction getAxis<L extends Label>(data: { name: string, colour: string, points: Point[] }[], key: keyof Point): Axis<L> {\r\n\tconst range = new Range(\r\n\t\tminByKey(data.map(({ points }) => minBy(points, p => p[key].number)[key]), \"number\"),\r\n\t\tmaxByKey(data.map(({ points }) => maxBy(points, p => p[key].number)[key]), \"number\"),\r\n\t)\r\n\r\n\treturn new range.min.axisType(range)\r\n}\r\n\r\nconst nearestIdx = (arr: number[], to: number): number =>\r\n\tminByKey(arr.map((x, idx) => [Math.abs(x - to), idx]), 0)[1]\r\n\r\nexport function nearestLabel(t: number, range: Range<Label>, data: { name: string, points: Point[] }[]) {\r\n\tconst nearestLabelsIdx = data.map(({ points }) => nearestIdx(points.map(p => p.label.getPos(range)), t))\r\n\tconst nearestLabels = nearestLabelsIdx.map((closestIdx, i) => data[i].points[closestIdx].label)\r\n\treturn minBy(nearestLabels, l => Math.abs(l.getPos(range) - t))\r\n}\r\n\r\nconst style = `\r\nh1 {\r\n\tmargin: 0 0 0.5em 0;\r\n\tfont-size: 1.5em;\r\n\ttext-align: center;\r\n}\r\n\r\nsvg-popup {\r\n\tposition: absolute;\r\n\tpadding: 0.5em 0.6em;\r\n\tbackground: #2228;\r\n\tborder: 1px solid #FFF1;\r\n\tborder-radius: 10px;\r\n\tbox-shadow: 1px 2px 20px 0px #0008;\r\n\tbackdrop-filter: blur(20px);\r\n}\r\nsvg-popup h3 {\r\n\tmargin: 0 0 0.6em 0;\r\n}\r\nsvg-popup p {\r\n\tmargin: 0.3em 0 0 0;\r\n}\r\nsvg-popup .name {\r\n\tfont-family: monospace;\r\n\tfont-size: 1.2em;\r\n\tfont-weight: bold;\r\n}\r\n\r\nsvg-legend {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\tpadding: 5px 10px;\r\n}\r\nsvg-legend .legend-item {\r\n\tpadding: 0.25em 0.6em;\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 1em;\r\n}\r\nsvg-legend .legend-item:hover {\r\n\tbackground: #FFF1;\r\n\tborder: 1px solid #FFF1;\r\n\tbox-shadow: 1px 2px 5px 0px #0004;\r\n\tbackdrop-filter: blur(20px);\r\n\tcursor: pointer;\r\n}\r\nsvg-legend .legend-item.disabled {\r\n\topacity: 0.5;\r\n\ttext-decoration: line-through;\r\n}\r\n\r\n.swatch {\r\n\tdisplay: inline-block;\r\n\twidth: 0.75em;\r\n\theight: 0.75em;\r\n\tmargin-right: 0.5em;\r\n\tborder-radius: 50%;\r\n}\r\n\r\nsvg-popup:not(.active), .guide:not(.active) {\r\n\tdisplay: none;\r\n}\r\n\t\r\n.xaxis text, .yaxis text {\r\n\ttransform-box: fill-box;\r\n}`\r\n"],"names":["element","name","attrs","children","elem","document","createElement","key","undefined","setAttribute","child","appendChild","div","p","span","minBy","arr","fn","length","reduce","a","b","minByKey","nearestPointForLabel","to","range","map","x","Math","abs","label","getPos","PopupElement","HTMLElement","constructor","super","show","this","classList","add","hide","remove","move","y","style","left","top","update","t","data","nearestLabel","innerHTML","h3","Text","text","nearestPoints","colour","points","point","setValues","value","number","class","customElements","define","ns","createElementNS","g","line","x1","from","y1","x2","y2","num","n","Range","min","max","static","contains","clamp","normalize","lerp","LegendElement","callback","lines","disabled","Set","legendItem","addEventListener","onLegendItemClick","has","delete","toggle","NumberAxis","getTicks","magnitude","pow","floor","log10","interval","Array","keys","NumberLabel","DateAxis","unitOffset","ceil","DateLabel","Date","TimeAxis","TimeLabel","MetricAxis","MetricLabel","unit","toString","axisType","toISOString","split","valueOf","date","d","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCMilliseconds","String","padStart","offset","largestOffset","units","unitsStartOffset","SVGraph","svgElem","popupElem","legendElem","guideElem","selectionElem","styles","xaxis","yaxis","resizeObserver","selection","activeData","canvasCoordRange","yAxis","width","clientWidth","config","shadow","attachShadow","mode","styleElem","textContent","title","h1","updateActiveData","xmlns","svg","height","overflow","fill","event","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","ResizeObserver","entries","inlineSize","blockSize","contentBoxSize","draw","observe","box","redraw","colourscheme","xAxis","strokeWidth","labels","spacing","rotation","fontSize","grid","stroke","guideline","r","Object","sort","at","i","getColour","getAxis","axes","guide","selectionOverlay","selectRange","clientHeight","newActiveData","filter","transform","step","textAnchorForLabelRotation","transformOriginForLabelRotation","values","join","polyline","UNIT","rect","circle","cx","cy","isWithinGraphArea","clientX","clientY","getBoundingClientRect","handleSelection","buttons","handleHover","querySelectorAll","forEach","right","bottom","maxByKey","maxBy","nearestIdx","idx","nearestLabelsIdx","nearestLabels","closestIdx","l"],"mappings":"AAAA,SAASA,EAAQC,EAAcC,EAA+BC,EAAmB,IAChF,MAAMC,EAAOC,SAASC,cAAcL,GACpC,IAAK,MAAMM,KAAOL,OACEM,IAAfN,EAAMK,IAAoBH,EAAKK,aAAaF,EAAKL,EAAMK,IAE5D,IAAK,MAAMG,KAASP,GAAY,GAAIC,EAAKO,YAAYD,GACrD,OAAON,CACR,CASO,MAAMQ,EAAM,CAACV,EAAsB,MAAOC,IAAqBH,EAAQ,MAAOE,EAAOC,GAC/EU,EAAI,CAACX,EAAsB,MAAOC,IAAqBH,EAAQ,IAAKE,EAAOC,GAC3EW,EAAO,CAACZ,EAAsB,MAAOC,IAAqBH,EAAQ,OAAQE,EAAOC,GCXjFY,EAAQ,CAAIC,EAAUC,IAA6BD,EAAIE,OAAS,EAAKF,EAAIG,QAAO,CAACC,EAAGC,IAAMJ,EAAGG,GAAKH,EAAGI,GAAKD,EAAIC,SAAKb,EACnHc,EAAW,CAAIN,EAAUT,IAAqBS,EAAIE,OAAS,EAAKF,EAAIG,QAAO,CAACC,EAAGC,IAAMD,EAAEb,GAAOc,EAAEd,GAAOa,EAAIC,SAAKb,ECFvHe,EAAuB,CAACP,EAAcQ,EAAWC,IACtDH,EAASN,EAAIU,KAAIC,GAAK,CAACA,EAAGC,KAAKC,IAAIF,EAAEG,MAAMC,OAAON,GAASD,EAAGO,OAAON,OAAgC,GAAG,GAEpF,MAAAO,UAAqBC,YACzC,WAAAC,GACCC,QAGD,IAAAC,GAASC,KAAKC,UAAUC,IAAI,SAAS,CAErC,IAAAC,GAASH,KAAKC,UAAUG,OAAO,SAAS,CAExC,IAAAC,CAAKf,EAAWgB,GACfN,KAAKO,MAAMC,KAAO,GAAGlB,EAAI,OACzBU,KAAKO,MAAME,IAAM,GAAGH,MAGrB,MAAAI,CAAOpB,EAAWgB,EAAWK,EAAWvB,EAAqBwB,GAC5DZ,KAAKK,KAAKf,EAAGgB,GAEb,MAAMb,EAAQoB,EAAaF,EAAGvB,EAAOwB,GAErCZ,KAAKc,UAAY,GACjBd,KAAK1B,YFRW,EAACT,EAAsB,MAAOC,IAAqBH,EAAQ,KAAME,EAAOC,GEQvEiD,CAAG,CAAE,EAAE,IAAIC,KAAKvB,EAAMwB,QAEvC,MAAMC,EAAgBN,EAAKvB,KAAI,EAAGzB,OAAMuD,SAAQC,aAAQ,CAAQxD,OAAMuD,SAAQE,MAAOnC,EAAqBkC,EAAQ3B,EAAOL,OAKzH,OAJAY,KAAKsB,UAAUJ,GAEflB,KAAKD,OAEEmB,EAAc7B,KAAIC,GAAKA,EAAE+B,QAGzB,SAAAC,CAAUF,GACjB,IAAK,MAAMxD,KAAEA,EAAIuD,OAAEA,EAAQE,OAAOE,MAAEA,MAAaH,EACnCjD,MAAToD,GAAsC,GAAhBA,EAAMC,QAAaxB,KAAK1B,YAAYE,EAAE,CAAE,EACjED,EAAI,CAAEkD,MAAO,SAAUlB,MAAO,qBAAqBY,MACnD1C,EAAK,CAAEgD,MAAO,QAAU,IAAIT,KAAKpD,IACjC,IAAIoD,KAAK,MACTvC,EAAK,CAAEgD,MAAO,SAAW,IAAIT,KAAKO,EAAMN,UAM5CS,eAAeC,OAAO,YAAahC,GCnDnC,MAAMiC,EAAK,6BAEX,SAASjE,EAAQC,EAAcC,EAA+BC,EAAmB,IAChF,MAAMC,EAAOC,SAAS6D,gBAAgBD,EAAIhE,GAC1C,IAAK,MAAMM,KAAOL,OACEM,IAAfN,EAAMK,IAAoBH,EAAKK,aAAaF,EAAKL,EAAMK,IAE5D,IAAK,MAAMG,KAASP,GAAY,GAAIC,EAAKO,YAAYD,GACrD,OAAON,CACR,CAgBO,MAMM+D,EAAI,CAACjE,EAAsB,MAAOC,IAAqBH,EAAQ,IAAKE,EAAOC,GAE3EiE,EAAO,CAAClE,KAA2FC,IAC/GH,EAAQ,OAAQ,IAAKE,EAAOmE,GAAInE,EAAMoE,KAAK,GAAIC,GAAIrE,EAAMoE,KAAK,GAAIE,GAAItE,EAAMsB,GAAG,GAAIiD,GAAIvE,EAAMsB,GAAG,GAAI8C,UAAM9D,EAAWgB,QAAIhB,GAAaL,GAQ1HmD,EAAO,CAACpD,KAA4MC,IAChOH,EAAQ,OAAQE,EAAOC,GC3ClBuE,EAAOC,GAAgD,iBAANA,EAAiBA,EAAIA,EAAEd,OAEhE,MAAOe,EACDC,IAAeC,IAAlC,WAAA5C,CAAmB2C,EAAeC,GAAfzC,KAAGwC,IAAHA,EAAexC,KAAGyC,IAAHA,EAKlCC,YAAc,IAAIH,EAAM,EAAG,GAK3B,QAAI9D,GAAS,OAAO4D,EAAIrC,KAAKyC,KAAOJ,EAAIrC,KAAKwC,IAAI,CAKjDG,SAAYpB,GAAsBc,EAAIrC,KAAKwC,KAAOH,EAAId,IAAUc,EAAId,GAASc,EAAIrC,KAAKyC,KAKtFG,MAASrB,GAA0BhC,KAAKkD,IAAIJ,EAAIrC,KAAKwC,KAAMjD,KAAKiD,IAAIjB,EAAOc,EAAIrC,KAAKyC,OAKpFI,UAAatB,IAA2BA,EAAQc,EAAIrC,KAAKwC,MAASxC,KAAS,KAK3E8C,KAAQnC,GAAsB0B,EAAIrC,KAAKwC,KAAO7B,EAAIX,KAAKvB,KC/BnC,MAAAsE,UAAsBnD,YAItBoD,SAHpBC,MACAC,SAAwB,IAAIC,IAE5B,WAAAtD,CAAoBmD,GACnBlD,QADmBE,KAAQgD,SAARA,EAIpB,MAAAtC,CAAOE,GACNZ,KAAKiD,MAAQrC,EACbZ,KAAKc,UAAY,GACjB,IAAK,MAAMlD,KAAEA,EAAIuD,OAAEA,KAAYP,EAAM,CACpC,MAAMwC,EAAa3E,EAAK,CAAEgD,MAAO,eAChClD,EAAI,CAAEkD,MAAO,SAAUlB,MAAO,qBAAqBY,MACnD1C,EAAK,CAAEgD,MAAO,QAAU,IAAIT,KAAKpD,KAElCoC,KAAK1B,YAAY8E,GACjBA,EAAWC,iBAAiB,SAAS,IAAMrD,KAAKsD,kBAAkB1F,EAAMwF,MAIlE,iBAAAE,CAAkB1F,EAAcwF,GACnCpD,KAAKkD,SAASK,IAAI3F,GAAOoC,KAAKkD,SAASM,OAAO5F,GAC7CoC,KAAKkD,SAAShD,IAAItC,GACvBwF,EAAWnD,UAAUwD,OAAO,WAAYzD,KAAKkD,SAASK,IAAI3F,IAC1DoC,KAAKgD,YAIPtB,eAAeC,OAAO,aAAcoB,SCvBvBW,EACOtE,MAAnB,WAAAS,CAAmBT,GAAAY,KAAKZ,MAALA,EAEnB,QAAAuE,CAASrB,GACR,MAAMsB,EAAYrE,KAAKsE,IAAI,GAAItE,KAAKuE,MAAMvE,KAAKwE,MAAM/D,KAAKZ,MAAMX,KAAO6D,IAAM,GACvE0B,EAAWzE,KAAKuE,MAAM9D,KAAKZ,MAAMX,KAAO6D,EAAIsB,GAAaA,EAE/D,MAAO,IAAIK,MAAM1E,KAAKuE,MAAM9D,KAAKZ,MAAMX,KAAOuF,GAAY,GAAGE,OAAO7E,KAAIC,GACvE,IAAI6E,EAAY5E,KAAKuE,MAAMxE,EAAI0E,EAAWhE,KAAKZ,MAAMoD,IAAIhB,mBAK/C4C,EACOhF,MAAnB,WAAAS,CAAmBT,GAAAY,KAAKZ,MAALA,EAEnB,QAAAuE,CAASrB,GAER,MAAM7D,EAAOuB,KAAKZ,MAAMX,KAAO,GAAK,GAAK,GAAK,IAExC4F,EAAc5F,EAAO,GAAK6D,EAC7B,GACC7D,EAAO,EAAI6D,EACX,EACA,EAEE0B,EAAWzE,KAAK+E,KAAK7F,EAAO4F,EAAa/B,GAAK+B,EAEpD,MAAO,IAAIJ,MAAM1E,KAAKuE,MAAMrF,EAAOuF,GAAY,GAAGE,OAAO7E,KAAIC,GAAK,IAAIiF,EAAU,IAAIC,KAAKlF,EAAI0E,EAAW,GAAK,GAAK,GAAK,IAAOhE,KAAKZ,MAAMoD,IAAIhB,mBAIlIiD,EACOrF,MAAnB,WAAAS,CAAmBT,GAAAY,KAAKZ,MAALA,EAEnB,QAAAuE,CAASrB,GACR,MAAM+B,EAAcrE,KAAKZ,MAAMX,KAAO,GAAK,GAAK,GAAK6D,EAClD,MACCtC,KAAKZ,MAAMX,KAAO,GAAK,GAAK6D,EAC5B,KACCtC,KAAKZ,MAAMX,KAAO,GAAK6D,EACvB,GACA,EAEC0B,EAAWzE,KAAK+E,KAAKtE,KAAKZ,MAAMX,KAAO4F,EAAa/B,GAAK+B,EAE/D,MAAO,IAAIJ,MAAM1E,KAAKuE,MAAM9D,KAAKZ,MAAMX,KAAOuF,GAAY,GAAGE,OAAO7E,KAAIC,GAAK,IAAIoF,EAAUpF,EAAI0E,EAAWhE,KAAKZ,MAAMoD,IAAIhB,kBAI9GmD,EACOvF,MAAnB,WAAAS,CAAmBT,GAAAY,KAAKZ,MAALA,EAEnBuE,SAAYrB,GACX,IAAI2B,MAAM3B,GAAG4B,OAAO7E,KAAIC,GAAK,IAAIsF,EAChCrF,KAAKuE,MAAM9D,KAAKZ,MAAM0D,KAAKxD,GAAKgD,EAAI,KACpCtC,KAAKZ,MAAMoD,IAAIqC,eCtDLV,EACO5C,MAAnB,WAAA1B,CAAmB0B,GAAAvB,KAAKuB,MAALA,EAEnB,QAAIN,GAAS,OAAOjB,KAAKuB,MAAMuD,UAAU,CACzC,UAAItD,GAAW,OAAOxB,KAAKuB,KAAK,CAChC,YAAIwD,GAAa,OAAOrB,CAAU,CAElChE,OAAUN,GAAwBA,EAAMyD,UAAU7C,KAAKwB,cAG3C+C,EACOhD,MAAnB,WAAA1B,CAAmB0B,GAAAvB,KAAKuB,MAALA,EAEnB,QAAIN,GAAS,OAAOjB,KAAKuB,MAAMyD,cAAcC,MAAM,KAAK,EAAE,CAC1D,UAAIzD,GAAW,OAAOxB,KAAKuB,MAAM2D,SAAS,CAC1C,YAAIH,GAAa,OAAOX,CAAQ,CAEhC1E,OAAUN,GAAwBA,EAAMyD,UAAU7C,KAAKwB,cAG3CkD,EACOnD,MAAnB,WAAA1B,CAAmB0B,GAAAvB,KAAKuB,MAALA,EAEnB,QAAIN,GACH,MAAMkE,EAAO,IAAIX,KAAkB,IAAbxE,KAAKuB,OACrB6D,EAAI7F,KAAKuE,MAAM9D,KAAKuB,MAAQ,GAAK,GAAK,IACtC8D,EAAIF,EAAKG,cACTC,EAAIJ,EAAKK,gBACTC,EAAIN,EAAKO,gBAAkBP,EAAKQ,qBAAuB,IAC7D,OAAIN,EAAI,GAAKD,EAAI,EACP,GAALG,EAAe,GAAGF,EAAQ,GAAJD,MACd,GAAGC,EAAQ,GAAJD,KAAUQ,OAAOL,GAAGM,SAAS,EAAG,SACzCN,EAAI,EACP,GAAGA,KAAKK,OAAOrG,KAAKuE,MAAM2B,IAAII,SAAS,EAAG,OAE1C,GAAGJ,MAGZ,UAAIjE,GAAW,OAAOxB,KAAKuB,KAAK,CAChC,YAAIwD,GAAa,OAAON,CAAQ,CAEhC/E,OAAUN,GAAwBA,EAAMyD,UAAU7C,KAAKwB,cAG3CoD,EACOrD,MAAsBsD,KAAzC,WAAAhF,CAAmB0B,EAAsBsD,GAAtB7E,KAAKuB,MAALA,EAAsBvB,KAAI6E,KAAJA,EAEzC,QAAI5D,GACH,MAAM6E,EAASlB,EAAYmB,cAAc/F,KAAKuB,OAC9C,MAAO,GAAGhC,KAAKuE,MAAM9D,KAAKuB,MAAQhC,KAAKsE,IAAI,GAAa,EAATiC,OAAgBlB,EAAYoB,MAAMF,EAASlB,EAAYqB,oBAAoBjG,KAAK6E,OAEhI,UAAIrD,GAAW,OAAOxB,KAAKuB,KAAK,CAChC,YAAIwD,GAAa,OAAOJ,CAAU,CAElCjF,OAAUN,GAAwBA,EAAMyD,UAAU7C,KAAKwB,QAEvDkB,aAAe,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtEA,wBAA0B,EAE1BA,qBAAwBnB,GACb,GAATA,EAAc,EAAIhC,KAAKuE,MAAMvE,KAAKwE,MAAMxC,GAAS,GCpB/B,MAAA2E,UAAgBtG,YACpCuG,QACAC,UACAC,WACAC,UACAC,cAEA3F,KACA4F,OACAC,MACAC,MAEQC,eACAC,UAA4C,CAAE,EAC9CC,WAER,oBAAIC,GAAqB,OAAO,IAAIvE,EAAMvC,KAAKwG,OAAOO,MAAMC,MAAOhH,KAAKmG,QAAQc,YAAY,CAE5F,WAAApH,CAAYqH,GACXpH,QAEA,MAAMqH,EAASnH,KAAKoH,aAAa,CAAEC,KAAM,SAEnCC,EAAYtJ,SAASC,cAAc,SACzCqJ,EAAUC,YAAchH,EACxB4G,EAAO7I,YAAYgJ,GAECnJ,MAAhB+I,EAAOM,OAAoBL,EAAO7I,YR1DtB,EAACT,EAAsB,MAAOC,IAAqBH,EAAQ,KAAME,EAAOC,GQ0DtC2J,CAAG,CAAEhG,MAAO,SAAW,IAAIT,KAAKkG,EAAOM,SAEzFxH,KAAKqG,WAAa,IAAItD,GAAc,IAAM/C,KAAK0H,qBAC/CP,EAAO7I,YAAY0B,KAAKqG,YAExBrG,KAAKmG,QLzDY,EAACtI,KAA+HC,IAClJH,EAAQ,MAAO,IAAKE,EAAO8J,MAAO/F,GAAM9D,GKwDxB8J,CAAI,CAAEZ,MAAO,OAAQa,OAAQ,OAAQC,SAAU,UAAWC,KAAM,UAC/E/H,KAAKmG,QAAQ9C,iBAAiB,aAAc2E,GAAsBhI,KAAKiI,YAAYD,KACnFhI,KAAKmG,QAAQ9C,iBAAiB,WAAY2E,GAAsBhI,KAAKkI,UAAUF,KAC/EhI,KAAKmG,QAAQ9C,iBAAiB,aAAc2E,GAAsBhI,KAAKmI,YAAYH,KACnFhI,KAAKmG,QAAQ9C,iBAAiB,cAAe2E,GAAsBhI,KAAKoI,aAAaJ,KACrFb,EAAO7I,YAAY0B,KAAKmG,SAExBnG,KAAKoG,UAAY,IAAIzG,EACrBwH,EAAO7I,YAAY0B,KAAKoG,WAExBpG,KAAK2G,eAAiB,IAAI0B,gBAAgBC,IACzC,MAAQC,WAAYvB,EAAOwB,UAAWX,GAAWS,EAAQ,GAAGG,eAAe,GACvEzB,EAAQ,GAAKa,EAAS,GAAG7H,KAAK0I,KAAK1B,EAAOa,EAAO,IAEtD7H,KAAK2G,eAAegC,QAAQ3I,KAAKmG,QAAS,CAAEyC,IAAK,gBAEjD5I,KAAKU,OAAOwG,GAAQ,GAGrB,MAAAxG,EAAOE,KAAEA,EAAI4G,MAAEA,EAAKhB,OAAEA,GAAkBqC,GAAS,GAChD7I,KAAKwG,OAAS,CACbsC,aAActC,GAAQsC,cAAgB,CAAC,SACvCC,MAAO,CACNlB,OAAQrB,GAAQuC,OAAOlB,QAAU,GACjC1G,OAAQqF,GAAQuC,OAAO5H,QAAU,QACjC6H,YAAaxC,GAAQuC,OAAOC,aAAe,EAC3CC,OAAQ,CACPC,QAAS1C,GAAQuC,OAAOE,QAAQC,SAAW,GAC3CC,SAAU3C,GAAQuC,OAAOE,QAAQE,UAAY,EAC7ChI,OAAQqF,GAAQuC,OAAOE,QAAQ9H,QAAUqF,GAAQuC,OAAO5H,QAAU,QAClEiI,SAAU5C,GAAQuC,OAAOE,QAAQG,UAAY,UAG/CrC,MAAO,CACNC,MAAOR,GAAQO,OAAOC,OAAS,GAC/B7F,OAAQqF,GAAQO,OAAO5F,QAAU,QACjC6H,YAAaxC,GAAQO,OAAOiC,aAAe,EAC3CC,OAAQ,CACPC,QAAS1C,GAAQO,OAAOkC,QAAQC,SAAW,GAC3CC,SAAU3C,GAAQO,OAAOkC,QAAQE,UAAY,EAC7ChI,OAAQqF,GAAQO,OAAOkC,QAAQ9H,QAAUqF,GAAQO,OAAO5F,QAAU,QAClEiI,SAAU5C,GAAQO,OAAOkC,QAAQG,UAAY,UAG/CC,KAAM,CACLC,OAAQ9C,GAAQ6C,MAAMC,QAAU,SAEjCC,UAAW,CACVD,OAAQ9C,GAAQ+C,WAAWD,QAAU,QACrCtC,MAAOR,GAAQ+C,WAAWvC,OAAS,EACnC5F,OAAQ,CACPoI,EAAGhD,GAAQ+C,WAAWnI,QAAQoI,GAAK,EACnCzB,KAAMvB,GAAQ+C,WAAWnI,QAAQ2G,MAAQ,UAG3C9E,MAAO,CACN+D,MAAOR,GAAQvD,OAAO+D,OAAS,IAIjChH,KAAKY,KAAO6I,OAAOnB,QAAQ1H,GACzB8I,MAAK,CAAC3K,EAAGC,IAAMA,EAAE,GAAG2K,IAAI,GAAGpI,MAAMC,OAASzC,EAAE,GAAG4K,IAAI,GAAGpI,MAAMC,SAC5DnC,KAAI,EAAEzB,EAAMwD,GAASwI,EAAGjL,MAAWf,OAAMwD,SAAQD,OAAQ0I,EAAU7J,KAAKwG,OAAOsC,cAAec,EAAI,IAAMjL,EAAIE,OAAS,QAEvHmB,KAAKyG,MAAQqD,EAAQ9J,KAAKY,KAAM,SAChCZ,KAAK0G,MAAQoD,EAAQ9J,KAAKY,KAAM,SAChCZ,KAAKqG,WAAW3F,OAAOV,KAAKY,MAI5BZ,KAAK0H,iBAAiBmB,GAGvB,IAAAH,CAAK1B,EAAea,GACnB7H,KAAKmG,QAAQrF,UAAY,GAEzBd,KAAKmG,QAAQ7H,YAAY0B,KAAKqJ,KAAKrJ,KAAKwG,OAAOO,MAAMC,MAAO,EAAGA,EAAQhH,KAAKwG,OAAOO,MAAMC,MAAOa,EAAS7H,KAAKwG,OAAOuC,MAAMlB,SAC3H7H,KAAKmG,QAAQ7H,YAAY0B,KAAKiD,MAAMjD,KAAKwG,OAAOO,MAAMC,MAAO,EAAGA,EAAQhH,KAAKwG,OAAOO,MAAMC,MAAOa,EAAS7H,KAAKwG,OAAOuC,MAAMlB,SAC5H7H,KAAKmG,QAAQ7H,YAAY0B,KAAK+J,KAAK,EAAG,EAAG/C,EAAOa,IAEhD7H,KAAKsG,UAAYtG,KAAKgK,MAAMnC,EAAS7H,KAAKwG,OAAOuC,MAAMlB,QACvD7H,KAAKmG,QAAQ7H,YAAY0B,KAAKsG,WAE9BtG,KAAKuG,cAAgBvG,KAAKiK,iBAAiBjK,KAAKwG,OAAOO,MAAMC,MAAO,EAAGA,EAAQhH,KAAKwG,OAAOO,MAAMC,MAAOa,EAAS7H,KAAKwG,OAAOuC,MAAMlB,QACnI7H,KAAKmG,QAAQ7H,YAAY0B,KAAKuG,eAG/B,WAAA2D,CAAYjI,EAAa9C,EAAW0J,GAAS,GAC5C7I,KAAKyG,MAAMrH,MAAQ,IAAImD,EAAMN,EAAM9C,GAE9Ba,KAAK0H,kBAAiB,KAE1B1H,KAAKyG,MAAQqD,EAAQ9J,KAAKY,KAAM,SAChCZ,KAAK0H,kBAAiB,IAGnBmB,GAAQ7I,KAAK0I,KAAK1I,KAAKmG,QAAQc,YAAajH,KAAKmG,QAAQgE,cAGtD,gBAAAzC,CAAiBmB,GAAS,GACjC,MAAMuB,EAAgBpK,KAAKY,KACzByJ,QAAO,EAAGzM,WAAYoC,KAAKqG,WAAWnD,SAASK,IAAI3F,KACnDyB,KAAI,EAAGzB,OAAMuD,SAAQC,aAAc,CACnCxD,OAAMuD,SAAQC,OAAQA,EAAOiJ,QAAO,EAAG5K,SAASmK,EAAGjL,IAClDqB,KAAKyG,MAAMrH,MAAMuD,SAASlD,IACtBd,EAAIiL,EAAI,IAAM5J,KAAKyG,MAAMrH,MAAMuD,SAAShE,EAAIiL,EAAI,GAAGnK,QACnDd,EAAIiL,EAAI,IAAM5J,KAAKyG,MAAMrH,MAAMuD,SAAShE,EAAIiL,EAAI,GAAGnK,aAErD4K,QAAO,EAAGjJ,YAAaA,EAAOvC,OAAS,IAE5C,OAA4B,GAAxBuL,EAAcvL,SAClBmB,KAAK6G,WAAauD,EAElBpK,KAAK0G,MAAQoD,EAAQ9J,KAAK6G,WAAY,SAElCgC,GAAQ7I,KAAK0I,KAAK1I,KAAKmG,QAAQc,YAAajH,KAAKmG,QAAQgE,eACtD,GAGA,IAAAJ,CAAKzK,EAAWgB,EAAW0G,EAAea,GACjD,OAAO/F,EAAE,CAAEL,MAAO,OAAQ6I,UAAW,aAAahL,MAAMgB,MACvDN,KAAK+I,MAAM/I,KAAKwG,OAAOO,MAAMC,MAAOa,EAAS7H,KAAKwG,OAAOuC,MAAMlB,OAAQb,EAAQhH,KAAKwG,OAAOO,MAAMC,MAAOhH,KAAKwG,OAAOuC,MAAMlB,QAC1H7H,KAAK+G,MAAM,EAAG,EAAG/G,KAAKwG,OAAOO,MAAMC,MAAOa,EAAS7H,KAAKwG,OAAOuC,MAAMlB,SAI/DkB,MAAQ,CAACzJ,EAAWgB,EAAW0G,EAAea,IACrD/F,EAAE,CAAEL,MAAO,SACVM,EAAK,CACJE,KAAM,CAAC3C,EAAIU,KAAKwG,OAAOO,MAAMiC,YAAa1I,EAAIN,KAAKwG,OAAOuC,MAAMC,YAAc,GAC9E7J,GAAI,CAACG,EAAI0H,EAAO1G,EAAIN,KAAKwG,OAAOuC,MAAMC,YAAc,GACpDM,OAAQtJ,KAAKwG,OAAOuC,MAAM5H,OAC1B,eAAgBnB,KAAKwG,OAAOuC,MAAMC,iBAEhChJ,KAAKyG,MAAM9C,SAASpE,KAAKuE,MAAMkD,EAAQhH,KAAKwG,OAAOuC,MAAME,OAAOC,UAAU7J,KAAIkL,GAAQtJ,EAAK,CAC7FQ,MAAO,aACPnC,EAAGA,EAAIiL,EAAK7K,OAAOM,KAAKyG,MAAMrH,OAAS4H,EACvC1G,EAAGA,EAAI,GACPgK,UAAW,UAAUtK,KAAKwG,OAAOuC,MAAME,OAAOE,YAC9C,cAAeqB,EAA2BxK,KAAKwG,OAAOuC,MAAME,OAAOE,UACnE5I,MAAO,qBAAqBkK,EAAgCzK,KAAKwG,OAAOuC,MAAME,OAAOE,YACrFpB,KAAM/H,KAAKwG,OAAOuC,MAAME,OAAO9H,OAC/B,YAAanB,KAAKwG,OAAOuC,MAAME,OAAOG,UACpC,IAAIpI,KAAKuJ,EAAKtJ,UAGX8F,MAAQ,CAACzH,EAAWgB,EAAW0G,EAAea,IACrD/F,EAAE,CAAEL,MAAO,SACVM,EAAK,CACJE,KAAM,CAAC3C,EAAI0H,EAAQhH,KAAKwG,OAAOO,MAAMiC,YAAc,EAAG1I,GACtDnB,GAAI,CAACG,EAAI0H,EAAQhH,KAAKwG,OAAOO,MAAMiC,YAAc,EAAG1I,EAAIuH,GACxDyB,OAAQtJ,KAAKwG,OAAOO,MAAM5F,OAC1B,eAAgBnB,KAAKwG,OAAOO,MAAMiC,iBAEhChJ,KAAK0G,MAAM/C,SAASpE,KAAKuE,MAAM+D,EAAS7H,KAAKwG,OAAOO,MAAMkC,OAAOC,UAAU7J,KAAIkL,GAAQtJ,EAAK,CAC9FQ,MAAO,aACPnC,EAAGA,EAAI0H,EAAQ,GACf1G,EAAGA,GAAK,EAAIiK,EAAK7K,OAAOM,KAAK0G,MAAMtH,QAAUyI,EAAS,EACtDyC,UAAW,UAAUtK,KAAKwG,OAAOO,MAAMkC,OAAOE,YAC9C,cAAe,MACf5I,MAAO,0BACPwH,KAAM/H,KAAKwG,OAAOO,MAAMkC,OAAO9H,OAC/B,YAAanB,KAAKwG,OAAOO,MAAMkC,OAAOG,UACpC,IAAIpI,KAAKuJ,EAAKtJ,UAGXoI,KAAO,CAAC/J,EAAWgB,EAAW0G,EAAea,IACpD/F,EAAE,CAAEL,MAAO,OAAQ6I,UAAW,aAAahL,MAAMgB,SAC7CN,KAAKyG,MAAM9C,SAASpE,KAAKuE,MAAMkD,EAAQhH,KAAKwG,OAAOuC,MAAME,OAAOC,UAAU7J,KAAIkL,GAAQxI,EAAK,CAC7FN,MAAO,aACPQ,KAAM,CAACsI,EAAK7K,OAAOM,KAAKyG,MAAMrH,OAAS4H,EAAO,GAC9C7H,GAAI,CAACoL,EAAK7K,OAAOM,KAAKyG,MAAMrH,OAAS4H,EAAOa,GAC5CyB,OAAQtJ,KAAKwG,OAAO6C,KAAKC,cAEvBtJ,KAAK0G,MAAM/C,SAASpE,KAAKuE,MAAM+D,EAAS7H,KAAKwG,OAAOO,MAAMkC,OAAOC,UAAU7J,KAAIkL,GAAQxI,EAAK,CAC9FN,MAAO,aACPQ,KAAM,CAAC,GAAI,EAAIsI,EAAK7K,OAAOM,KAAK0G,MAAMtH,QAAUyI,GAChD1I,GAAI,CAAC6H,GAAQ,EAAIuD,EAAK7K,OAAOM,KAAK0G,MAAMtH,QAAUyI,GAClDyB,OAAQtJ,KAAKwG,OAAO6C,KAAKC,YAIpBrG,MAAQ,CAAC3D,EAAWgB,EAAW0G,EAAea,IACrD/F,EAAE,CAAEL,MAAO,QAAS6I,UAAW,aAAahL,MAAMgB,KAAM,eAAgBN,KAAKwG,OAAOvD,MAAM+D,UACtFhH,KAAK6G,WAAWxH,KAAI,EAAGzB,OAAMuD,SAAQC,OAAQsJ,GAAUd,ILtOrC,EAAC/L,KAAyDC,IACjFH,EAAQ,WAAY,IAAKE,EAAOuD,OAAQvD,EAAMuD,OAAO/B,KAAI,EAAEC,EAAGgB,KAAO,GAAGhB,KAAKgB,MAAKqK,KAAK,MAAQ7M,GK0OrF8M,CAAS,CAAE,YAAahN,EAAMwD,OAJtBsJ,EAAOrL,KAAIgC,GAAS,CAClCkB,EAAMsI,KAAKjI,MAAMvB,EAAM5B,MAAMC,OAAOM,KAAKyG,MAAMrH,QAAU4H,EACzDzE,EAAMsI,KAAKjI,MAAO,EAAIvB,EAAME,MAAM7B,OAAOM,KAAK0G,MAAMtH,QAAWyI,KAEnBE,KAAM,OAAQuB,OAAQnI,OAI9D8I,iBAAmB,CAAC3K,EAAWgB,EAAW0G,EAAea,IL5O9C,EAAChK,KAAsIC,IAC1JH,EAAQ,OAAQE,EAAOC,GK4OtBgN,CAAK,CAAErJ,MAAO,oBAAqBnC,EAAGA,EAAGgB,EAAGA,EAAG0G,MAAO,EAAGa,OAAQA,EAAQE,KAAM,UAExEiC,MAASnC,GAChB/F,EAAE,CAAEL,MAAO,QAAS6I,UAAW,aAAatK,KAAKwG,OAAOO,MAAMC,aAC7DjF,EAAK,CAAEN,MAAO,YAAaQ,KAAM,CAAC,EAAG,GAAI9C,GAAI,CAAC,EAAG0I,GAASyB,OAAQtJ,KAAKwG,OAAO+C,UAAUD,OAAQ,eAAgBtJ,KAAKwG,OAAO+C,UAAUvC,WACnIhH,KAAK6G,WAAWxH,KAAI,IL7PJ,EAACxB,KAA4EC,IAClGH,EAAQ,SAAUE,EAAOC,GK4PMiN,CAAO,CAAEtJ,MAAO,cAAeuJ,GAAI,EAAGC,GAAI,EAAGzB,EAAGxJ,KAAKwG,OAAO+C,UAAUnI,OAAOoI,EAAGzB,KAAM/H,KAAKwG,OAAO+C,UAAUnI,OAAO2G,UAG1I,WAAAE,CAAYD,GACfhI,KAAKkL,kBAAkBlD,EAAMmD,QAASnD,EAAMoD,WAC/CpL,KAAK4G,UAAY,CAAE3E,KAAMM,EAAMsI,KAAKjI,MAAM5C,KAAK8G,iBAAiBjE,UAAUmF,EAAMmD,QAAUnL,KAAKmG,QAAQkF,wBAAwB7K,SAIzH,SAAA0H,CAAUF,GACU7J,MAAvB6B,KAAK4G,UAAU3E,MAClBjC,KAAKkK,YACJrJ,EAAatB,KAAKiD,IAAIxC,KAAK4G,UAAU3E,KAAMjC,KAAK4G,UAAUzH,IAAKa,KAAKyG,MAAMrH,MAAOY,KAAK6G,YACtFhG,EAAatB,KAAKkD,IAAIzC,KAAK4G,UAAU3E,KAAMjC,KAAK4G,UAAUzH,IAAKa,KAAKyG,MAAMrH,MAAOY,KAAK6G,aAIxF7G,KAAK4G,UAAY,CAAE,EACnB5G,KAAKuG,cAAcnI,aAAa,QAAS,KAGlC,WAAA+J,CAAYH,GACnB,MAAM8C,EAAO9K,KAAKmG,QAAQkF,wBACpB1K,EAAIX,KAAK8G,iBAAiBjE,UAAUmF,EAAMmD,QAAUL,EAAKtK,MAE3DR,KAAKkL,kBAAkBlD,EAAMmD,QAASnD,EAAMoD,UAC/CpL,KAAKsL,gBAAgB3K,EAAGqH,EAAMuD,SAC9BvL,KAAKwL,YAAY7K,EAAGqH,EAAMmD,QAASnD,EAAMoD,QAASN,KAElD9K,KAAKoG,UAAUjG,OACfH,KAAKsG,UAAUrG,UAAUG,OAAO,WAI1B,YAAAgI,CAAaJ,GACpBhI,KAAKoG,UAAUjG,OACfH,KAAKsG,UAAUrG,UAAUG,OAAO,UAGzB,eAAAkL,CAAgB3K,EAAW4K,GACb,GAAhBA,EAIJvL,KAAK4G,UAAY,CAAE,EAFnB5G,KAAK4G,UAAUzH,GAAKoD,EAAMsI,KAAKjI,MAAMjC,GAKXxC,MAAvB6B,KAAK4G,UAAU3E,MAA0C9D,MAArB6B,KAAK4G,UAAUzH,IACtDa,KAAKuG,cAAcnI,aAAa,IAAK4B,KAAK8G,iBAAiBhE,KAAKvD,KAAKiD,IAAIxC,KAAK4G,UAAU3E,KAAMjC,KAAK4G,UAAUzH,KAAK2F,YAClH9E,KAAKuG,cAAcnI,aAAa,SAAU4B,KAAK8G,iBAAiBhE,KAAKvD,KAAKC,IAAIQ,KAAK4G,UAAUzH,GAAKa,KAAK4G,UAAU3E,OAASjC,KAAKwG,OAAOO,MAAMC,OAAOlC,aAEnJ9E,KAAKuG,cAAcnI,aAAa,QAAS,KAInC,WAAAoN,CAAY7K,EAAWwK,EAAiBC,EAAiBN,GAChE,MAAM1J,EAASpB,KAAKoG,UAAU1F,OAAOyK,EAASC,EAASzK,EAAGX,KAAKyG,MAAMrH,MAAOY,KAAK6G,YAEjF7G,KAAKsG,UAAUmF,iBAAiB,gBAAgBC,SAAQ,CAACrK,EAAOuI,KAC/DvI,EAAMjD,aAAa,OAAQ,EAAIgD,EAAOwI,GAAGrI,MAAM7B,OAAOM,KAAK0G,MAAMtH,SAAW0L,EAAKjD,OAAS7H,KAAKwG,OAAOuC,MAAMlB,SAAS/C,WAAW,IAGjI9E,KAAKsG,UAAUlI,aAAa,YAAa,aAAa+M,EAAUL,EAAKtK,YACrER,KAAKsG,UAAUrG,UAAUC,IAAI,UAGtB,iBAAAgL,CAAkBC,EAAiBC,GAC1C,MAAMN,EAAO9K,KAAKmG,QAAQkF,wBAC1B,OAAO,IAAI9I,EAAMuI,EAAKtK,KAAOR,KAAKwG,OAAOO,MAAMC,MAAO8D,EAAKa,OAAOhJ,SAASwI,IACvE,IAAI5I,EAAMuI,EAAKrK,IAAKqK,EAAKc,OAAS5L,KAAKwG,OAAOuC,MAAMlB,QAAQlF,SAASyI,IAI3E1J,eAAeC,OAAO,YAAauE,GAEnC,MAAMsE,EAA8BrB,GACnCA,EAAW,EAAI,MAAQA,EAAW,EAAI,QAAU,SAE3CsB,EAAmCtB,GACxCA,EAAW,EAAI,QAAUA,EAAW,EAAI,OAAS,SAE5CU,EAAY,CAACf,EAAwBc,IAAcd,EAAavJ,KAAKuE,MAAM8F,EAAId,EAAajK,SAElG,SAASiL,EAAyBlJ,EAA2D1C,GAC5F,MAAMkB,EAAQ,IAAImD,EACjBtD,EAAS2B,EAAKvB,KAAI,EAAG+B,YAAa1C,EAAM0C,GAAQ5C,GAAKA,EAAEN,GAAKsD,SAAQtD,KAAO,UPzWrD,EAAIS,EAAUT,IAAqBS,EAAIE,OAAS,EAAKF,EAAIG,QAAO,CAACC,EAAGC,IAAMD,EAAEb,GAAOc,EAAEd,GAAOa,EAAIC,SAAKb,EO0W3H0N,CAASjL,EAAKvB,KAAI,EAAG+B,aAAa0K,OP3WXnN,EO2WiByC,EP3WPxC,EO2WeJ,GAAKA,EAAEN,GAAKsD,OP3WE7C,EAAIE,OAAS,EAAKF,EAAIG,QAAO,CAACC,EAAGC,IAAMJ,EAAGG,GAAKH,EAAGI,GAAKD,EAAIC,SAAKb,GO2W1DD,GP3WjD,IAAIS,EAAUC,CO2WuC,IAAG,WAG5E,OAAO,IAAIQ,EAAMoD,IAAIuC,SAAS3F,EAC/B,CAEA,MAAM2M,EAAa,CAACpN,EAAeQ,IAClCF,EAASN,EAAIU,KAAI,CAACC,EAAG0M,IAAQ,CAACzM,KAAKC,IAAIF,EAAIH,GAAK6M,KAAO,GAAG,YAE3CnL,EAAaF,EAAWvB,EAAqBwB,GAC5D,MAAMqL,EAAmBrL,EAAKvB,KAAI,EAAG+B,YAAa2K,EAAW3K,EAAO/B,KAAIb,GAAKA,EAAEiB,MAAMC,OAAON,KAASuB,KAC/FuL,EAAgBD,EAAiB5M,KAAI,CAAC8M,EAAYvC,IAAMhJ,EAAKgJ,GAAGxI,OAAO+K,GAAY1M,QACzF,OAAOf,EAAMwN,GAAeE,GAAK7M,KAAKC,IAAI4M,EAAE1M,OAAON,GAASuB,IAC7D,CAEA,MAAMJ,EAAQ"}