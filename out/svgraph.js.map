{"version":3,"file":"svgraph.js","sources":["../src/colourschemes.ts","../src/label.ts","../src/html.ts","../src/popup.ts","../src/svg.ts","../node_modules/csv-parse/dist/esm/sync.js","../src/data.ts","../src/svgraph.ts"],"sourcesContent":["export const inferno = [\"#000004\",\"#010005\",\"#010106\",\"#010108\",\"#02010a\",\"#02020c\",\"#02020e\",\"#030210\",\"#040312\",\"#040314\",\"#050417\",\"#060419\",\"#07051b\",\"#08051d\",\"#09061f\",\"#0a0722\",\"#0b0724\",\"#0c0826\",\"#0d0829\",\"#0e092b\",\"#10092d\",\"#110a30\",\"#120a32\",\"#140b34\",\"#150b37\",\"#160b39\",\"#180c3c\",\"#190c3e\",\"#1b0c41\",\"#1c0c43\",\"#1e0c45\",\"#1f0c48\",\"#210c4a\",\"#230c4c\",\"#240c4f\",\"#260c51\",\"#280b53\",\"#290b55\",\"#2b0b57\",\"#2d0b59\",\"#2f0a5b\",\"#310a5c\",\"#320a5e\",\"#340a5f\",\"#360961\",\"#380962\",\"#390963\",\"#3b0964\",\"#3d0965\",\"#3e0966\",\"#400a67\",\"#420a68\",\"#440a68\",\"#450a69\",\"#470b6a\",\"#490b6a\",\"#4a0c6b\",\"#4c0c6b\",\"#4d0d6c\",\"#4f0d6c\",\"#510e6c\",\"#520e6d\",\"#540f6d\",\"#550f6d\",\"#57106e\",\"#59106e\",\"#5a116e\",\"#5c126e\",\"#5d126e\",\"#5f136e\",\"#61136e\",\"#62146e\",\"#64156e\",\"#65156e\",\"#67166e\",\"#69166e\",\"#6a176e\",\"#6c186e\",\"#6d186e\",\"#6f196e\",\"#71196e\",\"#721a6e\",\"#741a6e\",\"#751b6e\",\"#771c6d\",\"#781c6d\",\"#7a1d6d\",\"#7c1d6d\",\"#7d1e6d\",\"#7f1e6c\",\"#801f6c\",\"#82206c\",\"#84206b\",\"#85216b\",\"#87216b\",\"#88226a\",\"#8a226a\",\"#8c2369\",\"#8d2369\",\"#8f2469\",\"#902568\",\"#922568\",\"#932667\",\"#952667\",\"#972766\",\"#982766\",\"#9a2865\",\"#9b2964\",\"#9d2964\",\"#9f2a63\",\"#a02a63\",\"#a22b62\",\"#a32c61\",\"#a52c60\",\"#a62d60\",\"#a82e5f\",\"#a92e5e\",\"#ab2f5e\",\"#ad305d\",\"#ae305c\",\"#b0315b\",\"#b1325a\",\"#b3325a\",\"#b43359\",\"#b63458\",\"#b73557\",\"#b93556\",\"#ba3655\",\"#bc3754\",\"#bd3853\",\"#bf3952\",\"#c03a51\",\"#c13a50\",\"#c33b4f\",\"#c43c4e\",\"#c63d4d\",\"#c73e4c\",\"#c83f4b\",\"#ca404a\",\"#cb4149\",\"#cc4248\",\"#ce4347\",\"#cf4446\",\"#d04545\",\"#d24644\",\"#d34743\",\"#d44842\",\"#d54a41\",\"#d74b3f\",\"#d84c3e\",\"#d94d3d\",\"#da4e3c\",\"#db503b\",\"#dd513a\",\"#de5238\",\"#df5337\",\"#e05536\",\"#e15635\",\"#e25734\",\"#e35933\",\"#e45a31\",\"#e55c30\",\"#e65d2f\",\"#e75e2e\",\"#e8602d\",\"#e9612b\",\"#ea632a\",\"#eb6429\",\"#eb6628\",\"#ec6726\",\"#ed6925\",\"#ee6a24\",\"#ef6c23\",\"#ef6e21\",\"#f06f20\",\"#f1711f\",\"#f1731d\",\"#f2741c\",\"#f3761b\",\"#f37819\",\"#f47918\",\"#f57b17\",\"#f57d15\",\"#f67e14\",\"#f68013\",\"#f78212\",\"#f78410\",\"#f8850f\",\"#f8870e\",\"#f8890c\",\"#f98b0b\",\"#f98c0a\",\"#f98e09\",\"#fa9008\",\"#fa9207\",\"#fa9407\",\"#fb9606\",\"#fb9706\",\"#fb9906\",\"#fb9b06\",\"#fb9d07\",\"#fc9f07\",\"#fca108\",\"#fca309\",\"#fca50a\",\"#fca60c\",\"#fca80d\",\"#fcaa0f\",\"#fcac11\",\"#fcae12\",\"#fcb014\",\"#fcb216\",\"#fcb418\",\"#fbb61a\",\"#fbb81d\",\"#fbba1f\",\"#fbbc21\",\"#fbbe23\",\"#fac026\",\"#fac228\",\"#fac42a\",\"#fac62d\",\"#f9c72f\",\"#f9c932\",\"#f9cb35\",\"#f8cd37\",\"#f8cf3a\",\"#f7d13d\",\"#f7d340\",\"#f6d543\",\"#f6d746\",\"#f5d949\",\"#f5db4c\",\"#f4dd4f\",\"#f4df53\",\"#f4e156\",\"#f3e35a\",\"#f3e55d\",\"#f2e661\",\"#f2e865\",\"#f2ea69\",\"#f1ec6d\",\"#f1ed71\",\"#f1ef75\",\"#f1f179\",\"#f2f27d\",\"#f2f482\",\"#f3f586\",\"#f3f68a\",\"#f4f88e\",\"#f5f992\",\"#f6fa96\",\"#f8fb9a\",\"#f9fc9d\",\"#fafda1\",\"#fcffa4\"]\n\nexport const warm = [\"#6e40aa\",\"#6f40aa\",\"#7140ab\",\"#723fac\",\"#743fac\",\"#753fad\",\"#773fad\",\"#783fae\",\"#7a3fae\",\"#7c3faf\",\"#7d3faf\",\"#7f3faf\",\"#803eb0\",\"#823eb0\",\"#833eb0\",\"#853eb1\",\"#873eb1\",\"#883eb1\",\"#8a3eb2\",\"#8b3eb2\",\"#8d3eb2\",\"#8f3db2\",\"#903db2\",\"#923db3\",\"#943db3\",\"#953db3\",\"#973db3\",\"#983db3\",\"#9a3db3\",\"#9c3db3\",\"#9d3db3\",\"#9f3db3\",\"#a13db3\",\"#a23db3\",\"#a43db3\",\"#a63cb3\",\"#a73cb3\",\"#a93cb3\",\"#aa3cb2\",\"#ac3cb2\",\"#ae3cb2\",\"#af3cb2\",\"#b13cb2\",\"#b23cb1\",\"#b43cb1\",\"#b63cb1\",\"#b73cb0\",\"#b93cb0\",\"#ba3cb0\",\"#bc3caf\",\"#be3caf\",\"#bf3caf\",\"#c13dae\",\"#c23dae\",\"#c43dad\",\"#c53dad\",\"#c73dac\",\"#c83dac\",\"#ca3dab\",\"#cb3daa\",\"#cd3daa\",\"#ce3da9\",\"#d03ea9\",\"#d13ea8\",\"#d33ea7\",\"#d43ea7\",\"#d53ea6\",\"#d73ea5\",\"#d83fa4\",\"#da3fa4\",\"#db3fa3\",\"#dc3fa2\",\"#de3fa1\",\"#df40a0\",\"#e040a0\",\"#e2409f\",\"#e3409e\",\"#e4419d\",\"#e5419c\",\"#e7419b\",\"#e8429a\",\"#e94299\",\"#ea4298\",\"#eb4397\",\"#ed4396\",\"#ee4395\",\"#ef4494\",\"#f04493\",\"#f14592\",\"#f24591\",\"#f34590\",\"#f4468f\",\"#f5468e\",\"#f6478d\",\"#f7478c\",\"#f8488b\",\"#f9488a\",\"#fa4988\",\"#fb4987\",\"#fc4a86\",\"#fd4a85\",\"#fe4b84\",\"#fe4b83\",\"#ff4c81\",\"#ff4d80\",\"#ff4d7f\",\"#ff4e7e\",\"#ff4e7d\",\"#ff4f7b\",\"#ff507a\",\"#ff5079\",\"#ff5178\",\"#ff5276\",\"#ff5275\",\"#ff5374\",\"#ff5473\",\"#ff5572\",\"#ff5570\",\"#ff566f\",\"#ff576e\",\"#ff586d\",\"#ff586b\",\"#ff596a\",\"#ff5a69\",\"#ff5b68\",\"#ff5c66\",\"#ff5d65\",\"#ff5d64\",\"#ff5e63\",\"#ff5f61\",\"#ff6060\",\"#ff615f\",\"#ff625e\",\"#ff635d\",\"#ff645b\",\"#ff655a\",\"#ff6659\",\"#ff6758\",\"#ff6857\",\"#ff6956\",\"#ff6a54\",\"#ff6b53\",\"#ff6c52\",\"#ff6d51\",\"#ff6e50\",\"#ff6f4f\",\"#ff704e\",\"#ff714d\",\"#ff724c\",\"#ff734b\",\"#ff744a\",\"#ff7549\",\"#ff7648\",\"#ff7847\",\"#ff7946\",\"#ff7a45\",\"#ff7b44\",\"#ff7c43\",\"#ff7d42\",\"#ff7e41\",\"#ff8040\",\"#ff813f\",\"#ff823e\",\"#ff833d\",\"#ff843d\",\"#ff863c\",\"#ff873b\",\"#ff883a\",\"#ff893a\",\"#ff8a39\",\"#ff8c38\",\"#ff8d37\",\"#ff8e37\",\"#ff8f36\",\"#fe9136\",\"#fd9235\",\"#fd9334\",\"#fc9534\",\"#fb9633\",\"#fa9733\",\"#f99832\",\"#f99a32\",\"#f89b32\",\"#f79c31\",\"#f69d31\",\"#f59f30\",\"#f4a030\",\"#f3a130\",\"#f2a32f\",\"#f1a42f\",\"#f0a52f\",\"#efa62f\",\"#eea82f\",\"#eda92e\",\"#ecaa2e\",\"#ebac2e\",\"#eaad2e\",\"#e9ae2e\",\"#e8b02e\",\"#e7b12e\",\"#e6b22e\",\"#e5b32e\",\"#e4b52e\",\"#e3b62e\",\"#e2b72f\",\"#e1b92f\",\"#e0ba2f\",\"#dfbb2f\",\"#debc30\",\"#ddbe30\",\"#dbbf30\",\"#dac030\",\"#d9c131\",\"#d8c331\",\"#d7c432\",\"#d6c532\",\"#d5c633\",\"#d4c833\",\"#d3c934\",\"#d2ca34\",\"#d1cb35\",\"#cfcc36\",\"#cece36\",\"#cdcf37\",\"#ccd038\",\"#cbd138\",\"#cad239\",\"#c9d33a\",\"#c8d53b\",\"#c7d63c\",\"#c6d73c\",\"#c5d83d\",\"#c4d93e\",\"#c3da3f\",\"#c2db40\",\"#c1dc41\",\"#c0dd42\",\"#bfdf43\",\"#bee044\",\"#bde146\",\"#bce247\",\"#bbe348\",\"#bae449\",\"#b9e54a\",\"#b8e64b\",\"#b7e74d\",\"#b6e84e\",\"#b6e94f\",\"#b5ea51\",\"#b4ea52\",\"#b3eb53\",\"#b2ec55\",\"#b1ed56\",\"#b1ee58\",\"#b0ef59\",\"#aff05b\"]\n\nexport const turbo = [\"#23171b\",\"#271a28\",\"#2b1c33\",\"#2f1e3f\",\"#32204a\",\"#362354\",\"#39255f\",\"#3b2768\",\"#3e2a72\",\"#402c7b\",\"#422f83\",\"#44318b\",\"#453493\",\"#46369b\",\"#4839a2\",\"#493ca8\",\"#493eaf\",\"#4a41b5\",\"#4a44bb\",\"#4b46c0\",\"#4b49c5\",\"#4b4cca\",\"#4b4ecf\",\"#4b51d3\",\"#4a54d7\",\"#4a56db\",\"#4959de\",\"#495ce2\",\"#485fe5\",\"#4761e7\",\"#4664ea\",\"#4567ec\",\"#446aee\",\"#446df0\",\"#426ff2\",\"#4172f3\",\"#4075f5\",\"#3f78f6\",\"#3e7af7\",\"#3d7df7\",\"#3c80f8\",\"#3a83f9\",\"#3985f9\",\"#3888f9\",\"#378bf9\",\"#368df9\",\"#3590f8\",\"#3393f8\",\"#3295f7\",\"#3198f7\",\"#309bf6\",\"#2f9df5\",\"#2ea0f4\",\"#2da2f3\",\"#2ca5f1\",\"#2ba7f0\",\"#2aaaef\",\"#2aaced\",\"#29afec\",\"#28b1ea\",\"#28b4e8\",\"#27b6e6\",\"#27b8e5\",\"#26bbe3\",\"#26bde1\",\"#26bfdf\",\"#25c1dc\",\"#25c3da\",\"#25c6d8\",\"#25c8d6\",\"#25cad3\",\"#25ccd1\",\"#25cecf\",\"#26d0cc\",\"#26d2ca\",\"#26d4c8\",\"#27d6c5\",\"#27d8c3\",\"#28d9c0\",\"#29dbbe\",\"#29ddbb\",\"#2adfb8\",\"#2be0b6\",\"#2ce2b3\",\"#2de3b1\",\"#2ee5ae\",\"#30e6ac\",\"#31e8a9\",\"#32e9a6\",\"#34eba4\",\"#35eca1\",\"#37ed9f\",\"#39ef9c\",\"#3af09a\",\"#3cf197\",\"#3ef295\",\"#40f392\",\"#42f490\",\"#44f58d\",\"#46f68b\",\"#48f788\",\"#4af786\",\"#4df884\",\"#4ff981\",\"#51fa7f\",\"#54fa7d\",\"#56fb7a\",\"#59fb78\",\"#5cfc76\",\"#5efc74\",\"#61fd71\",\"#64fd6f\",\"#66fd6d\",\"#69fd6b\",\"#6cfd69\",\"#6ffe67\",\"#72fe65\",\"#75fe63\",\"#78fe61\",\"#7bfe5f\",\"#7efd5d\",\"#81fd5c\",\"#84fd5a\",\"#87fd58\",\"#8afc56\",\"#8dfc55\",\"#90fb53\",\"#93fb51\",\"#96fa50\",\"#99fa4e\",\"#9cf94d\",\"#9ff84b\",\"#a2f84a\",\"#a6f748\",\"#a9f647\",\"#acf546\",\"#aff444\",\"#b2f343\",\"#b5f242\",\"#b8f141\",\"#bbf03f\",\"#beef3e\",\"#c1ed3d\",\"#c3ec3c\",\"#c6eb3b\",\"#c9e93a\",\"#cce839\",\"#cfe738\",\"#d1e537\",\"#d4e336\",\"#d7e235\",\"#d9e034\",\"#dcdf33\",\"#dedd32\",\"#e0db32\",\"#e3d931\",\"#e5d730\",\"#e7d52f\",\"#e9d42f\",\"#ecd22e\",\"#eed02d\",\"#f0ce2c\",\"#f1cb2c\",\"#f3c92b\",\"#f5c72b\",\"#f7c52a\",\"#f8c329\",\"#fac029\",\"#fbbe28\",\"#fdbc28\",\"#feb927\",\"#ffb727\",\"#ffb526\",\"#ffb226\",\"#ffb025\",\"#ffad25\",\"#ffab24\",\"#ffa824\",\"#ffa623\",\"#ffa323\",\"#ffa022\",\"#ff9e22\",\"#ff9b21\",\"#ff9921\",\"#ff9621\",\"#ff9320\",\"#ff9020\",\"#ff8e1f\",\"#ff8b1f\",\"#ff881e\",\"#ff851e\",\"#ff831d\",\"#ff801d\",\"#ff7d1d\",\"#ff7a1c\",\"#ff781c\",\"#ff751b\",\"#ff721b\",\"#ff6f1a\",\"#fd6c1a\",\"#fc6a19\",\"#fa6719\",\"#f96418\",\"#f76118\",\"#f65f18\",\"#f45c17\",\"#f25916\",\"#f05716\",\"#ee5415\",\"#ec5115\",\"#ea4f14\",\"#e84c14\",\"#e64913\",\"#e44713\",\"#e24412\",\"#df4212\",\"#dd3f11\",\"#da3d10\",\"#d83a10\",\"#d5380f\",\"#d3360f\",\"#d0330e\",\"#ce310d\",\"#cb2f0d\",\"#c92d0c\",\"#c62a0b\",\"#c3280b\",\"#c1260a\",\"#be2409\",\"#bb2309\",\"#b92108\",\"#b61f07\",\"#b41d07\",\"#b11b06\",\"#af1a05\",\"#ac1805\",\"#aa1704\",\"#a81604\",\"#a51403\",\"#a31302\",\"#a11202\",\"#9f1101\",\"#9d1000\",\"#9b0f00\",\"#9a0e00\",\"#980e00\",\"#960d00\",\"#950c00\",\"#940c00\",\"#930c00\",\"#920c00\",\"#910b00\",\"#910c00\",\"#900c00\",\"#900c00\",\"#900c00\"]\n\nexport const rainbow = [\"#6e40aa\",\"#7140ab\",\"#743fac\",\"#773fad\",\"#7a3fae\",\"#7d3faf\",\"#803eb0\",\"#833eb0\",\"#873eb1\",\"#8a3eb2\",\"#8d3eb2\",\"#903db2\",\"#943db3\",\"#973db3\",\"#9a3db3\",\"#9d3db3\",\"#a13db3\",\"#a43db3\",\"#a73cb3\",\"#aa3cb2\",\"#ae3cb2\",\"#b13cb2\",\"#b43cb1\",\"#b73cb0\",\"#ba3cb0\",\"#be3caf\",\"#c13dae\",\"#c43dad\",\"#c73dac\",\"#ca3dab\",\"#cd3daa\",\"#d03ea9\",\"#d33ea7\",\"#d53ea6\",\"#d83fa4\",\"#db3fa3\",\"#de3fa1\",\"#e040a0\",\"#e3409e\",\"#e5419c\",\"#e8429a\",\"#ea4298\",\"#ed4396\",\"#ef4494\",\"#f14592\",\"#f34590\",\"#f5468e\",\"#f7478c\",\"#f9488a\",\"#fb4987\",\"#fd4a85\",\"#fe4b83\",\"#ff4d80\",\"#ff4e7e\",\"#ff4f7b\",\"#ff5079\",\"#ff5276\",\"#ff5374\",\"#ff5572\",\"#ff566f\",\"#ff586d\",\"#ff596a\",\"#ff5b68\",\"#ff5d65\",\"#ff5e63\",\"#ff6060\",\"#ff625e\",\"#ff645b\",\"#ff6659\",\"#ff6857\",\"#ff6a54\",\"#ff6c52\",\"#ff6e50\",\"#ff704e\",\"#ff724c\",\"#ff744a\",\"#ff7648\",\"#ff7946\",\"#ff7b44\",\"#ff7d42\",\"#ff8040\",\"#ff823e\",\"#ff843d\",\"#ff873b\",\"#ff893a\",\"#ff8c38\",\"#ff8e37\",\"#fe9136\",\"#fd9334\",\"#fb9633\",\"#f99832\",\"#f89b32\",\"#f69d31\",\"#f4a030\",\"#f2a32f\",\"#f0a52f\",\"#eea82f\",\"#ecaa2e\",\"#eaad2e\",\"#e8b02e\",\"#e6b22e\",\"#e4b52e\",\"#e2b72f\",\"#e0ba2f\",\"#debc30\",\"#dbbf30\",\"#d9c131\",\"#d7c432\",\"#d5c633\",\"#d3c934\",\"#d1cb35\",\"#cece36\",\"#ccd038\",\"#cad239\",\"#c8d53b\",\"#c6d73c\",\"#c4d93e\",\"#c2db40\",\"#c0dd42\",\"#bee044\",\"#bce247\",\"#bae449\",\"#b8e64b\",\"#b6e84e\",\"#b5ea51\",\"#b3eb53\",\"#b1ed56\",\"#b0ef59\",\"#adf05a\",\"#aaf159\",\"#a6f159\",\"#a2f258\",\"#9ef258\",\"#9af357\",\"#96f357\",\"#93f457\",\"#8ff457\",\"#8bf457\",\"#87f557\",\"#83f557\",\"#80f558\",\"#7cf658\",\"#78f659\",\"#74f65a\",\"#71f65b\",\"#6df65c\",\"#6af75d\",\"#66f75e\",\"#63f75f\",\"#5ff761\",\"#5cf662\",\"#59f664\",\"#55f665\",\"#52f667\",\"#4ff669\",\"#4cf56a\",\"#49f56c\",\"#46f46e\",\"#43f470\",\"#41f373\",\"#3ef375\",\"#3bf277\",\"#39f279\",\"#37f17c\",\"#34f07e\",\"#32ef80\",\"#30ee83\",\"#2eed85\",\"#2cec88\",\"#2aeb8a\",\"#28ea8d\",\"#27e98f\",\"#25e892\",\"#24e795\",\"#22e597\",\"#21e49a\",\"#20e29d\",\"#1fe19f\",\"#1edfa2\",\"#1ddea4\",\"#1cdca7\",\"#1bdbaa\",\"#1bd9ac\",\"#1ad7af\",\"#1ad5b1\",\"#1ad4b4\",\"#19d2b6\",\"#19d0b8\",\"#19cebb\",\"#19ccbd\",\"#19cabf\",\"#1ac8c1\",\"#1ac6c4\",\"#1ac4c6\",\"#1bc2c8\",\"#1bbfca\",\"#1cbdcc\",\"#1dbbcd\",\"#1db9cf\",\"#1eb6d1\",\"#1fb4d2\",\"#20b2d4\",\"#21afd5\",\"#22add7\",\"#23abd8\",\"#25a8d9\",\"#26a6db\",\"#27a4dc\",\"#29a1dd\",\"#2a9fdd\",\"#2b9cde\",\"#2d9adf\",\"#2e98e0\",\"#3095e0\",\"#3293e1\",\"#3390e1\",\"#358ee1\",\"#378ce1\",\"#3889e1\",\"#3a87e1\",\"#3c84e1\",\"#3d82e1\",\"#3f80e1\",\"#417de0\",\"#437be0\",\"#4479df\",\"#4676df\",\"#4874de\",\"#4a72dd\",\"#4b70dc\",\"#4d6ddb\",\"#4f6bda\",\"#5169d9\",\"#5267d7\",\"#5465d6\",\"#5663d5\",\"#5761d3\",\"#595fd1\",\"#5a5dd0\",\"#5c5bce\",\"#5d59cc\",\"#5f57ca\",\"#6055c8\",\"#6153c6\",\"#6351c4\",\"#6450c2\",\"#654ec0\",\"#664cbe\",\"#674abb\",\"#6849b9\",\"#6a47b7\",\"#6a46b4\",\"#6b44b2\",\"#6c43af\",\"#6d41ad\",\"#6e40aa\"]\n","export interface Label {\n\tget text(): string\n\tgetPos(min: Label, max: Label): number\n}\n\nexport class NumberLabel implements Label {\n\tconstructor(public value: number) { }\n\n\tget text() { return this.value.toString() }\n\n\tgetPos(min: NumberLabel, max: NumberLabel) { return (this.value - min.value) / (max.value - min.value) }\n}\n\n// TODO: date labels etc\n","function element(name: string, attrs: { [key: string]: any }, children: Node[] = []): HTMLElement {\n\tconst elem = document.createElement(name)\n\tfor (const key in attrs) {\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\n\t}\n\tfor (const child of children ?? []) elem.appendChild(child)\n\treturn elem\n}\n\ntype DefaultAttrs = {\n\tid?: string,\n\tclass?: string\n}\n\nexport const div = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"div\", attrs, children)\nexport const p = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"p\", attrs, children)\nexport const h1 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h1\", attrs, children)\nexport const h2 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h2\", attrs, children)\nexport const h3 = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"h3\", attrs, children)\n","import { h3, p } from \"./html\"\nimport { Label } from \"./label\"\nimport { Point } from \"./svgraph\"\n\nconst nearestIdx = (arr: number[], to: number): number =>\n\tarr.map((x, idx) => [Math.abs(x - to), idx]).minBy(x => x[0])[1]\n\nconst nearestPointForLabel = (arr: Point[], to: Label, range: [Label, Label]): Point =>\n\t(arr.map(x => [x, Math.abs(x.label.getPos(...range) - to.getPos(...range))]) as [Point, number][]).minBy(x => x[1])[0]\n\nfunction nearestLabel(t: number, range: [Label, Label], data: { name: string; points: Point[] }[]) {\n\tconst nearestLabelsIdx = data.map(({ points }) => nearestIdx(points.map(p => p.label.getPos(...range)), t))\n\tconst nearestLabels = nearestLabelsIdx.map((closestIdx, i) => data[i].points[closestIdx].label)\n\treturn nearestLabels.minBy(l => Math.abs(l.getPos(...range) - t))\n}\n\nexport default class PopupElement extends HTMLDivElement {\n\tconstructor() {\n\t\tsuper()\n\t}\n\n\tshow() { this.classList.add(\"active\") }\n\n\thide() { this.classList.remove(\"active\") }\n\n\tmove(x: number, y: number) {\n\t\tthis.style.left = `${x + 20}px`\n\t\tthis.style.top = `${y}px`\n\t}\n\n\tsetValues(points: { name: string, point: Point }[]) {\n\t\tfor (const { name, point: { value } } of points) {\n\t\t\tif (value != undefined) this.appendChild(p({}, new Text(`${name}: ${value}`)))\n\t\t}\n\t}\n\n\tupdate(x: number, y: number, t: number, range: [Label, Label], data: { name: string, points: Point[] }[]): Point[] {\n\t\tthis.move(x, y)\n\n\t\tconst label = nearestLabel(t, range, data)\n\n\t\tthis.innerHTML = \"\"\n\t\tthis.appendChild(h3({}, new Text(label.text)))\n\n\t\tconst nearestPoints = data.map(({ name, points }) => ({ name, point: nearestPointForLabel(points, label, range) }))\n\t\tthis.setValues(nearestPoints)\n\n\t\tthis.show()\n\n\t\treturn nearestPoints.map(x => x.point)\n\t}\n}\n\ncustomElements.define(\"svg-popup\", PopupElement, { extends: \"div\" })\n","const ns = \"http://www.w3.org/2000/svg\"\n\nfunction element(name: string, attrs: { [key: string]: any }, children: Node[] = []): SVGElement {\n\tconst elem = document.createElementNS(ns, name)\n\tfor (const key in attrs) {\n\t\tif (attrs[key] !== undefined) elem.setAttribute(key, attrs[key])\n\t}\n\tfor (const child of children ?? []) elem.appendChild(child)\n\treturn elem\n}\n\ntype stringable = string | number | boolean\n\ntype DefaultAttrs = {\n\tid?: string,\n\tclass?: string\n\ttransform?: string,\n\tfill?: string\n\tstroke?: string\n\t\"stroke-width\"?: stringable\n}\n\nexport const svg = (attrs: { width: string, height: string, viewBox?: string, preserveAspectRatio?: string, overflow?: string } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"svg\", { ...attrs, xmlns: ns }, children)\n\nexport const circle = (attrs: { cx: stringable, cy: stringable, r: stringable } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"circle\", attrs, children)\n\nexport const g = (attrs: DefaultAttrs = {}, ...children: Node[]) => element(\"g\", attrs, children)\n\nexport const line = (attrs: { from: [stringable, stringable], to: [stringable, stringable] } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"line\", { ...attrs, x1: attrs.from[0], y1: attrs.from[1], x2: attrs.to[0], y2: attrs.to[1], from: undefined, to: undefined }, children)\n\nexport const polyline = (attrs: { points: [number, number][] } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"polyline\", { ...attrs, points: attrs.points.map(([x, y]) => `${x},${y}`).join(\" \") }, children)\n\nexport const rect = (attrs: { x?: stringable, y?: stringable, width: stringable, height: stringable, rx?: stringable, ry?: stringable } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"rect\", attrs, children)\n\nexport const text = (attrs: { x: stringable, y: stringable, dx?: stringable, dy?: stringable, rotate?: number[], lengthAdjust?: string, textLength?: stringable, \"text-anchor\"?: \"start\" | \"middle\" | \"end\" } & DefaultAttrs, ...children: Node[]) =>\n\telement(\"text\", attrs, children)\n","var global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nclass CsvError extends Error {\n  constructor(code, message, options, ...contexts) {\n    if (Array.isArray(message)) message = message.join(\" \").trim();\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for (const context of contexts) {\n      for (const key in context) {\n        const value = context[key];\n        this[key] = isBuffer(value)\n          ? value.toString(options.encoding)\n          : value == null\n            ? value\n            : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n}\n\nconst is_object = function (obj) {\n  return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n};\n\nconst normalize_columns_array = function (columns) {\n  const normalizedColumns = [];\n  for (let i = 0, l = columns.length; i < l; i++) {\n    const column = columns[i];\n    if (column === undefined || column === null || column === false) {\n      normalizedColumns[i] = { disabled: true };\n    } else if (typeof column === \"string\") {\n      normalizedColumns[i] = { name: column };\n    } else if (is_object(column)) {\n      if (typeof column.name !== \"string\") {\n        throw new CsvError(\"CSV_OPTION_COLUMNS_MISSING_NAME\", [\n          \"Option columns missing name:\",\n          `property \"name\" is required at position ${i}`,\n          \"when column is an object literal\",\n        ]);\n      }\n      normalizedColumns[i] = column;\n    } else {\n      throw new CsvError(\"CSV_INVALID_COLUMN_DEFINITION\", [\n        \"Invalid column definition:\",\n        \"expect a string or a literal object,\",\n        `got ${JSON.stringify(column)} at position ${i}`,\n      ]);\n    }\n  }\n  return normalizedColumns;\n};\n\nclass ResizeableBuffer {\n  constructor(size = 100) {\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val) {\n    if (isBuffer(val)) {\n      const length = this.length + val.length;\n      if (length >= this.size) {\n        this.resize();\n        if (length >= this.size) {\n          throw Error(\"INVALID_BUFFER_STATE\");\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    } else {\n      const length = this.length++;\n      if (length === this.size) {\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }\n  append(val) {\n    const length = this.length++;\n    if (length === this.size) {\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding) {\n    if (encoding) {\n      return this.buf.slice(0, this.length).toString(encoding);\n    } else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON() {\n    return this.toString(\"utf8\");\n  }\n  reset() {\n    this.length = 0;\n  }\n}\n\n// white space characters\n// https://en.wikipedia.org/wiki/Whitespace_character\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types\n// \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\nconst np = 12;\nconst cr$1 = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl$1 = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\nconst space = 32;\nconst tab = 9;\n\nconst init_state = function (options) {\n  return {\n    bomSkipped: false,\n    bufBytesStart: 0,\n    castField: options.cast_function,\n    commenting: false,\n    // Current error encountered by a record\n    error: undefined,\n    enabled: options.from_line === 1,\n    escaping: false,\n    escapeIsQuote:\n      isBuffer(options.escape) &&\n      isBuffer(options.quote) &&\n      Buffer.compare(options.escape, options.quote) === 0,\n    // columns can be `false`, `true`, `Array`\n    expectedRecordLength: Array.isArray(options.columns)\n      ? options.columns.length\n      : undefined,\n    field: new ResizeableBuffer(20),\n    firstLineToHeaders: options.cast_first_line_to_header,\n    needMoreDataSize: Math.max(\n      // Skip if the remaining buffer smaller than comment\n      options.comment !== null ? options.comment.length : 0,\n      // Skip if the remaining buffer can be delimiter\n      ...options.delimiter.map((delimiter) => delimiter.length),\n      // Skip if the remaining buffer can be escape sequence\n      options.quote !== null ? options.quote.length : 0,\n    ),\n    previousBuf: undefined,\n    quoting: false,\n    stop: false,\n    rawBuffer: new ResizeableBuffer(100),\n    record: [],\n    recordHasError: false,\n    record_length: 0,\n    recordDelimiterMaxLength:\n      options.record_delimiter.length === 0\n        ? 0\n        : Math.max(...options.record_delimiter.map((v) => v.length)),\n    trimChars: [\n      Buffer.from(\" \", options.encoding)[0],\n      Buffer.from(\"\\t\", options.encoding)[0],\n    ],\n    wasQuoting: false,\n    wasRowDelimiter: false,\n    timchars: [\n      Buffer.from(Buffer.from([cr$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([nl$1], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([np], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([space], \"utf8\").toString(), options.encoding),\n      Buffer.from(Buffer.from([tab], \"utf8\").toString(), options.encoding),\n    ],\n  };\n};\n\nconst underscore = function (str) {\n  return str.replace(/([A-Z])/g, function (_, match) {\n    return \"_\" + match.toLowerCase();\n  });\n};\n\nconst normalize_options = function (opts) {\n  const options = {};\n  // Merge with user options\n  for (const opt in opts) {\n    options[underscore(opt)] = opts[opt];\n  }\n  // Normalize option `encoding`\n  // Note: defined first because other options depends on it\n  // to convert chars/strings into buffers.\n  if (options.encoding === undefined || options.encoding === true) {\n    options.encoding = \"utf8\";\n  } else if (options.encoding === null || options.encoding === false) {\n    options.encoding = null;\n  } else if (\n    typeof options.encoding !== \"string\" &&\n    options.encoding !== null\n  ) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_ENCODING\",\n      [\n        \"Invalid option encoding:\",\n        \"encoding must be a string or null to return a buffer,\",\n        `got ${JSON.stringify(options.encoding)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `bom`\n  if (\n    options.bom === undefined ||\n    options.bom === null ||\n    options.bom === false\n  ) {\n    options.bom = false;\n  } else if (options.bom !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_BOM\",\n      [\n        \"Invalid option bom:\",\n        \"bom must be true,\",\n        `got ${JSON.stringify(options.bom)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast`\n  options.cast_function = null;\n  if (\n    options.cast === undefined ||\n    options.cast === null ||\n    options.cast === false ||\n    options.cast === \"\"\n  ) {\n    options.cast = undefined;\n  } else if (typeof options.cast === \"function\") {\n    options.cast_function = options.cast;\n    options.cast = true;\n  } else if (options.cast !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_CAST\",\n      [\n        \"Invalid option cast:\",\n        \"cast must be true or a function,\",\n        `got ${JSON.stringify(options.cast)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `cast_date`\n  if (\n    options.cast_date === undefined ||\n    options.cast_date === null ||\n    options.cast_date === false ||\n    options.cast_date === \"\"\n  ) {\n    options.cast_date = false;\n  } else if (options.cast_date === true) {\n    options.cast_date = function (value) {\n      const date = Date.parse(value);\n      return !isNaN(date) ? new Date(date) : value;\n    };\n  } else if (typeof options.cast_date !== \"function\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_CAST_DATE\",\n      [\n        \"Invalid option cast_date:\",\n        \"cast_date must be true or a function,\",\n        `got ${JSON.stringify(options.cast_date)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `columns`\n  options.cast_first_line_to_header = null;\n  if (options.columns === true) {\n    // Fields in the first line are converted as-is to columns\n    options.cast_first_line_to_header = undefined;\n  } else if (typeof options.columns === \"function\") {\n    options.cast_first_line_to_header = options.columns;\n    options.columns = true;\n  } else if (Array.isArray(options.columns)) {\n    options.columns = normalize_columns_array(options.columns);\n  } else if (\n    options.columns === undefined ||\n    options.columns === null ||\n    options.columns === false\n  ) {\n    options.columns = false;\n  } else {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_COLUMNS\",\n      [\n        \"Invalid option columns:\",\n        \"expect an array, a function or true,\",\n        `got ${JSON.stringify(options.columns)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `group_columns_by_name`\n  if (\n    options.group_columns_by_name === undefined ||\n    options.group_columns_by_name === null ||\n    options.group_columns_by_name === false\n  ) {\n    options.group_columns_by_name = false;\n  } else if (options.group_columns_by_name !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"expect an boolean,\",\n        `got ${JSON.stringify(options.group_columns_by_name)}`,\n      ],\n      options,\n    );\n  } else if (options.columns === false) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME\",\n      [\n        \"Invalid option group_columns_by_name:\",\n        \"the `columns` mode must be activated.\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `comment`\n  if (\n    options.comment === undefined ||\n    options.comment === null ||\n    options.comment === false ||\n    options.comment === \"\"\n  ) {\n    options.comment = null;\n  } else {\n    if (typeof options.comment === \"string\") {\n      options.comment = Buffer.from(options.comment, options.encoding);\n    }\n    if (!isBuffer(options.comment)) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_COMMENT\",\n        [\n          \"Invalid option comment:\",\n          \"comment must be a buffer or a string,\",\n          `got ${JSON.stringify(options.comment)}`,\n        ],\n        options,\n      );\n    }\n  }\n  // Normalize option `comment_no_infix`\n  if (\n    options.comment_no_infix === undefined ||\n    options.comment_no_infix === null ||\n    options.comment_no_infix === false\n  ) {\n    options.comment_no_infix = false;\n  } else if (options.comment_no_infix !== true) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_COMMENT\",\n      [\n        \"Invalid option comment_no_infix:\",\n        \"value must be a boolean,\",\n        `got ${JSON.stringify(options.comment_no_infix)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `delimiter`\n  const delimiter_json = JSON.stringify(options.delimiter);\n  if (!Array.isArray(options.delimiter))\n    options.delimiter = [options.delimiter];\n  if (options.delimiter.length === 0) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_DELIMITER\",\n      [\n        \"Invalid option delimiter:\",\n        \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n        `got ${delimiter_json}`,\n      ],\n      options,\n    );\n  }\n  options.delimiter = options.delimiter.map(function (delimiter) {\n    if (delimiter === undefined || delimiter === null || delimiter === false) {\n      return Buffer.from(\",\", options.encoding);\n    }\n    if (typeof delimiter === \"string\") {\n      delimiter = Buffer.from(delimiter, options.encoding);\n    }\n    if (!isBuffer(delimiter) || delimiter.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_DELIMITER\",\n        [\n          \"Invalid option delimiter:\",\n          \"delimiter must be a non empty string or buffer or array of string|buffer,\",\n          `got ${delimiter_json}`,\n        ],\n        options,\n      );\n    }\n    return delimiter;\n  });\n  // Normalize option `escape`\n  if (options.escape === undefined || options.escape === true) {\n    options.escape = Buffer.from('\"', options.encoding);\n  } else if (typeof options.escape === \"string\") {\n    options.escape = Buffer.from(options.escape, options.encoding);\n  } else if (options.escape === null || options.escape === false) {\n    options.escape = null;\n  }\n  if (options.escape !== null) {\n    if (!isBuffer(options.escape)) {\n      throw new Error(\n        `Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`,\n      );\n    }\n  }\n  // Normalize option `from`\n  if (options.from === undefined || options.from === null) {\n    options.from = 1;\n  } else {\n    if (typeof options.from === \"string\" && /\\d+/.test(options.from)) {\n      options.from = parseInt(options.from);\n    }\n    if (Number.isInteger(options.from)) {\n      if (options.from < 0) {\n        throw new Error(\n          `Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`,\n      );\n    }\n  }\n  // Normalize option `from_line`\n  if (options.from_line === undefined || options.from_line === null) {\n    options.from_line = 1;\n  } else {\n    if (\n      typeof options.from_line === \"string\" &&\n      /\\d+/.test(options.from_line)\n    ) {\n      options.from_line = parseInt(options.from_line);\n    }\n    if (Number.isInteger(options.from_line)) {\n      if (options.from_line <= 0) {\n        throw new Error(\n          `Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`,\n      );\n    }\n  }\n  // Normalize options `ignore_last_delimiters`\n  if (\n    options.ignore_last_delimiters === undefined ||\n    options.ignore_last_delimiters === null\n  ) {\n    options.ignore_last_delimiters = false;\n  } else if (typeof options.ignore_last_delimiters === \"number\") {\n    options.ignore_last_delimiters = Math.floor(options.ignore_last_delimiters);\n    if (options.ignore_last_delimiters === 0) {\n      options.ignore_last_delimiters = false;\n    }\n  } else if (typeof options.ignore_last_delimiters !== \"boolean\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS\",\n      [\n        \"Invalid option `ignore_last_delimiters`:\",\n        \"the value must be a boolean value or an integer,\",\n        `got ${JSON.stringify(options.ignore_last_delimiters)}`,\n      ],\n      options,\n    );\n  }\n  if (options.ignore_last_delimiters === true && options.columns === false) {\n    throw new CsvError(\n      \"CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS\",\n      [\n        \"The option `ignore_last_delimiters`\",\n        \"requires the activation of the `columns` option\",\n      ],\n      options,\n    );\n  }\n  // Normalize option `info`\n  if (\n    options.info === undefined ||\n    options.info === null ||\n    options.info === false\n  ) {\n    options.info = false;\n  } else if (options.info !== true) {\n    throw new Error(\n      `Invalid Option: info must be true, got ${JSON.stringify(options.info)}`,\n    );\n  }\n  // Normalize option `max_record_size`\n  if (\n    options.max_record_size === undefined ||\n    options.max_record_size === null ||\n    options.max_record_size === false\n  ) {\n    options.max_record_size = 0;\n  } else if (\n    Number.isInteger(options.max_record_size) &&\n    options.max_record_size >= 0\n  ) ; else if (\n    typeof options.max_record_size === \"string\" &&\n    /\\d+/.test(options.max_record_size)\n  ) {\n    options.max_record_size = parseInt(options.max_record_size);\n  } else {\n    throw new Error(\n      `Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`,\n    );\n  }\n  // Normalize option `objname`\n  if (\n    options.objname === undefined ||\n    options.objname === null ||\n    options.objname === false\n  ) {\n    options.objname = undefined;\n  } else if (isBuffer(options.objname)) {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty buffer`);\n    }\n    if (options.encoding === null) ; else {\n      options.objname = options.objname.toString(options.encoding);\n    }\n  } else if (typeof options.objname === \"string\") {\n    if (options.objname.length === 0) {\n      throw new Error(`Invalid Option: objname must be a non empty string`);\n    }\n    // Great, nothing to do\n  } else if (typeof options.objname === \"number\") ; else {\n    throw new Error(\n      `Invalid Option: objname must be a string or a buffer, got ${options.objname}`,\n    );\n  }\n  if (options.objname !== undefined) {\n    if (typeof options.objname === \"number\") {\n      if (options.columns !== false) {\n        throw Error(\n          \"Invalid Option: objname index cannot be combined with columns or be defined as a field\",\n        );\n      }\n    } else {\n      // A string or a buffer\n      if (options.columns === false) {\n        throw Error(\n          \"Invalid Option: objname field must be combined with columns or be defined as an index\",\n        );\n      }\n    }\n  }\n  // Normalize option `on_record`\n  if (options.on_record === undefined || options.on_record === null) {\n    options.on_record = undefined;\n  } else if (typeof options.on_record !== \"function\") {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_ON_RECORD\",\n      [\n        \"Invalid option `on_record`:\",\n        \"expect a function,\",\n        `got ${JSON.stringify(options.on_record)}`,\n      ],\n      options,\n    );\n  }\n  // Normalize option `on_skip`\n  // options.on_skip ??= (err, chunk) => {\n  //   this.emit('skip', err, chunk);\n  // };\n  if (\n    options.on_skip !== undefined &&\n    options.on_skip !== null &&\n    typeof options.on_skip !== \"function\"\n  ) {\n    throw new Error(\n      `Invalid Option: on_skip must be a function, got ${JSON.stringify(options.on_skip)}`,\n    );\n  }\n  // Normalize option `quote`\n  if (\n    options.quote === null ||\n    options.quote === false ||\n    options.quote === \"\"\n  ) {\n    options.quote = null;\n  } else {\n    if (options.quote === undefined || options.quote === true) {\n      options.quote = Buffer.from('\"', options.encoding);\n    } else if (typeof options.quote === \"string\") {\n      options.quote = Buffer.from(options.quote, options.encoding);\n    }\n    if (!isBuffer(options.quote)) {\n      throw new Error(\n        `Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`,\n      );\n    }\n  }\n  // Normalize option `raw`\n  if (\n    options.raw === undefined ||\n    options.raw === null ||\n    options.raw === false\n  ) {\n    options.raw = false;\n  } else if (options.raw !== true) {\n    throw new Error(\n      `Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`,\n    );\n  }\n  // Normalize option `record_delimiter`\n  if (options.record_delimiter === undefined) {\n    options.record_delimiter = [];\n  } else if (\n    typeof options.record_delimiter === \"string\" ||\n    isBuffer(options.record_delimiter)\n  ) {\n    if (options.record_delimiter.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer,\",\n          `got ${JSON.stringify(options.record_delimiter)}`,\n        ],\n        options,\n      );\n    }\n    options.record_delimiter = [options.record_delimiter];\n  } else if (!Array.isArray(options.record_delimiter)) {\n    throw new CsvError(\n      \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n      [\n        \"Invalid option `record_delimiter`:\",\n        \"value must be a string, a buffer or array of string|buffer,\",\n        `got ${JSON.stringify(options.record_delimiter)}`,\n      ],\n      options,\n    );\n  }\n  options.record_delimiter = options.record_delimiter.map(function (rd, i) {\n    if (typeof rd !== \"string\" && !isBuffer(rd)) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a string, a buffer or array of string|buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    } else if (rd.length === 0) {\n      throw new CsvError(\n        \"CSV_INVALID_OPTION_RECORD_DELIMITER\",\n        [\n          \"Invalid option `record_delimiter`:\",\n          \"value must be a non empty string or buffer\",\n          `at index ${i},`,\n          `got ${JSON.stringify(rd)}`,\n        ],\n        options,\n      );\n    }\n    if (typeof rd === \"string\") {\n      rd = Buffer.from(rd, options.encoding);\n    }\n    return rd;\n  });\n  // Normalize option `relax_column_count`\n  if (typeof options.relax_column_count === \"boolean\") ; else if (\n    options.relax_column_count === undefined ||\n    options.relax_column_count === null\n  ) {\n    options.relax_column_count = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`,\n    );\n  }\n  if (typeof options.relax_column_count_less === \"boolean\") ; else if (\n    options.relax_column_count_less === undefined ||\n    options.relax_column_count_less === null\n  ) {\n    options.relax_column_count_less = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`,\n    );\n  }\n  if (typeof options.relax_column_count_more === \"boolean\") ; else if (\n    options.relax_column_count_more === undefined ||\n    options.relax_column_count_more === null\n  ) {\n    options.relax_column_count_more = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`,\n    );\n  }\n  // Normalize option `relax_quotes`\n  if (typeof options.relax_quotes === \"boolean\") ; else if (\n    options.relax_quotes === undefined ||\n    options.relax_quotes === null\n  ) {\n    options.relax_quotes = false;\n  } else {\n    throw new Error(\n      `Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`,\n    );\n  }\n  // Normalize option `skip_empty_lines`\n  if (typeof options.skip_empty_lines === \"boolean\") ; else if (\n    options.skip_empty_lines === undefined ||\n    options.skip_empty_lines === null\n  ) {\n    options.skip_empty_lines = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`,\n    );\n  }\n  // Normalize option `skip_records_with_empty_values`\n  if (typeof options.skip_records_with_empty_values === \"boolean\") ; else if (\n    options.skip_records_with_empty_values === undefined ||\n    options.skip_records_with_empty_values === null\n  ) {\n    options.skip_records_with_empty_values = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`,\n    );\n  }\n  // Normalize option `skip_records_with_error`\n  if (typeof options.skip_records_with_error === \"boolean\") ; else if (\n    options.skip_records_with_error === undefined ||\n    options.skip_records_with_error === null\n  ) {\n    options.skip_records_with_error = false;\n  } else {\n    throw new Error(\n      `Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`,\n    );\n  }\n  // Normalize option `rtrim`\n  if (\n    options.rtrim === undefined ||\n    options.rtrim === null ||\n    options.rtrim === false\n  ) {\n    options.rtrim = false;\n  } else if (options.rtrim !== true) {\n    throw new Error(\n      `Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`,\n    );\n  }\n  // Normalize option `ltrim`\n  if (\n    options.ltrim === undefined ||\n    options.ltrim === null ||\n    options.ltrim === false\n  ) {\n    options.ltrim = false;\n  } else if (options.ltrim !== true) {\n    throw new Error(\n      `Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`,\n    );\n  }\n  // Normalize option `trim`\n  if (\n    options.trim === undefined ||\n    options.trim === null ||\n    options.trim === false\n  ) {\n    options.trim = false;\n  } else if (options.trim !== true) {\n    throw new Error(\n      `Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`,\n    );\n  }\n  // Normalize options `trim`, `ltrim` and `rtrim`\n  if (options.trim === true && opts.ltrim !== false) {\n    options.ltrim = true;\n  } else if (options.ltrim !== true) {\n    options.ltrim = false;\n  }\n  if (options.trim === true && opts.rtrim !== false) {\n    options.rtrim = true;\n  } else if (options.rtrim !== true) {\n    options.rtrim = false;\n  }\n  // Normalize option `to`\n  if (options.to === undefined || options.to === null) {\n    options.to = -1;\n  } else {\n    if (typeof options.to === \"string\" && /\\d+/.test(options.to)) {\n      options.to = parseInt(options.to);\n    }\n    if (Number.isInteger(options.to)) {\n      if (options.to <= 0) {\n        throw new Error(\n          `Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`,\n      );\n    }\n  }\n  // Normalize option `to_line`\n  if (options.to_line === undefined || options.to_line === null) {\n    options.to_line = -1;\n  } else {\n    if (typeof options.to_line === \"string\" && /\\d+/.test(options.to_line)) {\n      options.to_line = parseInt(options.to_line);\n    }\n    if (Number.isInteger(options.to_line)) {\n      if (options.to_line <= 0) {\n        throw new Error(\n          `Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`,\n        );\n      }\n    } else {\n      throw new Error(\n        `Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`,\n      );\n    }\n  }\n  return options;\n};\n\nconst isRecordEmpty = function (record) {\n  return record.every(\n    (field) =>\n      field == null || (field.toString && field.toString().trim() === \"\"),\n  );\n};\n\nconst cr = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\n\nconst boms = {\n  // Note, the following are equals:\n  // Buffer.from(\"\\ufeff\")\n  // Buffer.from([239, 187, 191])\n  // Buffer.from('EFBBBF', 'hex')\n  utf8: Buffer.from([239, 187, 191]),\n  // Note, the following are equals:\n  // Buffer.from \"\\ufeff\", 'utf16le\n  // Buffer.from([255, 254])\n  utf16le: Buffer.from([255, 254]),\n};\n\nconst transform = function (original_options = {}) {\n  const info = {\n    bytes: 0,\n    comment_lines: 0,\n    empty_lines: 0,\n    invalid_field_length: 0,\n    lines: 1,\n    records: 0,\n  };\n  const options = normalize_options(original_options);\n  return {\n    info: info,\n    original_options: original_options,\n    options: options,\n    state: init_state(options),\n    __needMoreData: function (i, bufLen, end) {\n      if (end) return false;\n      const { encoding, escape, quote } = this.options;\n      const { quoting, needMoreDataSize, recordDelimiterMaxLength } =\n        this.state;\n      const numOfCharLeft = bufLen - i - 1;\n      const requiredLength = Math.max(\n        needMoreDataSize,\n        // Skip if the remaining buffer smaller than record delimiter\n        // If \"record_delimiter\" is yet to be discovered:\n        // 1. It is equals to `[]` and \"recordDelimiterMaxLength\" equals `0`\n        // 2. We set the length to windows line ending in the current encoding\n        // Note, that encoding is known from user or bom discovery at that point\n        // recordDelimiterMaxLength,\n        recordDelimiterMaxLength === 0\n          ? Buffer.from(\"\\r\\n\", encoding).length\n          : recordDelimiterMaxLength,\n        // Skip if remaining buffer can be an escaped quote\n        quoting ? (escape === null ? 0 : escape.length) + quote.length : 0,\n        // Skip if remaining buffer can be record delimiter following the closing quote\n        quoting ? quote.length + recordDelimiterMaxLength : 0,\n      );\n      return numOfCharLeft < requiredLength;\n    },\n    // Central parser implementation\n    parse: function (nextBuf, end, push, close) {\n      const {\n        bom,\n        comment_no_infix,\n        encoding,\n        from_line,\n        ltrim,\n        max_record_size,\n        raw,\n        relax_quotes,\n        rtrim,\n        skip_empty_lines,\n        to,\n        to_line,\n      } = this.options;\n      let { comment, escape, quote, record_delimiter } = this.options;\n      const { bomSkipped, previousBuf, rawBuffer, escapeIsQuote } = this.state;\n      let buf;\n      if (previousBuf === undefined) {\n        if (nextBuf === undefined) {\n          // Handle empty string\n          close();\n          return;\n        } else {\n          buf = nextBuf;\n        }\n      } else if (previousBuf !== undefined && nextBuf === undefined) {\n        buf = previousBuf;\n      } else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      }\n      // Handle UTF BOM\n      if (bomSkipped === false) {\n        if (bom === false) {\n          this.state.bomSkipped = true;\n        } else if (buf.length < 3) {\n          // No enough data\n          if (end === false) {\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          }\n        } else {\n          for (const encoding in boms) {\n            if (boms[encoding].compare(buf, 0, boms[encoding].length) === 0) {\n              // Skip BOM\n              const bomLength = boms[encoding].length;\n              this.state.bufBytesStart += bomLength;\n              buf = buf.slice(bomLength);\n              // Renormalize original options with the new encoding\n              this.options = normalize_options({\n                ...this.original_options,\n                encoding: encoding,\n              });\n              // Options will re-evaluate the Buffer with the new encoding\n              ({ comment, escape, quote } = this.options);\n              break;\n            }\n          }\n          this.state.bomSkipped = true;\n        }\n      }\n      const bufLen = buf.length;\n      let pos;\n      for (pos = 0; pos < bufLen; pos++) {\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if (this.__needMoreData(pos, bufLen, end)) {\n          break;\n        }\n        if (this.state.wasRowDelimiter === true) {\n          this.info.lines++;\n          this.state.wasRowDelimiter = false;\n        }\n        if (to_line !== -1 && this.info.lines > to_line) {\n          this.state.stop = true;\n          close();\n          return;\n        }\n        // Auto discovery of record_delimiter, unix, mac and windows supported\n        if (this.state.quoting === false && record_delimiter.length === 0) {\n          const record_delimiterCount = this.__autoDiscoverRecordDelimiter(\n            buf,\n            pos,\n          );\n          if (record_delimiterCount) {\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n        const chr = buf[pos];\n        if (raw === true) {\n          rawBuffer.append(chr);\n        }\n        if (\n          (chr === cr || chr === nl) &&\n          this.state.wasRowDelimiter === false\n        ) {\n          this.state.wasRowDelimiter = true;\n        }\n        // Previous char was a valid escape char\n        // treat the current char as a regular char\n        if (this.state.escaping === true) {\n          this.state.escaping = false;\n        } else {\n          // Escape is only active inside quoted fields\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          // if(escape !== null && this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          if (\n            escape !== null &&\n            this.state.quoting === true &&\n            this.__isEscape(buf, pos, chr) &&\n            pos + escape.length < bufLen\n          ) {\n            if (escapeIsQuote) {\n              if (this.__isQuote(buf, pos + escape.length)) {\n                this.state.escaping = true;\n                pos += escape.length - 1;\n                continue;\n              }\n            } else {\n              this.state.escaping = true;\n              pos += escape.length - 1;\n              continue;\n            }\n          }\n          // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n          if (this.state.commenting === false && this.__isQuote(buf, pos)) {\n            if (this.state.quoting === true) {\n              const nextChr = buf[pos + quote.length];\n              const isNextChrTrimable =\n                rtrim && this.__isCharTrimable(buf, pos + quote.length);\n              const isNextChrComment =\n                comment !== null &&\n                this.__compareBytes(comment, buf, pos + quote.length, nextChr);\n              const isNextChrDelimiter = this.__isDelimiter(\n                buf,\n                pos + quote.length,\n                nextChr,\n              );\n              const isNextChrRecordDelimiter =\n                record_delimiter.length === 0\n                  ? this.__autoDiscoverRecordDelimiter(buf, pos + quote.length)\n                  : this.__isRecordDelimiter(nextChr, buf, pos + quote.length);\n              // Escape a quote\n              // Treat next char as a regular character\n              if (\n                escape !== null &&\n                this.__isEscape(buf, pos, chr) &&\n                this.__isQuote(buf, pos + escape.length)\n              ) {\n                pos += escape.length - 1;\n              } else if (\n                !nextChr ||\n                isNextChrDelimiter ||\n                isNextChrRecordDelimiter ||\n                isNextChrComment ||\n                isNextChrTrimable\n              ) {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                pos += quote.length - 1;\n                continue;\n              } else if (relax_quotes === false) {\n                const err = this.__error(\n                  new CsvError(\n                    \"CSV_INVALID_CLOSING_QUOTE\",\n                    [\n                      \"Invalid Closing Quote:\",\n                      `got \"${String.fromCharCode(nextChr)}\"`,\n                      `at line ${this.info.lines}`,\n                      \"instead of delimiter, record delimiter, trimable character\",\n                      \"(if activated) or comment\",\n                    ],\n                    this.options,\n                    this.__infoField(),\n                  ),\n                );\n                if (err !== undefined) return err;\n              } else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                this.state.field.prepend(quote);\n                pos += quote.length - 1;\n              }\n            } else {\n              if (this.state.field.length !== 0) {\n                // In relax_quotes mode, treat opening quote preceded by chrs as regular\n                if (relax_quotes === false) {\n                  const info = this.__infoField();\n                  const bom = Object.keys(boms)\n                    .map((b) =>\n                      boms[b].equals(this.state.field.toString()) ? b : false,\n                    )\n                    .filter(Boolean)[0];\n                  const err = this.__error(\n                    new CsvError(\n                      \"INVALID_OPENING_QUOTE\",\n                      [\n                        \"Invalid Opening Quote:\",\n                        `a quote is found on field ${JSON.stringify(info.column)} at line ${info.lines}, value is ${JSON.stringify(this.state.field.toString(encoding))}`,\n                        bom ? `(${bom} bom)` : undefined,\n                      ],\n                      this.options,\n                      info,\n                      {\n                        field: this.state.field,\n                      },\n                    ),\n                  );\n                  if (err !== undefined) return err;\n                }\n              } else {\n                this.state.quoting = true;\n                pos += quote.length - 1;\n                continue;\n              }\n            }\n          }\n          if (this.state.quoting === false) {\n            const recordDelimiterLength = this.__isRecordDelimiter(\n              chr,\n              buf,\n              pos,\n            );\n            if (recordDelimiterLength !== 0) {\n              // Do not emit comments which take a full line\n              const skipCommentLine =\n                this.state.commenting &&\n                this.state.wasQuoting === false &&\n                this.state.record.length === 0 &&\n                this.state.field.length === 0;\n              if (skipCommentLine) {\n                this.info.comment_lines++;\n                // Skip full comment line\n              } else {\n                // Activate records emition if above from_line\n                if (\n                  this.state.enabled === false &&\n                  this.info.lines +\n                    (this.state.wasRowDelimiter === true ? 1 : 0) >=\n                    from_line\n                ) {\n                  this.state.enabled = true;\n                  this.__resetField();\n                  this.__resetRecord();\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                // Skip if line is empty and skip_empty_lines activated\n                if (\n                  skip_empty_lines === true &&\n                  this.state.wasQuoting === false &&\n                  this.state.record.length === 0 &&\n                  this.state.field.length === 0\n                ) {\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                this.info.bytes = this.state.bufBytesStart + pos;\n                const errField = this.__onField();\n                if (errField !== undefined) return errField;\n                this.info.bytes =\n                  this.state.bufBytesStart + pos + recordDelimiterLength;\n                const errRecord = this.__onRecord(push);\n                if (errRecord !== undefined) return errRecord;\n                if (to !== -1 && this.info.records >= to) {\n                  this.state.stop = true;\n                  close();\n                  return;\n                }\n              }\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n            if (this.state.commenting) {\n              continue;\n            }\n            if (\n              comment !== null &&\n              (comment_no_infix === false ||\n                (this.state.record.length === 0 &&\n                  this.state.field.length === 0))\n            ) {\n              const commentCount = this.__compareBytes(comment, buf, pos, chr);\n              if (commentCount !== 0) {\n                this.state.commenting = true;\n                continue;\n              }\n            }\n            const delimiterLength = this.__isDelimiter(buf, pos, chr);\n            if (delimiterLength !== 0) {\n              this.info.bytes = this.state.bufBytesStart + pos;\n              const errField = this.__onField();\n              if (errField !== undefined) return errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n        if (this.state.commenting === false) {\n          if (\n            max_record_size !== 0 &&\n            this.state.record_length + this.state.field.length > max_record_size\n          ) {\n            return this.__error(\n              new CsvError(\n                \"CSV_MAX_RECORD_SIZE\",\n                [\n                  \"Max Record Size:\",\n                  \"record exceed the maximum number of tolerated bytes\",\n                  `of ${max_record_size}`,\n                  `at line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n              ),\n            );\n          }\n        }\n        const lappend =\n          ltrim === false ||\n          this.state.quoting === true ||\n          this.state.field.length !== 0 ||\n          !this.__isCharTrimable(buf, pos);\n        // rtrim in non quoting is handle in __onField\n        const rappend = rtrim === false || this.state.wasQuoting === false;\n        if (lappend === true && rappend === true) {\n          this.state.field.append(chr);\n        } else if (rtrim === true && !this.__isCharTrimable(buf, pos)) {\n          return this.__error(\n            new CsvError(\n              \"CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE\",\n              [\n                \"Invalid Closing Quote:\",\n                \"found non trimable byte after quote\",\n                `at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n        } else {\n          if (lappend === false) {\n            pos += this.__isCharTrimable(buf, pos) - 1;\n          }\n          continue;\n        }\n      }\n      if (end === true) {\n        // Ensure we are not ending in a quoting state\n        if (this.state.quoting === true) {\n          const err = this.__error(\n            new CsvError(\n              \"CSV_QUOTE_NOT_CLOSED\",\n              [\n                \"Quote Not Closed:\",\n                `the parsing is finished with an opening quote at line ${this.info.lines}`,\n              ],\n              this.options,\n              this.__infoField(),\n            ),\n          );\n          if (err !== undefined) return err;\n        } else {\n          // Skip last line if it has no characters\n          if (\n            this.state.wasQuoting === true ||\n            this.state.record.length !== 0 ||\n            this.state.field.length !== 0\n          ) {\n            this.info.bytes = this.state.bufBytesStart + pos;\n            const errField = this.__onField();\n            if (errField !== undefined) return errField;\n            const errRecord = this.__onRecord(push);\n            if (errRecord !== undefined) return errRecord;\n          } else if (this.state.wasRowDelimiter === true) {\n            this.info.empty_lines++;\n          } else if (this.state.commenting === true) {\n            this.info.comment_lines++;\n          }\n        }\n      } else {\n        this.state.bufBytesStart += pos;\n        this.state.previousBuf = buf.slice(pos);\n      }\n      if (this.state.wasRowDelimiter === true) {\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    },\n    __onRecord: function (push) {\n      const {\n        columns,\n        group_columns_by_name,\n        encoding,\n        info,\n        from,\n        relax_column_count,\n        relax_column_count_less,\n        relax_column_count_more,\n        raw,\n        skip_records_with_empty_values,\n      } = this.options;\n      const { enabled, record } = this.state;\n      if (enabled === false) {\n        return this.__resetRecord();\n      }\n      // Convert the first line into column names\n      const recordLength = record.length;\n      if (columns === true) {\n        if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n          this.__resetRecord();\n          return;\n        }\n        return this.__firstLineToColumns(record);\n      }\n      if (columns === false && this.info.records === 0) {\n        this.state.expectedRecordLength = recordLength;\n      }\n      if (recordLength !== this.state.expectedRecordLength) {\n        const err =\n          columns === false\n            ? new CsvError(\n                \"CSV_RECORD_INCONSISTENT_FIELDS_LENGTH\",\n                [\n                  \"Invalid Record Length:\",\n                  `expect ${this.state.expectedRecordLength},`,\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              )\n            : new CsvError(\n                \"CSV_RECORD_INCONSISTENT_COLUMNS\",\n                [\n                  \"Invalid Record Length:\",\n                  `columns length is ${columns.length},`, // rename columns\n                  `got ${recordLength} on line ${this.info.lines}`,\n                ],\n                this.options,\n                this.__infoField(),\n                {\n                  record: record,\n                },\n              );\n        if (\n          relax_column_count === true ||\n          (relax_column_count_less === true &&\n            recordLength < this.state.expectedRecordLength) ||\n          (relax_column_count_more === true &&\n            recordLength > this.state.expectedRecordLength)\n        ) {\n          this.info.invalid_field_length++;\n          this.state.error = err;\n          // Error is undefined with skip_records_with_error\n        } else {\n          const finalErr = this.__error(err);\n          if (finalErr) return finalErr;\n        }\n      }\n      if (skip_records_with_empty_values === true && isRecordEmpty(record)) {\n        this.__resetRecord();\n        return;\n      }\n      if (this.state.recordHasError === true) {\n        this.__resetRecord();\n        this.state.recordHasError = false;\n        return;\n      }\n      this.info.records++;\n      if (from === 1 || this.info.records >= from) {\n        const { objname } = this.options;\n        // With columns, records are object\n        if (columns !== false) {\n          const obj = {};\n          // Transform record array to an object\n          for (let i = 0, l = record.length; i < l; i++) {\n            if (columns[i] === undefined || columns[i].disabled) continue;\n            // Turn duplicate columns into an array\n            if (\n              group_columns_by_name === true &&\n              obj[columns[i].name] !== undefined\n            ) {\n              if (Array.isArray(obj[columns[i].name])) {\n                obj[columns[i].name] = obj[columns[i].name].concat(record[i]);\n              } else {\n                obj[columns[i].name] = [obj[columns[i].name], record[i]];\n              }\n            } else {\n              obj[columns[i].name] = record[i];\n            }\n          }\n          // Without objname (default)\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: obj },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [obj[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? obj : [obj[objname], obj],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n          // Without columns, records are array\n        } else {\n          if (raw === true || info === true) {\n            const extRecord = Object.assign(\n              { record: record },\n              raw === true\n                ? { raw: this.state.rawBuffer.toString(encoding) }\n                : {},\n              info === true ? { info: this.__infoRecord() } : {},\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [record[objname], extRecord],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          } else {\n            const err = this.__push(\n              objname === undefined ? record : [record[objname], record],\n              push,\n            );\n            if (err) {\n              return err;\n            }\n          }\n        }\n      }\n      this.__resetRecord();\n    },\n    __firstLineToColumns: function (record) {\n      const { firstLineToHeaders } = this.state;\n      try {\n        const headers =\n          firstLineToHeaders === undefined\n            ? record\n            : firstLineToHeaders.call(null, record);\n        if (!Array.isArray(headers)) {\n          return this.__error(\n            new CsvError(\n              \"CSV_INVALID_COLUMN_MAPPING\",\n              [\n                \"Invalid Column Mapping:\",\n                \"expect an array from column function,\",\n                `got ${JSON.stringify(headers)}`,\n              ],\n              this.options,\n              this.__infoField(),\n              {\n                headers: headers,\n              },\n            ),\n          );\n        }\n        const normalizedHeaders = normalize_columns_array(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n        this.__resetRecord();\n        return;\n      } catch (err) {\n        return err;\n      }\n    },\n    __resetRecord: function () {\n      if (this.options.raw === true) {\n        this.state.rawBuffer.reset();\n      }\n      this.state.error = undefined;\n      this.state.record = [];\n      this.state.record_length = 0;\n    },\n    __onField: function () {\n      const { cast, encoding, rtrim, max_record_size } = this.options;\n      const { enabled, wasQuoting } = this.state;\n      // Short circuit for the from_line options\n      if (enabled === false) {\n        return this.__resetField();\n      }\n      let field = this.state.field.toString(encoding);\n      if (rtrim === true && wasQuoting === false) {\n        field = field.trimRight();\n      }\n      if (cast === true) {\n        const [err, f] = this.__cast(field);\n        if (err !== undefined) return err;\n        field = f;\n      }\n      this.state.record.push(field);\n      // Increment record length if record size must not exceed a limit\n      if (max_record_size !== 0 && typeof field === \"string\") {\n        this.state.record_length += field.length;\n      }\n      this.__resetField();\n    },\n    __resetField: function () {\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    },\n    __push: function (record, push) {\n      const { on_record } = this.options;\n      if (on_record !== undefined) {\n        const info = this.__infoRecord();\n        try {\n          record = on_record.call(null, record, info);\n        } catch (err) {\n          return err;\n        }\n        if (record === undefined || record === null) {\n          return;\n        }\n      }\n      push(record);\n    },\n    // Return a tuple with the error and the casted value\n    __cast: function (field) {\n      const { columns, relax_column_count } = this.options;\n      const isColumns = Array.isArray(columns);\n      // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n      if (\n        isColumns === true &&\n        relax_column_count &&\n        this.options.columns.length <= this.state.record.length\n      ) {\n        return [undefined, undefined];\n      }\n      if (this.state.castField !== null) {\n        try {\n          const info = this.__infoField();\n          return [undefined, this.state.castField.call(null, field, info)];\n        } catch (err) {\n          return [err];\n        }\n      }\n      if (this.__isFloat(field)) {\n        return [undefined, parseFloat(field)];\n      } else if (this.options.cast_date !== false) {\n        const info = this.__infoField();\n        return [undefined, this.options.cast_date.call(null, field, info)];\n      }\n      return [undefined, field];\n    },\n    // Helper to test if a character is a space or a line delimiter\n    __isCharTrimable: function (buf, pos) {\n      const isTrim = (buf, pos) => {\n        const { timchars } = this.state;\n        loop1: for (let i = 0; i < timchars.length; i++) {\n          const timchar = timchars[i];\n          for (let j = 0; j < timchar.length; j++) {\n            if (timchar[j] !== buf[pos + j]) continue loop1;\n          }\n          return timchar.length;\n        }\n        return 0;\n      };\n      return isTrim(buf, pos);\n    },\n    // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n    __isFloat: function (value) {\n      return value - parseFloat(value) + 1 >= 0; // Borrowed from jquery\n    },\n    __compareBytes: function (sourceBuf, targetBuf, targetPos, firstByte) {\n      if (sourceBuf[0] !== firstByte) return 0;\n      const sourceLength = sourceBuf.length;\n      for (let i = 1; i < sourceLength; i++) {\n        if (sourceBuf[i] !== targetBuf[targetPos + i]) return 0;\n      }\n      return sourceLength;\n    },\n    __isDelimiter: function (buf, pos, chr) {\n      const { delimiter, ignore_last_delimiters } = this.options;\n      if (\n        ignore_last_delimiters === true &&\n        this.state.record.length === this.options.columns.length - 1\n      ) {\n        return 0;\n      } else if (\n        ignore_last_delimiters !== false &&\n        typeof ignore_last_delimiters === \"number\" &&\n        this.state.record.length === ignore_last_delimiters - 1\n      ) {\n        return 0;\n      }\n      loop1: for (let i = 0; i < delimiter.length; i++) {\n        const del = delimiter[i];\n        if (del[0] === chr) {\n          for (let j = 1; j < del.length; j++) {\n            if (del[j] !== buf[pos + j]) continue loop1;\n          }\n          return del.length;\n        }\n      }\n      return 0;\n    },\n    __isRecordDelimiter: function (chr, buf, pos) {\n      const { record_delimiter } = this.options;\n      const recordDelimiterLength = record_delimiter.length;\n      loop1: for (let i = 0; i < recordDelimiterLength; i++) {\n        const rd = record_delimiter[i];\n        const rdLength = rd.length;\n        if (rd[0] !== chr) {\n          continue;\n        }\n        for (let j = 1; j < rdLength; j++) {\n          if (rd[j] !== buf[pos + j]) {\n            continue loop1;\n          }\n        }\n        return rd.length;\n      }\n      return 0;\n    },\n    __isEscape: function (buf, pos, chr) {\n      const { escape } = this.options;\n      if (escape === null) return false;\n      const l = escape.length;\n      if (escape[0] === chr) {\n        for (let i = 0; i < l; i++) {\n          if (escape[i] !== buf[pos + i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    __isQuote: function (buf, pos) {\n      const { quote } = this.options;\n      if (quote === null) return false;\n      const l = quote.length;\n      for (let i = 0; i < l; i++) {\n        if (quote[i] !== buf[pos + i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    __autoDiscoverRecordDelimiter: function (buf, pos) {\n      const { encoding } = this.options;\n      // Note, we don't need to cache this information in state,\n      // It is only called on the first line until we find out a suitable\n      // record delimiter.\n      const rds = [\n        // Important, the windows line ending must be before mac os 9\n        Buffer.from(\"\\r\\n\", encoding),\n        Buffer.from(\"\\n\", encoding),\n        Buffer.from(\"\\r\", encoding),\n      ];\n      loop: for (let i = 0; i < rds.length; i++) {\n        const l = rds[i].length;\n        for (let j = 0; j < l; j++) {\n          if (rds[i][j] !== buf[pos + j]) {\n            continue loop;\n          }\n        }\n        this.options.record_delimiter.push(rds[i]);\n        this.state.recordDelimiterMaxLength = rds[i].length;\n        return rds[i].length;\n      }\n      return 0;\n    },\n    __error: function (msg) {\n      const { encoding, raw, skip_records_with_error } = this.options;\n      const err = typeof msg === \"string\" ? new Error(msg) : msg;\n      if (skip_records_with_error) {\n        this.state.recordHasError = true;\n        if (this.options.on_skip !== undefined) {\n          this.options.on_skip(\n            err,\n            raw ? this.state.rawBuffer.toString(encoding) : undefined,\n          );\n        }\n        // this.emit('skip', err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        return undefined;\n      } else {\n        return err;\n      }\n    },\n    __infoDataSet: function () {\n      return {\n        ...this.info,\n        columns: this.options.columns,\n      };\n    },\n    __infoRecord: function () {\n      const { columns, raw, encoding } = this.options;\n      return {\n        ...this.__infoDataSet(),\n        error: this.state.error,\n        header: columns === true,\n        index: this.state.record.length,\n        raw: raw ? this.state.rawBuffer.toString(encoding) : undefined,\n      };\n    },\n    __infoField: function () {\n      const { columns } = this.options;\n      const isColumns = Array.isArray(columns);\n      return {\n        ...this.__infoRecord(),\n        column:\n          isColumns === true\n            ? columns.length > this.state.record.length\n              ? columns[this.state.record.length].name\n              : null\n            : this.state.record.length,\n        quoting: this.state.wasQuoting,\n      };\n    },\n  };\n};\n\nconst parse = function (data, opts = {}) {\n  if (typeof data === \"string\") {\n    data = Buffer.from(data);\n  }\n  const records = opts && opts.objname ? {} : [];\n  const parser = transform(opts);\n  const push = (record) => {\n    if (parser.options.objname === undefined) records.push(record);\n    else {\n      records[record[0]] = record[1];\n    }\n  };\n  const close = () => {};\n  const err1 = parser.parse(data, false, push, close);\n  if (err1 !== undefined) throw err1;\n  const err2 = parser.parse(undefined, true, push, close);\n  if (err2 !== undefined) throw err2;\n  return records;\n};\n\nexport { CsvError, parse };\n","import { parse } from \"csv-parse/browser/esm/sync\"\nimport { Label, NumberLabel } from \"./label\"\n\ntype StatData = { Date: string, Player: string }[]\n\nfunction datesBetween(from: Date, to: Date, inclusive: boolean): Date[] {\n\tconst dates = []\n\tlet current = from\n\twhile (inclusive ? current <= to : current < to) {\n\t\tdates.push(new Date(current))\n\t\tcurrent.setUTCDate(current.getUTCDate() + 1)\n\t}\n\treturn dates\n}\n\nfunction getDatasetForPlayer(data: StatData, dates: string[], player: string, stat: string): { label: Label, value: number }[] {\n\tconst linedata = data.filter(row => row.Player == player)\n\t\t.map(row => ({\n\t\t\tlabel: new Date(row.Date).toISOString().split(\"T\")[0],\n\t\t\tvalue: Number(row[stat]),\n\t\t}))\n\t\t.flatMap((row, i, rows) => {\n\t\t\tconst days = datesBetween(new Date(row.label), new Date(rows[i + 1]?.label ?? dates.at(-1)), i == rows.length - 1)\n\t\t\t// return days.map(day => ({ label: day.toISOString().split(\"T\")[0], value: row.value }))\n\t\t\treturn days.map(day => ({ label: new NumberLabel(Math.floor(day.valueOf() / 1000 / 60 / 60 / 24)), value: row.value }))\n\t\t})\n\t// Add first 0 for everyone\n\tlinedata.unshift({\n\t\tlabel: new NumberLabel(linedata[0].label.value - 1),\n\t\tvalue: 0,\n\t})\n\treturn linedata\n}\n\nexport async function getData(column: string) {\n\tconst data = parse(await (await fetch(\"./stats.csv\")).text(), { columns: true })\n\tconst players: Set<string> = new Set(data.map(row => row.Player))\n\tconst [minDate, maxDate] = data.map(row => new Date(row.Date).valueOf())\n\t\t.reduce(\n\t\t\t([min, max], date) => [Math.min(min, date), Math.max(max, date)],\n\t\t\t[Infinity, -Infinity])\n\tconst dates = datesBetween(new Date(minDate), new Date(maxDate), true)\n\t\t.map(date => date.toISOString().split(\"T\")[0])\n\n\treturn Object.fromEntries([...players].map(player => [player, getDatasetForPlayer(data, dates, player, column)]))\n}\n","import { turbo } from \"./colourschemes\"\nimport { Label, NumberLabel } from \"./label\"\nimport PopupElement from \"./popup\"\nimport { circle, g, line, polyline, rect, svg, text } from \"./svg\"\n\nexport { Label, NumberLabel } from \"./label\"\nexport { getData } from \"./data\"\n\nexport type Point = { label: Label, value: number }\n\nexport type Config = {\n\tdata: { [category: string]: Point[] }\n\txLabels?: Label[]\n\tyLabels?: Label[]\n\tstyles?: Styles\n}\n\nexport type Styles = {\n\txAxisSize?: number\n\tyAxisSize?: number\n\tminSpacePerXLabel?: number\n\tminSpacePerYLabel?: number\n}\n\nexport default class SVGraph extends HTMLElement {\n\tsvgElem: SVGElement\n\tpopupElem: PopupElement\n\tguideLine: SVGElement\n\n\tguidePoints: SVGCircleElement[]\n\n\tdata: { name: string, points: Point[] }[]\n\txLabels: Label[]\n\tyLabels: Label[]\n\tstyles: Styles\n\n\txRange: [Label, Label]\n\tmaxY: number\n\tprivate resizeObserver: ResizeObserver\n\n\tprivate getXLabelInterval = (width: number): number =>\n\t\tMath.ceil(this.xLabels.length / (width / this.styles.minSpacePerXLabel))\n\n\tprivate getYLabelInterval = (height: number): number =>\n\t\tMath.ceil(this.yLabels.length / (height / this.styles.minSpacePerYLabel))\n\n\tprivate getXLabels = (width: number): Label[] => this.xLabels.filter((_, i) => i % this.getXLabelInterval(width) == 0)\n\tprivate getYLabels = (height: number): Label[] => this.yLabels.filter((_, i) => i % this.getYLabelInterval(height) == 0)\n\n\tconstructor(config: Config) {\n\t\tsuper()\n\n\t\tconst shadow = this.attachShadow({ mode: \"open\" })\n\n\t\tconst styleElem = document.createElement(\"style\")\n\t\tstyleElem.textContent = `\n\t\t\t.popup {\n\t\t\t\tposition: absolute;\n\t\t\t\tpadding: 10px;\n\t\t\t\tbackground: #2228;\n\t\t\t\tborder: 1px solid #FFF1;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbox-shadow: 1px 2px 20px 0px #0008;\n\t\t\t\tbackdrop-filter: blur(20px);\n\t\t\t}\n\t\t\t.popup h3 {\n\t\t\t\tmargin: 0 0 0.8em 0;\n\t\t\t}\n\t\t\t.popup p {\n\t\t\t\tmargin: 0.5em 0 0 0;\n\t\t\t}\n\t\t\t\n\t\t\t.popup:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.guideline:not(.active) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.guideline:not(.active) ~ .guide-point {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`\n\t\tshadow.appendChild(styleElem)\n\n\t\tthis.svgElem = svg({ width: \"100%\", height: \"100%\", overflow: \"visible\", fill: \"white\" })\n\t\tshadow.appendChild(this.svgElem)\n\n\t\tthis.guideLine = line({ class: \"guideline\", from: [0, 0], to: [0, 0], stroke: \"#FFF8\", \"stroke-width\": 1 })\n\n\t\tthis.popupElem = new PopupElement()\n\t\tthis.popupElem.classList.add(\"popup\")\n\t\tshadow.appendChild(this.popupElem)\n\n\t\tthis.resizeObserver = new ResizeObserver((entries) => {\n\t\t\tthis.draw(entries[0].contentBoxSize[0].inlineSize, entries[0].contentBoxSize[0].blockSize)\n\t\t})\n\t\tthis.resizeObserver.observe(this.svgElem, { box: \"content-box\" })\n\n\t\tthis.update(config, false)\n\t}\n\n\tupdate({ data, xLabels, yLabels, styles: style }: Config, redraw = true) {\n\t\tthis.data = Object.entries(data).sort((a, b) => b[1].at(-1).value - a[1].at(-1).value).map(([name, points]) => ({ name, points }))\n\n\t\tthis.xRange = [\n\t\t\tthis.data.map(({ points }) => points[0])[0].label,\n\t\t\tthis.data.map(({ points }) => points.at(-1)).at(-1).label,\n\t\t]\n\t\tthis.maxY = this.data[0].points.maxByKey(\"value\").value\n\n\t\tthis.xLabels = xLabels ?? new Set(this.data.flatMap(({ points }) => points.map(x => x.label)))\n\t\t\t.values().toArray().sort((a, b) => a.getPos(...this.xRange) - b.getPos(...this.xRange))\n\t\tthis.yLabels = yLabels ?? [new NumberLabel(0), new NumberLabel(this.maxY)]\n\n\t\tthis.styles = {\n\t\t\txAxisSize: style?.xAxisSize ?? 30,\n\t\t\tyAxisSize: style?.yAxisSize ?? 30,\n\t\t\tminSpacePerXLabel: style?.minSpacePerXLabel ?? 50,\n\t\t\tminSpacePerYLabel: style?.minSpacePerYLabel ?? 50,\n\t\t}\n\n\t\tif (redraw) this.draw(this.svgElem.clientWidth, this.svgElem.clientHeight)\n\t}\n\n\tdraw(width: number, height: number) {\n\t\tthis.svgElem.innerHTML = \"\"\n\n\t\tthis.svgElem.appendChild(this.grid(this.styles.yAxisSize, 0, width - this.styles.yAxisSize, height - this.styles.xAxisSize))\n\t\tthis.svgElem.appendChild(this.guideLine)\n\t\tthis.guideLine.setAttribute(\"y2\", (height - this.styles.xAxisSize).toString())\n\t\tthis.svgElem.appendChild(this.axes(0, 0, width, height))\n\t\tthis.svgElem.appendChild(this.lines(this.styles.yAxisSize, 0, width - this.styles.yAxisSize, height - this.styles.xAxisSize))\n\t\t\n\t\tthis.guidePoints = this.data.map(line => circle({\n\t\t\tclass: \"guide-point\",\n\t\t\tcx: line.points[0].label.getPos(...this.xRange) + this.styles.yAxisSize,\n\t\t\tcy: (1 - line.points[0].value / this.maxY) * (height - this.styles.xAxisSize),\n\t\t\tr: 2,\n\t\t\tfill: \"white\"\n\t\t}))\n\t\tthis.svgElem.append(...this.guidePoints)\n\n\t\tconst area = rect({ x: this.styles.yAxisSize, y: 0, width: width - this.styles.yAxisSize, height: height - this.styles.xAxisSize, fill: \"transparent\" })\n\t\tthis.svgElem.appendChild(area)\n\t\tarea.addEventListener(\"mousemove\", (event: MouseEvent) => this.onMouseMove(event))\n\t\tarea.addEventListener(\"mouseleave\", (event: MouseEvent) => this.onMouseLeave(event))\n\t}\n\n\tprivate axes(x: number, y: number, width: number, height: number): SVGElement {\n\t\treturn g({ class: \"axes\", transform: `translate(${x}, ${y})` },\n\t\t\tthis.xAxis(this.styles.yAxisSize, height - this.styles.xAxisSize, width - this.styles.yAxisSize, this.styles.xAxisSize),\n\t\t\tthis.yAxis(0, 0, this.styles.yAxisSize, height - this.styles.xAxisSize)\n\t\t)\n\t}\n\n\tprivate xAxis = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"xaxis\" },\n\t\t\tline({ from: [x, y], to: [x + width, y], stroke: \"white\" }),\n\t\t\t...this.getXLabels(width).map(step => text({\n\t\t\t\tx: x + step.getPos(...this.xRange) * width,\n\t\t\t\ty: y + 20,\n\t\t\t\t\"text-anchor\": \"middle\"\n\t\t\t}, new Text(step.text)))\n\t\t)\n\n\tprivate yAxis = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"yaxis\" },\n\t\t\tline({ from: [x + width, y], to: [x + width, y + height], stroke: \"white\" }),\n\t\t\t...this.getYLabels(height).map(step => text({\n\t\t\t\tx: x + width - 10,\n\t\t\t\ty: y + (1 - step.getPos(new NumberLabel(0), new NumberLabel(this.maxY))) * height + 5,\n\t\t\t\t\"text-anchor\": \"end\"\n\t\t\t}, new Text(step.text)))\n\t\t)\n\n\tprivate grid = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"grid\", transform: `translate(${x}, ${y})` },\n\t\t\t...this.getXLabels(width).map(step => line({\n\t\t\t\tfrom: [step.getPos(...this.xRange) * width, 0],\n\t\t\t\tto: [step.getPos(...this.xRange) * width, height],\n\t\t\t\tstroke: \"#FFF4\"\n\t\t\t})),\n\t\t\t...this.getYLabels(height).map(step => line({\n\t\t\t\tfrom: [0, (1 - step.getPos(new NumberLabel(0), new NumberLabel(this.maxY))) * height],\n\t\t\t\tto: [width, (1 - step.getPos(new NumberLabel(0), new NumberLabel(this.maxY))) * height],\n\t\t\t\tstroke: \"#FFF4\"\n\t\t\t})),\n\t\t)\n\n\tprivate lines = (x: number, y: number, width: number, height: number): SVGElement =>\n\t\tg({ class: \"lines\", transform: `translate(${x}, ${y})`, \"stroke-width\": \"2\" },\n\t\t\t...this.data.map(({ name, points: values }, i) => {\n\t\t\t\tconst colour = turbo[Math.floor((i + 1) / (this.data.length + 1) * turbo.length)]\n\t\t\t\tconst points = values.map(point => [\n\t\t\t\t\tpoint.label.getPos(...this.xRange) * width,\n\t\t\t\t\t(1 - point.value / this.maxY) * height\n\t\t\t\t] as [number, number])\n\t\t\t\treturn polyline({ points, fill: \"none\", stroke: colour })\n\t\t\t})\n\t\t)\n\n\tprivate onMouseMove(event: MouseEvent) {\n\t\tconst rect = this.svgElem.getBoundingClientRect()\n\t\tconst x = event.clientX - rect.left\n\n\t\tconst points = this.popupElem.update(\n\t\t\tevent.clientX, event.clientY,\n\t\t\t(x - this.styles.yAxisSize) / (rect.width - this.styles.yAxisSize),\n\t\t\tthis.xRange,\n\t\t\tthis.data\n\t\t)\n\t\t\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tthis.guidePoints[i].setAttribute(\"cx\", (points[i].label.getPos(...this.xRange) * (rect.width - this.styles.yAxisSize) + this.styles.yAxisSize).toString())\n\t\t\tthis.guidePoints[i].setAttribute(\"cy\", ((1 - points[i].value / this.maxY) * (rect.height - this.styles.xAxisSize)).toString())\n\t\t}\n\n\t\tthis.guideLine.classList.add(\"active\")\n\t\tthis.guideLine.setAttribute(\"x1\", x.toString())\n\t\tthis.guideLine.setAttribute(\"x2\", x.toString())\n\t}\n\n\tprivate onMouseLeave(event: MouseEvent) {\n\t\tthis.popupElem.hide()\n\t\tthis.guideLine.classList.remove(\"active\")\n\t}\n}\n\ncustomElements.define(\"svg-graph\", SVGraph)\n\ndeclare global {\n\tinterface Array<T> {\n\t\tmax(): T\n\t\tmaxBy(fn: (x: T) => number): T\n\t\tmaxByKey(key: string): T\n\t\tmin(): T\n\t\tminBy(fn: (x: T) => number): T\n\t\tminByKey(key: string): T\n\t}\n}\n\nArray.prototype.max = function () { return this.reduce((a, b) => Math.max(a, b), 0) }\nArray.prototype.maxBy = function <T>(fn: (x: T) => number) { return this.reduce((a, b) => fn(a) > fn(b) ? a : b) }\nArray.prototype.maxByKey = function (key: string) { return this.reduce((a, b) => a[key] > b[key] ? a : b) }\n\nArray.prototype.min = function () { return this.reduce((a, b) => Math.min(a, b), 0) }\nArray.prototype.minBy = function <T>(fn: (x: T) => number) { return this.reduce((a, b) => fn(a) < fn(b) ? a : b) }\nArray.prototype.minByKey = function (key: string) { return this.reduce((a, b) => a[key] < b[key] ? a : b) }\n"],"names":["turbo","NumberLabel","value","constructor","this","text","toString","getPos","min","max","element","name","attrs","children","elem","document","createElement","key","undefined","setAttribute","child","appendChild","p","nearestPointForLabel","arr","to","range","map","x","Math","abs","label","minBy","nearestLabel","t","data","nearestLabelsIdx","points","nearestIdx","idx","closestIdx","i","l","PopupElement","HTMLDivElement","super","show","classList","add","hide","remove","move","y","style","left","top","setValues","point","Text","update","innerHTML","h3","nearestPoints","customElements","define","extends","ns","createElementNS","g","line","x1","from","y1","x2","y2","global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","len","length","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","write","c","rt","isNaN","floor","log","LN2","isArray","call","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","Error","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","poolSize","_augment","Symbol","species","alloc","fill","allocUnsafeSlow","isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","CsvError","message","options","contexts","captureStackTrace","context","JSON","parse","stringify","normalize_columns_array","columns","normalizedColumns","column","disabled","ResizeableBuffer","prepend","resize","clone","append","reset","init_state","bomSkipped","bufBytesStart","castField","cast_function","commenting","error","enabled","from_line","escaping","escapeIsQuote","escape","quote","expectedRecordLength","field","firstLineToHeaders","cast_first_line_to_header","needMoreDataSize","comment","delimiter","previousBuf","quoting","stop","rawBuffer","record","recordHasError","record_length","recordDelimiterMaxLength","record_delimiter","v","trimChars","wasQuoting","wasRowDelimiter","timchars","normalize_options","opts","opt","_","bom","cast","cast_date","date","Date","group_columns_by_name","comment_no_infix","delimiter_json","test","isInteger","ignore_last_delimiters","info","max_record_size","objname","on_record","on_skip","raw","rd","relax_column_count","relax_column_count_less","relax_column_count_more","relax_quotes","skip_empty_lines","skip_records_with_empty_values","skip_records_with_error","rtrim","ltrim","to_line","isRecordEmpty","every","boms","utf8","utf16le","records","parser","original_options","comment_lines","empty_lines","invalid_field_length","lines","state","__needMoreData","bufLen","nextBuf","close","bomLength","__autoDiscoverRecordDelimiter","chr","__isEscape","__isQuote","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRecordDelimiter","__isRecordDelimiter","err","__error","__infoField","Object","keys","filter","Boolean","recordDelimiterLength","__resetField","__resetRecord","errField","__onField","errRecord","__onRecord","delimiterLength","lappend","rappend","recordLength","__firstLineToColumns","finalErr","extRecord","assign","__infoRecord","__push","headers","normalizedHeaders","trimRight","f","__cast","__isFloat","parseFloat","loop1","timchar","isTrim","sourceBuf","targetBuf","targetPos","sourceLength","del","rdLength","rds","loop","msg","__infoDataSet","header","index","isColumns","transform","err1","err2","datesBetween","inclusive","dates","current","setUTCDate","getUTCDate","getDatasetForPlayer","player","stat","linedata","row","Player","toISOString","split","flatMap","rows","at","day","valueOf","unshift","async","getData","fetch","players","Set","minDate","maxDate","reduce","fromEntries","SVGraph","HTMLElement","svgElem","popupElem","guideLine","guidePoints","xLabels","yLabels","styles","xRange","maxY","resizeObserver","getXLabelInterval","width","ceil","minSpacePerXLabel","getYLabelInterval","height","minSpacePerYLabel","getXLabels","getYLabels","config","shadow","attachShadow","mode","styleElem","textContent","xmlns","svg","overflow","class","stroke","ResizeObserver","entries","draw","contentBoxSize","inlineSize","blockSize","observe","box","redraw","sort","maxByKey","values","toArray","xAxisSize","yAxisSize","clientWidth","clientHeight","grid","axes","circle","cx","cy","r","area","rect","addEventListener","event","onMouseMove","onMouseLeave","xAxis","yAxis","step","colour","polyline","getBoundingClientRect","clientX","clientY","maxBy","fn","minByKey"],"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","x_google_ignoreList":[5]}